====[ PROJECT DUMP - METADATA ]=====================================================================
Root   : D:\theqah
Output : D:\theqah\project-dump.txt
When   : 2025-09-20T06:35:49.463Z
Rules  : skip binaries=true, skip .env*=true, maxBytes=1.0 MB

====[ FILE LIST ]===================================================================================
.firebase/logs/vsce-debug.log	(2.2 MB)
.firebaserc	(82 B)
.gitignore	(480 B)
components.json	(449 B)
eslint.config.mjs	(393 B)
firebase.json	(103 B)
firestore.indexes.json	(6.0 KB)
firestore.rules	(3.2 KB)
middleware.ts	(2.7 KB)
next-env.d.ts	(213 B)
next.config.ts	(1.9 KB)
package-lock.json	(414.7 KB)
package.json	(2.2 KB)
postcss.config.js	(93 B)
public/android-chrome-192x192.png	(27.5 KB)
public/android-chrome-512x512.png	(151.3 KB)
public/apple-touch-icon.png	(24.8 KB)
public/favicon-16x16.png	(637 B)
public/favicon-32x32.png	(1.5 KB)
public/favicon.ico	(15.0 KB)
public/file.svg	(391 B)
public/globe.svg	(1.0 KB)
public/logo.png	(58.5 KB)
public/next.svg	(1.3 KB)
public/site.webmanifest	(263 B)
public/test-widget.html	(560 B)
public/vercel.svg	(128 B)
public/widgets/logo.png	(58.5 KB)
public/widgets/theqah-widget.js	(26.0 KB)
public/window.svg	(385 B)
quick-smtp-check.mjs	(409 B)
README.md	(1.4 KB)
src/components/admin/AdminAnalytics.tsx	(12.4 KB)
src/components/admin/AdminReports.tsx	(8.2 KB)
src/components/admin/AdminReviews.tsx	(20.4 KB)
src/components/admin/AdminStores.tsx	(11.8 KB)
src/components/admin/tabs/TestNotifyTab.tsx	(7.6 KB)
src/components/dashboard/Analytics.tsx	(38.1 KB)
src/components/dashboard/OrdersTab.tsx	(16.9 KB)
src/components/dashboard/Reviews.tsx	(28.6 KB)
src/components/dashboard/reviews/RepliesTab.tsx	(3.6 KB)
src/components/dashboard/settings/MessageSettings.tsx	(5.9 KB)
src/components/dashboard/settings/SallaIntegrationTab.tsx	(7.7 KB)
src/components/dashboard/settings/StoreInfoTab.tsx	(2.9 KB)
src/components/dashboard/settings/WidgetEmbedTab.tsx	(4.0 KB)
src/components/dashboard/settings/ZidIntegrationTab.tsx	(1.9 KB)
src/components/dashboard/StoreSettings.tsx	(19.5 KB)
src/components/dashboard/Support.tsx	(4.0 KB)
src/components/layout/admin/AdminLayout.tsx	(478 B)
src/components/layout/admin/AdminNavbar.tsx	(525 B)
src/components/layout/admin/AdminSidebar.tsx	(1.0 KB)
src/components/layout/customer/CustomerLayout.tsx	(373 B)
src/components/layout/customer/CustomerNavbar.tsx	(409 B)
src/components/layout/store/StoreLayout.tsx	(477 B)
src/components/layout/store/StoreNavbar.tsx	(525 B)
src/components/layout/store/StoreSidebar.tsx	(1.0 KB)
src/components/LoadingSpinner.tsx	(3.3 KB)
src/components/NavbarLanding.tsx	(4.2 KB)
src/components/ui/alert.tsx	(1.6 KB)
src/components/ui/badge.tsx	(1.1 KB)
src/components/ui/button.tsx	(1.9 KB)
src/components/ui/card.tsx	(1.8 KB)
src/components/ui/input.tsx	(768 B)
src/components/ui/label.tsx	(710 B)
src/components/ui/select.tsx	(5.6 KB)
src/components/ui/separator.tsx	(756 B)
src/components/ui/sheet.tsx	(4.2 KB)
src/components/ui/switch.tsx	(1.1 KB)
src/components/UploadcareWidget.tsx	(3.0 KB)
src/contexts/AuthContext.tsx	(3.1 KB)
src/get-admin-token.ts	(667 B)
src/lib/auth/login.ts	(2.1 KB)
src/lib/auth/tokenManager.ts	(738 B)
src/lib/axiosInstance.ts	(2.4 KB)
src/lib/env.ts	(2.0 KB)
src/lib/firebase.ts	(838 B)
src/lib/firebaseAdmin.ts	(2.1 KB)
src/lib/logger.ts	(1.0 KB)
src/lib/oursms.ts	(935 B)
src/lib/salla-admin.ts	(1.0 KB)
src/lib/salla.ts	(1.1 KB)
src/lib/salla/verify.ts	(1.2 KB)
src/lib/utils.ts	(166 B)
src/lib/zid/auth.ts	(1.6 KB)
src/lib/zid/fetch.ts	(779 B)
src/lib/zid/scopes.ts	(309 B)
src/lib/zid/tokens.ts	(1012 B)
src/lib/zid/webhooks.ts	(991 B)
src/middleware.ts	(946 B)
src/pages/_app.tsx	(1.0 KB)
src/pages/admin/dashboard.tsx	(2.1 KB)
src/pages/api/_admin/ping.ts	(1.1 KB)
src/pages/api/admin/alerts.ts	(1.7 KB)
src/pages/api/admin/bootstrap.ts	(393 B)
src/pages/api/admin/dashboard.ts	(2.7 KB)
src/pages/api/admin/reports/resolve.ts	(1.7 KB)
src/pages/api/admin/review-reports.ts	(2.6 KB)
src/pages/api/admin/reviews/[id].ts	(5.6 KB)
src/pages/api/admin/reviews/bulk.ts	(6.3 KB)
src/pages/api/admin/reviews/hide.ts	(1.0 KB)
src/pages/api/admin/reviews/index.ts	(4.8 KB)
src/pages/api/admin/salla/register-webhooks.ts	(1.9 KB)
src/pages/api/admin/sms-credits.ts	(1.1 KB)
src/pages/api/admin/stats.ts	(5.1 KB)
src/pages/api/admin/stores.ts	(4.6 KB)
src/pages/api/admin/test-notify.ts	(2.3 KB)
src/pages/api/admin/users.ts	(1.8 KB)
src/pages/api/ai/insights.ts	(2.3 KB)
src/pages/api/auth/exchange-onboarding.ts	(4.0 KB)
src/pages/api/auth/session.ts	(5.1 KB)
src/pages/api/orders/add.ts	(3.1 KB)
src/pages/api/orders/get.ts	(2.3 KB)
src/pages/api/orders/import.ts	(3.1 KB)
src/pages/api/orders/index.ts	(1.6 KB)
src/pages/api/orders/send-review.ts	(9.5 KB)
src/pages/api/public/pixel.ts	(1.1 KB)
src/pages/api/public/reviews.ts	(3.9 KB)
src/pages/api/public/reviews/resolve.ts	(5.0 KB)
src/pages/api/public/widget.ts	(6.3 KB)
src/pages/api/report-review.ts	(1.1 KB)
src/pages/api/review-token.ts	(1.4 KB)
src/pages/api/reviews/[id]/reply.ts	(2.4 KB)
src/pages/api/reviews/export-csv.ts	(5.2 KB)
src/pages/api/reviews/export-pdf.ts	(5.5 KB)
src/pages/api/reviews/list.ts	(1.4 KB)
src/pages/api/reviews/moderate.ts	(6.2 KB)
src/pages/api/reviews/submit.ts	(6.1 KB)
src/pages/api/salla/callback.ts	(10.2 KB)
src/pages/api/salla/connect.ts	(1.8 KB)
src/pages/api/salla/disconnect.ts	(5.1 KB)
src/pages/api/salla/refresh.ts	(2.3 KB)
src/pages/api/salla/status.ts	(3.9 KB)
src/pages/api/salla/subscribe.ts	(5.1 KB)
src/pages/api/salla/verify.ts	(2.2 KB)
src/pages/api/salla/webhook.ts	(17.2 KB)
src/pages/api/settings/validate.ts	(1.4 KB)
src/pages/api/sms/inbound.ts	(653 B)
src/pages/api/sms/status.ts	(4.6 KB)
src/pages/api/store/app-settings.ts	(1.3 KB)
src/pages/api/store/connection.ts	(857 B)
src/pages/api/store/dashboard.ts	(3.9 KB)
src/pages/api/store/info.ts	(2.6 KB)
src/pages/api/store/settings.ts	(1.7 KB)
src/pages/api/store/update-info.ts	(986 B)
src/pages/api/support-ticket.ts	(1.3 KB)
src/pages/api/test/sms.ts	(3.0 KB)
src/pages/api/zid/callback.ts	(3.0 KB)
src/pages/api/zid/disconnect.ts	(835 B)
src/pages/api/zid/refresh.ts	(2.7 KB)
src/pages/api/zid/start.ts	(1.6 KB)
src/pages/api/zid/status.ts	(1.5 KB)
src/pages/api/zid/webhook.ts	(7.5 KB)
src/pages/connect/index.tsx	(986 B)
src/pages/connect/salla.tsx	(4.0 KB)
src/pages/connect/zid.tsx	(999 B)
src/pages/dashboard.tsx	(6.2 KB)
src/pages/dashboard/integrations.tsx	(2.6 KB)
src/pages/embedded/index.tsx	(293 B)
src/pages/embedded/reviews.tsx	(4.8 KB)
src/pages/faq.tsx	(15.8 KB)
src/pages/index.tsx	(5.6 KB)
src/pages/login.tsx	(3.9 KB)
src/pages/onboarding/set-password.tsx	(3.4 KB)
src/pages/privacy-policy.tsx	(3.6 KB)
src/pages/r/[id].tsx	(4.3 KB)
src/pages/report.tsx	(4.3 KB)
src/pages/review/[token].tsx	(9.9 KB)
src/pages/reviews.tsx	(3.9 KB)
src/pages/salla/oauth-info.tsx	(902 B)
src/pages/signup.tsx	(5.6 KB)
src/pages/support.tsx	(5.4 KB)
src/pages/terms.tsx	(3.4 KB)
src/server/auth/requireAdmin.ts	(913 B)
src/server/auth/requireUser.ts	(572 B)
src/server/firebase-admin.ts	(342 B)
src/server/idempotency.ts	(919 B)
src/server/messaging/email-dmail.ts	(1.5 KB)
src/server/messaging/invite-text.ts	(318 B)
src/server/messaging/phone.ts	(674 B)
src/server/messaging/send-invite.ts	(7.8 KB)
src/server/messaging/send-rejection.ts	(1.9 KB)
src/server/messaging/send-sms.ts	(7.8 KB)
src/server/messaging/sms-length.ts	(755 B)
src/server/messaging/templates.ts	(437 B)
src/server/messaging/texts.ts	(929 B)
src/server/moderation/checkReview.ts	(5.6 KB)
src/server/moderation/index.ts	(3.6 KB)
src/server/moderation/openai-moderation.ts	(2.7 KB)
src/server/moderation/prompt.ts	(3.1 KB)
src/server/notifications.ts	(487 B)
src/server/rate-limit.ts	(914 B)
src/server/review-tokens.ts	(2.1 KB)
src/server/reviews/invites.ts	(1.2 KB)
src/server/salla/oauth.ts	(3.1 KB)
src/server/salla/webhook-verify.ts	(950 B)
src/server/short-links.ts	(2.0 KB)
src/server/withCors.ts	(1.1 KB)
src/server/zid/state.ts	(979 B)
src/server/zid/tokens.ts	(883 B)
src/styles/globals.css	(4.9 KB)
src/types/api.d.ts	(169 B)
src/types/uploadcare.d.ts	(681 B)
src/utils/apiClient.ts	(1.1 KB)
src/utils/email.ts	(1.5 KB)
src/utils/getAuth.ts	(494 B)
src/utils/getAuthFromRequest.ts	(731 B)
src/utils/isServer.ts	(62 B)
src/utils/verifyAdmin.ts	(2.3 KB)
src/utils/verifyStore.ts	(1.6 KB)
src/utils/verifyUser.ts	(1.1 KB)
tailwind.config.ts	(2.2 KB)
test.html	(132 B)
tools/dump-project.mjs	(6.5 KB)
tsconfig.json	(602 B)

====[ FILE CONTENTS ]===============================================================================
====[ SKIP (too large): .firebase/logs/vsce-debug.log ]=============================================
Size: 2.2 MB > limit 1.0 MB

====[ START FILE: .firebaserc (82 B) ]==============================================================
{
  "projects": {
    "prod": "theqah-d3ee0"
  },
  "targets": {},
  "etags": {}
}
====[ END FILE: .firebaserc ]=======================================================================

====[ START FILE: .gitignore (480 B) ]==============================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
====[ END FILE: .gitignore ]========================================================================

====[ START FILE: components.json (449 B) ]=========================================================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": false,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "src/styles/globals.css",
    "baseColor": "zinc",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}
====[ END FILE: components.json ]===================================================================

====[ START FILE: eslint.config.mjs (393 B) ]=======================================================
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;
====[ END FILE: eslint.config.mjs ]=================================================================

====[ START FILE: firebase.json (103 B) ]===========================================================
{
  "firestore": {
    "indexes": "firestore.indexes.json",
    "rules": "firestore.rules"
  }
}
====[ END FILE: firebase.json ]=====================================================================

====[ START FILE: firestore.indexes.json (6.0 KB) ]=================================================
{
  "indexes": [
   
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",  "order": "ASCENDING" },
        { "fieldPath": "productId", "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",    "order": "ASCENDING" },
        { "fieldPath": "productId",   "order": "ASCENDING" },
        { "fieldPath": "status",      "order": "ASCENDING" },
        { "fieldPath": "createdAt",   "order": "DESCENDING" }
      ]
    },
    
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "productId", "order": "ASCENDING" },
        { "fieldPath": "status",    "order": "ASCENDING" },
        { "fieldPath": "storeUid",  "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
  
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",   "order": "ASCENDING" },
        { "fieldPath": "productId",  "order": "ASCENDING" },
        { "fieldPath": "published",  "order": "ASCENDING" },
        { "fieldPath": "createdAt",  "order": "DESCENDING" }
      ]
    },
  
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",     "order": "ASCENDING" },
        { "fieldPath": "productId",    "order": "ASCENDING" },
        { "fieldPath": "publishedAt",  "order": "DESCENDING" }
      ]
    },
    
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",  "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },

  
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeName", "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
   
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "stars",     "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
   
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "published", "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
   
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeName", "order": "ASCENDING" },
        { "fieldPath": "published", "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeName", "order": "ASCENDING" },
        { "fieldPath": "stars",     "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "stars",     "order": "ASCENDING" },
        { "fieldPath": "published", "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
 
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "stars",     "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "stars",     "order": "DESCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },

    {
      "collectionGroup": "orders",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",  "order": "ASCENDING" },
        { "fieldPath": "createdAt", "order": "DESCENDING" }
      ]
    },

    {
      "collectionGroup": "stores",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "name_lower", "order": "ASCENDING" },
        { "fieldPath": "createdAt",  "order": "DESCENDING" }
      ]
    },

   
    {
      "collectionGroup": "review_invites",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid", "order": "ASCENDING" },
        { "fieldPath": "orderId",  "order": "ASCENDING" }
      ]
    },

  
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",    "order": "ASCENDING" },
        { "fieldPath": "status",      "order": "ASCENDING" },
        { "fieldPath": "publishedAt", "order": "DESCENDING" }
      ]
    },
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",    "order": "ASCENDING" },
        { "fieldPath": "status",      "order": "ASCENDING" },
        { "fieldPath": "publishedAt", "order": "ASCENDING" }
      ]
    },
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",    "order": "ASCENDING" },
        { "fieldPath": "status",      "order": "ASCENDING" },
        { "fieldPath": "productId",   "order": "ASCENDING" },
        { "fieldPath": "publishedAt", "order": "DESCENDING" }
      ]
    },
    {
      "collectionGroup": "reviews",
      "queryScope": "COLLECTION",
      "fields": [
        { "fieldPath": "storeUid",    "order": "ASCENDING" },
        { "fieldPath": "status",      "order": "ASCENDING" },
        { "fieldPath": "productId",   "order": "ASCENDING" },
        { "fieldPath": "publishedAt", "order": "ASCENDING" }
      ]
    }
  ],
  "fieldOverrides": []
}
====[ END FILE: firestore.indexes.json ]============================================================

====[ START FILE: firestore.rules (3.2 KB) ]========================================================
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null && request.auth.uid != null;
    }
    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }
    function isAdmin() {
      // نتوقع custom claim admin=true من مسار admin/users.ts
      return isSignedIn() && (request.auth.token.admin == true);
    }

    // عامة للقراءة فقط (لو عندك مستندات معلومات عامة)
    match /public/{document=**} {
      allow read: if true;
      allow write: if false;
    }

    // متجر
    match /stores/{uid} {
      allow read, write: if isOwner(uid) || isAdmin();
    }

    // الطلبات
    match /orders/{id} {
      // إصلاح الأقواس لضمان الأولوية
      allow read, update, delete: if (isSignedIn() && resource.data.storeUid == request.auth.uid) || isAdmin();
      allow create:               if (isSignedIn() && request.resource.data.storeUid == request.auth.uid) || isAdmin();
    }

    // التقييمات
    match /reviews/{id} {
      // القراءة لصاحب المتجر أو الأدمن
      allow read: if (isSignedIn() && resource.data.storeUid == request.auth.uid) || isAdmin();
      // الإنشاء/التعديل/الحذف من السيرفر (Admin SDK) أو الأدمن فقط
      allow create, update, delete: if isAdmin();
    }

    // دعوات التقييم (تُنشأ من السيرفر)
    match /review_invites/{id} {
      // قراءة للمالك (لو حبيت تعرض سجل الإرسال) أو الأدمن
      allow read:  if (isSignedIn() && resource.data.storeUid == request.auth.uid) || isAdmin();
      // كتابة من السيرفر فقط
      allow create, update, delete: if isAdmin();
    }

    // توكنات الروابط (سريّة) — سيرفر فقط
    match /review_tokens/{id} {
      allow read, write: if isAdmin();
    }

    // روابط مختصرة — يحلّها السيرفر فقط
    match /short_links/{code} {
      allow read, write: if isAdmin();
    }

    // بلاغات التقييمات — السماح بإنشاء من أي مستخدم (عبر API/Client)، والباقي للأدمن
    match /review_reports/{id} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }

    // سجلات/تنبيهات/لوجات إدارية (أدمن فقط)
    match /admin_audit_logs/{id} {
      allow read, write: if isAdmin();
    }
    match /admin_alerts/{id} {
      allow read, write: if isAdmin();
    }

    // تكامل زد/سلة والتخزين الحساس — سيرفر/أدمن فقط
    match /zid_tokens/{uid} {
      allow read, write: if isAdmin();
    }
    match /zid_states/{id} {
      allow read, write: if isAdmin();
    }
    match /zid_events/{id} {
      allow read, write: if isAdmin();
    }
    match /salla_tokens/{uid} {
      allow read, write: if isAdmin();
    }

    // مفاتيح idempotency (إن وُجدت)
    match /idempotency_keys/{id} {
      allow read, write: if isAdmin();
    }
  }
}
====[ END FILE: firestore.rules ]===================================================================

====[ START FILE: middleware.ts (2.7 KB) ]==========================================================
// middleware.ts
import { NextResponse, type NextRequest } from "next/server";

const WINDOW_MS = 60_000; // 60s نافذة
const MAX_REQS = 20;      // أقصى عدد داخل النافذة

// in-memory (تجريبي فقط؛ للإنتاج استخدم Redis/KV)
const buckets = new Map<string, { resetAt: number; count: number }>();

function getClientIp(req: NextRequest) {
  // الأفضلية لـ Cloudflare، ثم XFF، ثم X-Real-IP، ثم req.ip، ثم fallback
  const cf = req.headers.get("cf-connecting-ip");
  if (cf) return cf;

  const xff = req.headers.get("x-forwarded-for");
  if (xff) {
    const ip = xff.split(",")[0]?.trim();
    if (ip) return ip;
  }

  const real = req.headers.get("x-real-ip");
  if (real) return real;

  // قد تكون متاحة حسب المنصة
  const maybeIp = (req as unknown as { ip?: string }).ip;
  if (maybeIp) return maybeIp;

  // أضعف fallback
  const ua = req.headers.get("user-agent") || "ua:unknown";
  return `anon:${ua.slice(0, 32)}`;
}

function rateKey(req: NextRequest) {
  return `${getClientIp(req)}:${req.nextUrl.pathname}`;
}

function touchBucket(now: number, b?: { resetAt: number; count: number }) {
  if (!b || now >= b.resetAt) {
    return { resetAt: now + WINDOW_MS, count: 0 };
  }
  return b;
}

function cleanupExpired(now: number) {
  for (const [k, v] of buckets) {
    if (now >= v.resetAt) buckets.delete(k);
  }
}

export function middleware(req: NextRequest) {
  // طبّق فقط على الراوتس المحددة في config.matcher
  // وتجاوز preflight
  if (req.method === "OPTIONS") return NextResponse.next();

  const now = Date.now();
  cleanupExpired(now);

  const key = rateKey(req);
  const bucket = touchBucket(now, buckets.get(key));

  if (bucket.count >= MAX_REQS) {
    const retryAfter = Math.max(1, Math.ceil((bucket.resetAt - now) / 1000));
    const res = new NextResponse("Too Many Requests", { status: 429 });
    res.headers.set("Retry-After", String(retryAfter));
    res.headers.set("RateLimit-Policy", `${MAX_REQS};w=${Math.round(WINDOW_MS / 1000)}`);
    res.headers.set("RateLimit-Remaining", "0");
    res.headers.set("RateLimit-Reset", String(Math.ceil(bucket.resetAt / 1000)));
    return res;
  }

  bucket.count += 1;
  buckets.set(key, bucket);

  const remaining = Math.max(0, MAX_REQS - bucket.count);
  const res = NextResponse.next();
  res.headers.set("RateLimit-Policy", `${MAX_REQS};w=${Math.round(WINDOW_MS / 1000)}`);
  res.headers.set("RateLimit-Remaining", String(remaining));
  res.headers.set("RateLimit-Reset", String(Math.ceil(bucket.resetAt / 1000)));
  return res;
}

export const config = {
  matcher: ["/api/zid/webhook", "/api/reviews/submit"],
};
====[ END FILE: middleware.ts ]=====================================================================

====[ START FILE: next-env.d.ts (213 B) ]===========================================================
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/pages/api-reference/config/typescript for more information.
====[ END FILE: next-env.d.ts ]=====================================================================

====[ START FILE: next.config.ts (1.9 KB) ]=========================================================
/** @type {import('next').NextConfig} */
const isProd = process.env.NODE_ENV === "production";

// 🧱 الدومينات المسموح لها تعمل embed (iframe) لصفحاتك
const ALLOWED_ANCESTORS = [
  "'self'",
  // متاجر زد:
  "https://*.zid.sa",
  "https://*.zid.store",
  // متاجر سلة (الإنتاج + بيئة الديمو):
  "https://*.salla.sa",
  "https://*.salla.dev",
  // لو هتعمل embed داخل موقعك نفسه (اختياري):
  "https://www.theqah.com.sa",
  "https://theqah.com.sa",
  // معاينات Vercel (اختياري أثناء التطوير):
  "https://*.vercel.app",
];

if (!isProd) {
  ALLOWED_ANCESTORS.push("http://localhost:3000");
  // مثال لو بتستخدم دومين محلي:
  // ALLOWED_ANCESTORS.push("http://dev.theqah.test:3000");
}

// 👇 تقدر تزود سماحيات من متغير بيئة (قائمة مفصولة بفواصل)
if (process.env.CSP_EXTRA_ANCESTORS) {
  ALLOWED_ANCESTORS.push(
    ...process.env.CSP_EXTRA_ANCESTORS
      .split(",")
      .map(s => s.trim())
      .filter(Boolean)
  );
}

const cspFrameAncestors = `frame-ancestors ${ALLOWED_ANCESTORS.join(" ")};`;

const nextConfig = {
  async headers() {
    return [
      // يطبّق على /embedded مباشرة
      {
        source: "/embedded",
        headers: [
          { key: "Content-Security-Policy", value: cspFrameAncestors },
          // لا تضيف X-Frame-Options هنا — CSP كافي
        ],
      },
      // ويطبّق على أي مسارات فرعية تحت /embedded
      {
        source: "/embedded/:path*",
        headers: [
          { key: "Content-Security-Policy", value: cspFrameAncestors },
        ],
      },
      // (اختياري) لو عندك مسار تاني للودجت:
      // {
      //   source: "/widget/:path*",
      //   headers: [{ key: "Content-Security-Policy", value: cspFrameAncestors }],
      // },
    ];
  },
};

module.exports = nextConfig;
====[ END FILE: next.config.ts ]====================================================================

====[ START FILE: package-lock.json (414.7 KB) ]====================================================
{
  "name": "theqah",
  "version": "0.1.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "theqah",
      "version": "0.1.0",
      "dependencies": {
        "@fontsource/cairo": "^5.2.6",
        "@fontsource/tajawal": "^5.2.6",
        "@radix-ui/react-dialog": "^1.1.14",
        "@radix-ui/react-label": "^2.1.7",
        "@radix-ui/react-select": "^2.2.5",
        "@radix-ui/react-separator": "^1.1.7",
        "@radix-ui/react-slot": "^1.2.3",
        "@radix-ui/react-switch": "^1.2.5",
        "@types/multer": "^2.0.0",
        "@uploadcare/react-uploader": "^1.10.2",
        "axios": "^1.11.0",
        "bad-words": "^4.0.0",
        "class-variance-authority": "^0.7.1",
        "clsx": "^2.1.1",
        "cookie": "^1.0.2",
        "csv-parse": "^6.1.0",
        "date-fns": "^4.1.0",
        "firebase": "^12.0.0",
        "firebase-admin": "^13.4.0",
        "formidable": "^3.5.4",
        "framer-motion": "^12.23.12",
        "js-cookie": "^3.0.5",
        "lottie-react": "^2.4.1",
        "lucide-react": "^0.535.0",
        "multer": "^2.0.2",
        "next": "15.4.4",
        "next-connect": "^1.0.0",
        "nodemailer": "^7.0.5",
        "openai": "^5.10.2",
        "pdfkit": "^0.17.1",
        "plivo": "^4.75.1",
        "react": "19.1.0",
        "react-dom": "19.1.0",
        "react-icons": "^5.5.0",
        "react-intersection-observer": "^9.16.0",
        "recharts": "^3.1.0",
        "sonner": "^2.0.6",
        "tailwind-merge": "^3.3.1",
        "tailwindcss-animate": "^1.0.7",
        "twilio": "^5.8.0",
        "uuid": "^11.1.0",
        "winston": "^3.17.0",
        "zod": "^3.25.76"
      },
      "devDependencies": {
        "@eslint/eslintrc": "^3",
        "@tailwindcss/forms": "^0.5.10",
        "@tailwindcss/typography": "^0.5.16",
        "@types/bad-words": "^3.0.3",
        "@types/formidable": "^3.4.5",
        "@types/js-cookie": "^3.0.6",
        "@types/node": "^20",
        "@types/node-fetch": "^2.6.13",
        "@types/nodemailer": "^6.4.17",
        "@types/pdfkit": "^0.17.2",
        "@types/react": "^19",
        "@types/react-dom": "^19",
        "@types/recharts": "^1.8.29",
        "@types/winston": "^2.4.4",
        "autoprefixer": "^10.4.15",
        "dotenv": "^17.2.1",
        "eslint": "^9",
        "eslint-config-next": "15.4.4",
        "postcss": "^8.4.31",
        "tailwindcss": "^3.4.1",
        "tsx": "^4.20.3",
        "typescript": "^5"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@colors/colors": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/@colors/colors/-/colors-1.6.0.tgz",
      "integrity": "sha512-Ir+AOibqzrIsL6ajt3Rz3LskB7OiMVHqltZmspbW/TJuTVuyOMirVqAkjfY6JISiLHgyNqicAC8AyHHGzNd/dA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.1.90"
      }
    },
    "node_modules/@dabh/diagnostics": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/@dabh/diagnostics/-/diagnostics-2.0.3.tgz",
      "integrity": "sha512-hrlQOIi7hAfzsMqlGSFyVucrx38O+j6wiGOf//H2ecvIEqYN4ADBSS2iLMh5UFyDunCNniUIPk/q3riFv45xRA==",
      "license": "MIT",
      "dependencies": {
        "colorspace": "1.1.x",
        "enabled": "2.0.x",
        "kuler": "^2.0.0"
      }
    },
    "node_modules/@emnapi/core": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.4.5.tgz",
      "integrity": "sha512-XsLw1dEOpkSX/WucdqUhPWP7hDxSvZiY+fsUC14h+FtQ2Ifni4znbBt8punRX+Uj2JG/uDb8nEHVKvrVlvdZ5Q==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/wasi-threads": "1.0.4",
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emnapi/runtime": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.4.5.tgz",
      "integrity": "sha512-++LApOtY0pEEz1zrd9vy1/zXVaVJJ/EbAF3u0fXIzPJEDtnITsBGbbK0EkM72amhl/R5b+5xx0Y/QhcVOpuulg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@emnapi/wasi-threads": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@emnapi/wasi-threads/-/wasi-threads-1.0.4.tgz",
      "integrity": "sha512-PJR+bOmMOPH8AtcTGAyYNiuJ3/Fcoj2XN/gBEWzDIKh254XO+mM9XoXHk5GNEhodxeMznbg7BlRojVbKN+gC6g==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.8.tgz",
      "integrity": "sha512-urAvrUedIqEiFR3FYSLTWQgLu5tb+m0qZw0NBEasUeo6wuqatkMDaRT+1uABiGXEu5vqgPd7FGE1BhsAIy9QVA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.8.tgz",
      "integrity": "sha512-RONsAvGCz5oWyePVnLdZY/HHwA++nxYWIX1atInlaW6SEkwq6XkP3+cb825EUcRs5Vss/lGh/2YxAb5xqc07Uw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.8.tgz",
      "integrity": "sha512-OD3p7LYzWpLhZEyATcTSJ67qB5D+20vbtr6vHlHWSQYhKtzUYrETuWThmzFpZtFsBIxRvhO07+UgVA9m0i/O1w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.8.tgz",
      "integrity": "sha512-yJAVPklM5+4+9dTeKwHOaA+LQkmrKFX96BM0A/2zQrbS6ENCmxc4OVoBs5dPkCCak2roAD+jKCdnmOqKszPkjA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.8.tgz",
      "integrity": "sha512-Jw0mxgIaYX6R8ODrdkLLPwBqHTtYHJSmzzd+QeytSugzQ0Vg4c5rDky5VgkoowbZQahCbsv1rT1KW72MPIkevw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.8.tgz",
      "integrity": "sha512-Vh2gLxxHnuoQ+GjPNvDSDRpoBCUzY4Pu0kBqMBDlK4fuWbKgGtmDIeEC081xi26PPjn+1tct+Bh8FjyLlw1Zlg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.8.tgz",
      "integrity": "sha512-YPJ7hDQ9DnNe5vxOm6jaie9QsTwcKedPvizTVlqWG9GBSq+BuyWEDazlGaDTC5NGU4QJd666V0yqCBL2oWKPfA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.8.tgz",
      "integrity": "sha512-MmaEXxQRdXNFsRN/KcIimLnSJrk2r5H8v+WVafRWz5xdSVmWLoITZQXcgehI2ZE6gioE6HirAEToM/RvFBeuhw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.8.tgz",
      "integrity": "sha512-FuzEP9BixzZohl1kLf76KEVOsxtIBFwCaLupVuk4eFVnOZfU+Wsn+x5Ryam7nILV2pkq2TqQM9EZPsOBuMC+kg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.8.tgz",
      "integrity": "sha512-WIgg00ARWv/uYLU7lsuDK00d/hHSfES5BzdWAdAig1ioV5kaFNrtK8EqGcUBJhYqotlUByUKz5Qo6u8tt7iD/w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.8.tgz",
      "integrity": "sha512-A1D9YzRX1i+1AJZuFFUMP1E9fMaYY+GnSQil9Tlw05utlE86EKTUA7RjwHDkEitmLYiFsRd9HwKBPEftNdBfjg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.8.tgz",
      "integrity": "sha512-O7k1J/dwHkY1RMVvglFHl1HzutGEFFZ3kNiDMSOyUrB7WcoHGf96Sh+64nTRT26l3GMbCW01Ekh/ThKM5iI7hQ==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.8.tgz",
      "integrity": "sha512-uv+dqfRazte3BzfMp8PAQXmdGHQt2oC/y2ovwpTteqrMx2lwaksiFZ/bdkXJC19ttTvNXBuWH53zy/aTj1FgGw==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.8.tgz",
      "integrity": "sha512-GyG0KcMi1GBavP5JgAkkstMGyMholMDybAf8wF5A70CALlDM2p/f7YFE7H92eDeH/VBtFJA5MT4nRPDGg4JuzQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.8.tgz",
      "integrity": "sha512-rAqDYFv3yzMrq7GIcen3XP7TUEG/4LK86LUPMIz6RT8A6pRIDn0sDcvjudVZBiiTcZCY9y2SgYX2lgK3AF+1eg==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.8.tgz",
      "integrity": "sha512-Xutvh6VjlbcHpsIIbwY8GVRbwoviWT19tFhgdA7DlenLGC/mbc3lBoVb7jxj9Z+eyGqvcnSyIltYUrkKzWqSvg==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.8.tgz",
      "integrity": "sha512-ASFQhgY4ElXh3nDcOMTkQero4b1lgubskNlhIfJrsH5OKZXDpUAKBlNS0Kx81jwOBp+HCeZqmoJuihTv57/jvQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.8.tgz",
      "integrity": "sha512-d1KfruIeohqAi6SA+gENMuObDbEjn22olAR7egqnkCD9DGBG0wsEARotkLgXDu6c4ncgWTZJtN5vcgxzWRMzcw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.8.tgz",
      "integrity": "sha512-nVDCkrvx2ua+XQNyfrujIG38+YGyuy2Ru9kKVNyh5jAys6n+l44tTtToqHjino2My8VAY6Lw9H7RI73XFi66Cg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.8.tgz",
      "integrity": "sha512-j8HgrDuSJFAujkivSMSfPQSAa5Fxbvk4rgNAS5i3K+r8s1X0p1uOO2Hl2xNsGFppOeHOLAVgYwDVlmxhq5h+SQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.8.tgz",
      "integrity": "sha512-1h8MUAwa0VhNCDp6Af0HToI2TJFAn1uqT9Al6DJVzdIBAd21m/G0Yfc77KDM3uF3T/YaOgQq3qTJHPbTOInaIQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openharmony-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.8.tgz",
      "integrity": "sha512-r2nVa5SIK9tSWd0kJd9HCffnDHKchTGikb//9c7HX+r+wHYCpQrSgxhlY6KWV1nFo1l4KFbsMlHk+L6fekLsUg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openharmony"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.8.tgz",
      "integrity": "sha512-zUlaP2S12YhQ2UzUfcCuMDHQFJyKABkAjvO5YSndMiIkMimPmxA+BYSBikWgsRpvyxuRnow4nS5NPnf9fpv41w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.8.tgz",
      "integrity": "sha512-YEGFFWESlPva8hGL+zvj2z/SaK+pH0SwOM0Nc/d+rVnW7GSTFlLBGzZkuSU9kFIGIo8q9X3ucpZhu8PDN5A2sQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.8.tgz",
      "integrity": "sha512-hiGgGC6KZ5LZz58OL/+qVVoZiuZlUYlYHNAmczOm7bs2oE1XriPFi5ZHHrS8ACpV5EjySrnoCKmcbQMN+ojnHg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.8.tgz",
      "integrity": "sha512-cn3Yr7+OaaZq1c+2pe+8yxC8E144SReCQjN6/2ynubzYjvyqZjTXfQJpAcQpsdJq3My7XADANiYGHoFC69pLQw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
      "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-helpers": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.0.tgz",
      "integrity": "sha512-ViuymvFmcJi04qdZeDc2whTHryouGcDlaxPqarTD0ZE10ISpxGUVZGZDx4w01upyIynL3iu6IXH2bS1NhclQMw==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.15.1",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.1.tgz",
      "integrity": "sha512-bkOp+iumZCCbt1K1CmWf0R9pM5yKpDv+ZXtvSyQpudrI9kuFLp+bM2WOPXImuD/ceQuaa8f5pj93Y7zyECIGNA==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.32.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.32.0.tgz",
      "integrity": "sha512-BBpRFZK3eX6uMLKz8WxFOBIFFcGFJ/g8XuwjTHCqHROSIsopI+ddn/d5Cfh36+7+e5edVS8dbSHnBNhrLEX0zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.3.4",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.4.tgz",
      "integrity": "sha512-Ul5l+lHEcw3L5+k8POx6r74mxEYKG5kOb6Xpy2gCRW6zweT6TEhAf8vhxGgjhqrd/VO/Dirhsb+1hNpD1ue9hw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/core": "^0.15.1",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@fastify/busboy": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@fastify/busboy/-/busboy-3.1.1.tgz",
      "integrity": "sha512-5DGmA8FTdB2XbDeEwc/5ZXBl6UbBAyBOOLlPuBnZ/N1SwdH9Ii+cOX3tBROlDgcTXxjOYnLMVoKk9+FXAw0CJw==",
      "license": "MIT"
    },
    "node_modules/@firebase/ai": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@firebase/ai/-/ai-2.0.0.tgz",
      "integrity": "sha512-N/aSHjqOpU+KkYU3piMkbcuxzvqsOvxflLUXBAkYAPAz8wjE2Ye3BQDgKHEYuhMmEWqj6LFgEBUN8wwc6dfMTw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/analytics": {
      "version": "0.10.18",
      "resolved": "https://registry.npmjs.org/@firebase/analytics/-/analytics-0.10.18.tgz",
      "integrity": "sha512-iN7IgLvM06iFk8BeFoWqvVpRFW3Z70f+Qe2PfCJ7vPIgLPjHXDE774DhCT5Y2/ZU/ZbXPDPD60x/XPWEoZLNdg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/analytics-compat": {
      "version": "0.2.24",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-compat/-/analytics-compat-0.2.24.tgz",
      "integrity": "sha512-jE+kJnPG86XSqGQGhXXYt1tpTbCTED8OQJ/PQ90SEw14CuxRxx/H+lFbWA1rlFtFSsTCptAJtgyRBwr/f00vsw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/analytics": "0.10.18",
        "@firebase/analytics-types": "0.8.3",
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/analytics-types": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-types/-/analytics-types-0.8.3.tgz",
      "integrity": "sha512-VrIp/d8iq2g501qO46uGz3hjbDb8xzYMrbu8Tp0ovzIzrvJZ2fvmj649gTjge/b7cCCcjT0H37g1gVtlNhnkbg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.14.0.tgz",
      "integrity": "sha512-APIAeKvRNFWKJLjIL8wLDjh7u8g6ZjaeVmItyqSjCdEkJj14UuVlus74D8ofsOMWh45HEwxwkd96GYbi+CImEg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/app-check": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@firebase/app-check/-/app-check-0.11.0.tgz",
      "integrity": "sha512-XAvALQayUMBJo58U/rxW02IhsesaxxfWVmVkauZvGEz3vOAjMEQnzFlyblqkc2iAaO82uJ2ZVyZv9XzPfxjJ6w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/app-check-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-compat/-/app-check-compat-0.4.0.tgz",
      "integrity": "sha512-UfK2Q8RJNjYM/8MFORltZRG9lJj11k0nW84rrffiKvcJxLf1jf6IEjCIkCamykHE73C6BwqhVfhIBs69GXQV0g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check": "0.11.0",
        "@firebase/app-check-types": "0.5.3",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/app-check-interop-types": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-interop-types/-/app-check-interop-types-0.3.3.tgz",
      "integrity": "sha512-gAlxfPLT2j8bTI/qfe3ahl2I2YcBQ8cFIBdhAQA4I2f3TndcO+22YizyGYuttLHPQEpWkhmpFW60VCFEPg4g5A==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-check-types": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-check-types/-/app-check-types-0.5.3.tgz",
      "integrity": "sha512-hyl5rKSj0QmwPdsAxrI5x1otDlByQ7bvNvVt8G/XPO2CSwE++rmSVf3VEhaeOR4J8ZFaF0Z0NDSmLejPweZ3ng==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/app-compat": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/@firebase/app-compat/-/app-compat-0.5.0.tgz",
      "integrity": "sha512-nUnNpOeRj0KZzVzHsyuyrmZKKHfykZ8mn40FtG28DeSTWeM5b/2P242Va4bmQpJsy5y32vfv50+jvdckrpzy7Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app": "0.14.0",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/app-types": {
      "version": "0.9.3",
      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.9.3.tgz",
      "integrity": "sha512-kRVpIl4vVGJ4baogMDINbyrIOtOxqhkZQg4jTq3l8Lw6WSk0xfpEYzezFu+Kl4ve4fbPl79dvwRtaFqAC/ucCw==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-1.11.0.tgz",
      "integrity": "sha512-5j7+ua93X+IRcJ1oMDTClTo85l7Xe40WSkoJ+shzPrX7OISlVWLdE1mKC57PSD+/LfAbdhJmvKixINBw2ESK6w==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x",
        "@react-native-async-storage/async-storage": "^1.18.1"
      },
      "peerDependenciesMeta": {
        "@react-native-async-storage/async-storage": {
          "optional": true
        }
      }
    },
    "node_modules/@firebase/auth-compat": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth-compat/-/auth-compat-0.6.0.tgz",
      "integrity": "sha512-J0lGSxXlG/lYVi45wbpPhcWiWUMXevY4fvLZsN1GHh+po7TZVng+figdHBVhFheaiipU8HZyc7ljw1jNojM2nw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth": "1.11.0",
        "@firebase/auth-types": "0.13.0",
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/auth-interop-types": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.2.4.tgz",
      "integrity": "sha512-JPgcXKCuO+CWqGDnigBtvo09HeBs5u/Ktc2GaFj2m01hLarbxthLNm7Fk8iOP1aqAtXV+fnnGj7U28xmk7IwVA==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/auth-types": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth-types/-/auth-types-0.13.0.tgz",
      "integrity": "sha512-S/PuIjni0AQRLF+l9ck0YpsMOdE8GO2KU6ubmBB7P+7TJUCQDa3R1dlgYm9UzGbbePMZsp0xzB93f2b/CgxMOg==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/component": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.7.0.tgz",
      "integrity": "sha512-wR9En2A+WESUHexjmRHkqtaVH94WLNKt6rmeqZhSLBybg4Wyf0Umk04SZsS6sBq4102ZsDBFwoqMqJYj2IoDSg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/data-connect": {
      "version": "0.3.11",
      "resolved": "https://registry.npmjs.org/@firebase/data-connect/-/data-connect-0.3.11.tgz",
      "integrity": "sha512-G258eLzAD6im9Bsw+Qm1Z+P4x0PGNQ45yeUuuqe5M9B1rn0RJvvsQCRHXgE52Z+n9+WX1OJd/crcuunvOGc7Vw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/database": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-1.1.0.tgz",
      "integrity": "sha512-gM6MJFae3pTyNLoc9VcJNuaUDej0ctdjn3cVtILo3D5lpp0dmUHHLFN/pUKe7ImyeB1KAvRlEYxvIHNF04Filg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "faye-websocket": "0.11.4",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/database-compat": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@firebase/database-compat/-/database-compat-2.1.0.tgz",
      "integrity": "sha512-8nYc43RqxScsePVd1qe1xxvWNf0OBnbwHxmXJ7MHSuuTVYFO3eLyLW3PiCKJ9fHnmIz4p4LbieXwz+qtr9PZDg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/database": "1.1.0",
        "@firebase/database-types": "1.0.16",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/database-types": {
      "version": "1.0.16",
      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-1.0.16.tgz",
      "integrity": "sha512-xkQLQfU5De7+SPhEGAXFBnDryUWhhlFXelEg2YeZOQMCdoe7dL64DDAd77SQsR+6uoXIZY5MB4y/inCs4GTfcw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-types": "0.9.3",
        "@firebase/util": "1.13.0"
      }
    },
    "node_modules/@firebase/firestore": {
      "version": "4.9.0",
      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-4.9.0.tgz",
      "integrity": "sha512-5zl0+/h1GvlCSLt06RMwqFsd7uqRtnNZt4sW99k2rKRd6k/ECObIWlEnvthm2cuOSnUmwZknFqtmd1qyYSLUuQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "@firebase/webchannel-wrapper": "1.0.4",
        "@grpc/grpc-js": "~1.9.0",
        "@grpc/proto-loader": "^0.7.8",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/firestore-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-compat/-/firestore-compat-0.4.0.tgz",
      "integrity": "sha512-4O7v4VFeSEwAZtLjsaj33YrMHMRjplOIYC2CiYsF6o/MboOhrhe01VrTt8iY9Y5EwjRHuRz4pS6jMBT8LfQYJA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/firestore": "4.9.0",
        "@firebase/firestore-types": "3.0.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/firestore-types": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-types/-/firestore-types-3.0.3.tgz",
      "integrity": "sha512-hD2jGdiWRxB/eZWF89xcK9gF8wvENDJkzpVFb4aGkzfEaKxVRD1kjz1t1Wj8VZEp2LCB53Yx1zD8mrhQu87R6Q==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/functions": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.13.0.tgz",
      "integrity": "sha512-2/LH5xIbD8aaLOWSFHAwwAybgSzHIM0dB5oVOL0zZnxFG1LctX2bc1NIAaPk1T+Zo9aVkLKUlB5fTXTkVUQprQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/app-check-interop-types": "0.3.3",
        "@firebase/auth-interop-types": "0.2.4",
        "@firebase/component": "0.7.0",
        "@firebase/messaging-interop-types": "0.2.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/functions-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/functions-compat/-/functions-compat-0.4.0.tgz",
      "integrity": "sha512-VPgtvoGFywWbQqtvgJnVWIDFSHV1WE6Hmyi5EGI+P+56EskiGkmnw6lEqc/MEUfGpPGdvmc4I9XMU81uj766/g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/functions": "0.13.0",
        "@firebase/functions-types": "0.6.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/functions-types": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/@firebase/functions-types/-/functions-types-0.6.3.tgz",
      "integrity": "sha512-EZoDKQLUHFKNx6VLipQwrSMh01A1SaL3Wg6Hpi//x6/fJ6Ee4hrAeswK99I5Ht8roiniKHw4iO0B1Oxj5I4plg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/installations": {
      "version": "0.6.19",
      "resolved": "https://registry.npmjs.org/@firebase/installations/-/installations-0.6.19.tgz",
      "integrity": "sha512-nGDmiwKLI1lerhwfwSHvMR9RZuIH5/8E3kgUWnVRqqL7kGVSktjLTWEMva7oh5yxQ3zXfIlIwJwMcaM5bK5j8Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/installations-compat": {
      "version": "0.2.19",
      "resolved": "https://registry.npmjs.org/@firebase/installations-compat/-/installations-compat-0.2.19.tgz",
      "integrity": "sha512-khfzIY3EI5LePePo7vT19/VEIH1E3iYsHknI/6ek9T8QCozAZshWT9CjlwOzZrKvTHMeNcbpo/VSOSIWDSjWdQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/installations-types": "0.5.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/installations-types": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@firebase/installations-types/-/installations-types-0.5.3.tgz",
      "integrity": "sha512-2FJI7gkLqIE0iYsNQ1P751lO3hER+Umykel+TkLwHj6plzWVxqvfclPUZhcKFVQObqloEBTmpi2Ozn7EkCABAA==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x"
      }
    },
    "node_modules/@firebase/logger": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.5.0.tgz",
      "integrity": "sha512-cGskaAvkrnh42b3BA3doDWeBmuHFO/Mx5A83rbRDYakPjO9bJtRL3dX7javzc2Rr/JHZf4HlterTW2lUkfeN4g==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/messaging": {
      "version": "0.12.23",
      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.12.23.tgz",
      "integrity": "sha512-cfuzv47XxqW4HH/OcR5rM+AlQd1xL/VhuaeW/wzMW1LFrsFcTn0GND/hak1vkQc2th8UisBcrkVcQAnOnKwYxg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/messaging-interop-types": "0.2.3",
        "@firebase/util": "1.13.0",
        "idb": "7.1.1",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/messaging-compat": {
      "version": "0.2.23",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-compat/-/messaging-compat-0.2.23.tgz",
      "integrity": "sha512-SN857v/kBUvlQ9X/UjAqBoQ2FEaL1ZozpnmL1ByTe57iXkmnVVFm9KqAsTfmf+OEwWI4kJJe9NObtN/w22lUgg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/messaging": "0.12.23",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/messaging-interop-types": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-interop-types/-/messaging-interop-types-0.2.3.tgz",
      "integrity": "sha512-xfzFaJpzcmtDjycpDeCUj0Ge10ATFi/VHVIvEEjDNc3hodVBQADZ7BWQU7CuFpjSHE+eLuBI13z5F/9xOoGX8Q==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/performance": {
      "version": "0.7.8",
      "resolved": "https://registry.npmjs.org/@firebase/performance/-/performance-0.7.8.tgz",
      "integrity": "sha512-k6xfNM/CdTl4RaV4gT/lH53NU+wP33JiN0pUeNBzGVNvfXZ3HbCkoISE3M/XaiOwHgded1l6XfLHa4zHgm0Wyg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0",
        "web-vitals": "^4.2.4"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/performance-compat": {
      "version": "0.2.21",
      "resolved": "https://registry.npmjs.org/@firebase/performance-compat/-/performance-compat-0.2.21.tgz",
      "integrity": "sha512-OQfYRsIQiEf9ez1SOMLb5TRevBHNIyA2x1GI1H10lZ432W96AK5r4LTM+SNApg84dxOuHt6RWSQWY7TPWffKXg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/performance": "0.7.8",
        "@firebase/performance-types": "0.2.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/performance-types": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.2.3.tgz",
      "integrity": "sha512-IgkyTz6QZVPAq8GSkLYJvwSLr3LS9+V6vNPQr0x4YozZJiLF5jYixj0amDtATf1X0EtYHqoPO48a9ija8GocxQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/remote-config": {
      "version": "0.6.6",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config/-/remote-config-0.6.6.tgz",
      "integrity": "sha512-Yelp5xd8hM4NO1G1SuWrIk4h5K42mNwC98eWZ9YLVu6Z0S6hFk1mxotAdCRmH2luH8FASlYgLLq6OQLZ4nbnCA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/installations": "0.6.19",
        "@firebase/logger": "0.5.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-compat": {
      "version": "0.2.19",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-compat/-/remote-config-compat-0.2.19.tgz",
      "integrity": "sha512-y7PZAb0l5+5oIgLJr88TNSelxuASGlXyAKj+3pUc4fDuRIdPNBoONMHaIUa9rlffBR5dErmaD2wUBJ7Z1a513Q==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/logger": "0.5.0",
        "@firebase/remote-config": "0.6.6",
        "@firebase/remote-config-types": "0.4.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/remote-config-types": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-types/-/remote-config-types-0.4.0.tgz",
      "integrity": "sha512-7p3mRE/ldCNYt8fmWMQ/MSGRmXYlJ15Rvs9Rk17t8p0WwZDbeK7eRmoI1tvCPaDzn9Oqh+yD6Lw+sGLsLg4kKg==",
      "license": "Apache-2.0"
    },
    "node_modules/@firebase/storage": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.14.0.tgz",
      "integrity": "sha512-xWWbb15o6/pWEw8H01UQ1dC5U3rf8QTAzOChYyCpafV6Xki7KVp3Yaw2nSklUwHEziSWE9KoZJS7iYeyqWnYFA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app": "0.x"
      }
    },
    "node_modules/@firebase/storage-compat": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/@firebase/storage-compat/-/storage-compat-0.4.0.tgz",
      "integrity": "sha512-vDzhgGczr1OfcOy285YAPur5pWDEvD67w4thyeCUh6Ys0izN9fNYtA1MJERmNBfqjqu0lg0FM5GLbw0Il21M+g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/component": "0.7.0",
        "@firebase/storage": "0.14.0",
        "@firebase/storage-types": "0.8.3",
        "@firebase/util": "1.13.0",
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "@firebase/app-compat": "0.x"
      }
    },
    "node_modules/@firebase/storage-types": {
      "version": "0.8.3",
      "resolved": "https://registry.npmjs.org/@firebase/storage-types/-/storage-types-0.8.3.tgz",
      "integrity": "sha512-+Muk7g9uwngTpd8xn9OdF/D48uiQ7I1Fae7ULsWPuKoCH3HU7bfFPhxtJYzyhjdniowhuDpQcfPmuNRAqZEfvg==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "@firebase/app-types": "0.x",
        "@firebase/util": "1.x"
      }
    },
    "node_modules/@firebase/util": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-1.13.0.tgz",
      "integrity": "sha512-0AZUyYUfpMNcztR5l09izHwXkZpghLgCUaAGjtMwXnCg3bj4ml5VgiwqOMOxJ+Nw4qN/zJAaOQBcJ7KGkWStqQ==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.1.0"
      },
      "engines": {
        "node": ">=20.0.0"
      }
    },
    "node_modules/@firebase/webchannel-wrapper": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-1.0.4.tgz",
      "integrity": "sha512-6m8+P+dE/RPl4OPzjTxcTbQ0rGeRyeTvAi9KwIffBVCiAMKrfXfLZaqD1F+m8t4B5/Q5aHsMozOgirkH1F5oMQ==",
      "license": "Apache-2.0"
    },
    "node_modules/@floating-ui/core": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.7.3.tgz",
      "integrity": "sha512-sGnvb5dmrJaKEZ+LDIpguvdX3bDlEllmv4/ClQ9awcmCZrlx5jQyyMWFM5kBI+EyNOCDDiKk8il0zeuX3Zlg/w==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/utils": "^0.2.10"
      }
    },
    "node_modules/@floating-ui/dom": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.3.tgz",
      "integrity": "sha512-uZA413QEpNuhtb3/iIKoYMSK07keHPYeXF02Zhd6e213j+d1NamLix/mCLxBUDW/Gx52sPH2m+chlUsyaBs/Ag==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/core": "^1.7.3",
        "@floating-ui/utils": "^0.2.10"
      }
    },
    "node_modules/@floating-ui/react-dom": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.5.tgz",
      "integrity": "sha512-HDO/1/1oH9fjj4eLgegrlH3dklZpHtUYYFiVwMUwfGvk9jWDRWqkklA2/NFScknrcNSspbV868WjXORvreDX+Q==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/dom": "^1.7.3"
      },
      "peerDependencies": {
        "react": ">=16.8.0",
        "react-dom": ">=16.8.0"
      }
    },
    "node_modules/@floating-ui/utils": {
      "version": "0.2.10",
      "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.10.tgz",
      "integrity": "sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==",
      "license": "MIT"
    },
    "node_modules/@fontsource/cairo": {
      "version": "5.2.6",
      "resolved": "https://registry.npmjs.org/@fontsource/cairo/-/cairo-5.2.6.tgz",
      "integrity": "sha512-hD9nzwA4NpqPdkyhGHoZ00Jh4VPaLMVJ6G/zUhBRrjAoxJ6ILt2WgQKS74jBT9JcyTyOaihkIMqW2R0M+Dmeig==",
      "license": "OFL-1.1",
      "funding": {
        "url": "https://github.com/sponsors/ayuhito"
      }
    },
    "node_modules/@fontsource/tajawal": {
      "version": "5.2.6",
      "resolved": "https://registry.npmjs.org/@fontsource/tajawal/-/tajawal-5.2.6.tgz",
      "integrity": "sha512-Wxml4z3f7wr7xNVMXwGIc2aJpyUOwJxkxX9lTJHh3eDPZVaLa/MkOz+HMUt3VWMah/xq0Xmn5pVhSbdYTb9R2A==",
      "license": "OFL-1.1",
      "funding": {
        "url": "https://github.com/sponsors/ayuhito"
      }
    },
    "node_modules/@google-cloud/firestore": {
      "version": "7.11.3",
      "resolved": "https://registry.npmjs.org/@google-cloud/firestore/-/firestore-7.11.3.tgz",
      "integrity": "sha512-qsM3/WHpawF07SRVvEJJVRwhYzM7o9qtuksyuqnrMig6fxIrwWnsezECWsG/D5TyYru51Fv5c/RTqNDQ2yU+4w==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@opentelemetry/api": "^1.3.0",
        "fast-deep-equal": "^3.1.1",
        "functional-red-black-tree": "^1.0.1",
        "google-gax": "^4.3.3",
        "protobufjs": "^7.2.6"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@google-cloud/paginator": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@google-cloud/paginator/-/paginator-5.0.2.tgz",
      "integrity": "sha512-DJS3s0OVH4zFDB1PzjxAsHqJT6sKVbRwwML0ZBP9PbU7Yebtu/7SWMRzvO2J3nUi9pRNITCfu4LJeooM2w4pjg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "arrify": "^2.0.0",
        "extend": "^3.0.2"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@google-cloud/projectify": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@google-cloud/projectify/-/projectify-4.0.0.tgz",
      "integrity": "sha512-MmaX6HeSvyPbWGwFq7mXdo0uQZLGBYCwziiLIGq5JVX+/bdI3SAq6bP98trV5eTWfLuvsMcIC1YJOF2vfteLFA==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@google-cloud/promisify": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/@google-cloud/promisify/-/promisify-4.0.0.tgz",
      "integrity": "sha512-Orxzlfb9c67A15cq2JQEyVc7wEsmFBmHjZWZYQMUyJ1qivXyMwdyNOs9odi79hze+2zqdTtu1E19IM/FtqZ10g==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@google-cloud/storage": {
      "version": "7.16.0",
      "resolved": "https://registry.npmjs.org/@google-cloud/storage/-/storage-7.16.0.tgz",
      "integrity": "sha512-7/5LRgykyOfQENcm6hDKP8SX/u9XxE5YOiWOkgkwcoO+cG8xT/cyOvp9wwN3IxfdYgpHs8CE7Nq2PKX2lNaEXw==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@google-cloud/paginator": "^5.0.0",
        "@google-cloud/projectify": "^4.0.0",
        "@google-cloud/promisify": "<4.1.0",
        "abort-controller": "^3.0.0",
        "async-retry": "^1.3.3",
        "duplexify": "^4.1.3",
        "fast-xml-parser": "^4.4.1",
        "gaxios": "^6.0.2",
        "google-auth-library": "^9.6.3",
        "html-entities": "^2.5.2",
        "mime": "^3.0.0",
        "p-limit": "^3.0.1",
        "retry-request": "^7.0.0",
        "teeny-request": "^9.0.0",
        "uuid": "^8.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@google-cloud/storage/node_modules/uuid": {
      "version": "8.3.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
      "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
      "license": "MIT",
      "optional": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/@grpc/grpc-js": {
      "version": "1.9.15",
      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.15.tgz",
      "integrity": "sha512-nqE7Hc0AzI+euzUwDAy0aY5hCp10r734gMGRdU+qOPX0XSceI2ULrcXB5U2xSc5VkWwalCj4M7GzCAygZl2KoQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@grpc/proto-loader": "^0.7.8",
        "@types/node": ">=12.12.47"
      },
      "engines": {
        "node": "^8.13.0 || >=10.10.0"
      }
    },
    "node_modules/@grpc/proto-loader": {
      "version": "0.7.15",
      "resolved": "https://registry.npmjs.org/@grpc/proto-loader/-/proto-loader-0.7.15.tgz",
      "integrity": "sha512-tMXdRCfYVixjuFK+Hk0Q1s38gV9zDiDJfWL3h1rv4Qc39oILCu1TRTDt7+fGUI8K4G1Fj125Hx/ru3azECWTyQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "lodash.camelcase": "^4.3.0",
        "long": "^5.0.0",
        "protobufjs": "^7.2.5",
        "yargs": "^17.7.2"
      },
      "bin": {
        "proto-loader-gen-types": "build/bin/proto-loader-gen-types.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/@hapi/hoek": {
      "version": "9.3.0",
      "resolved": "https://registry.npmjs.org/@hapi/hoek/-/hoek-9.3.0.tgz",
      "integrity": "sha512-/c6rf4UJlmHlC9b5BaNvzAcFv7HZ2QHaV0D4/HNlBdvFnvQq8RI4kYdhyPCl7Xj+oWvTWQ8ujhqS53LIgAe6KQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@hapi/topo": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/@hapi/topo/-/topo-5.1.0.tgz",
      "integrity": "sha512-foQZKJig7Ob0BMAYBfcJk8d77QtOe7Wo4ox7ff1lQYoNNAb6jwcY1ncdoy2e9wQZzvNy7ODZCYJkK8kzmcAnAg==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@hapi/hoek": "^9.0.0"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@img/sharp-darwin-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz",
      "integrity": "sha512-ryFMfvxxpQRsgZJqBd4wsttYQbCxsJksrv9Lw/v798JcQ8+w84mBWuXwl+TT0WJ/WrYOLaYpwQXi3sA9nTIaIg==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-darwin-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-darwin-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.3.tgz",
      "integrity": "sha512-yHpJYynROAj12TA6qil58hmPmAwxKKC7reUqtGLzsOHfP7/rniNGTL8tjWX6L3CTV4+5P4ypcS7Pp+7OB+8ihA==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-darwin-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-libvips-darwin-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.2.0.tgz",
      "integrity": "sha512-sBZmpwmxqwlqG9ueWFXtockhsxefaV6O84BMOrhtg/YqbTaRdqDE7hxraVE3y6gVM4eExmfzW4a8el9ArLeEiQ==",
      "cpu": [
        "arm64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "darwin"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-darwin-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.2.0.tgz",
      "integrity": "sha512-M64XVuL94OgiNHa5/m2YvEQI5q2cl9d/wk0qFTDVXcYzi43lxuiFTftMR1tOnFQovVXNZJ5TURSDK2pNe9Yzqg==",
      "cpu": [
        "x64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "darwin"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-arm": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.2.0.tgz",
      "integrity": "sha512-mWd2uWvDtL/nvIzThLq3fr2nnGfyr/XMXlq8ZJ9WMR6PXijHlC3ksp0IpuhK6bougvQrchUAfzRLnbsen0Cqvw==",
      "cpu": [
        "arm"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.2.0.tgz",
      "integrity": "sha512-RXwd0CgG+uPRX5YYrkzKyalt2OJYRiJQ8ED/fi1tq9WQW2jsQIn0tqrlR5l5dr/rjqq6AHAxURhj2DVjyQWSOA==",
      "cpu": [
        "arm64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-ppc64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.2.0.tgz",
      "integrity": "sha512-Xod/7KaDDHkYu2phxxfeEPXfVXFKx70EAFZ0qyUdOjCcxbjqyJOEUpDe6RIyaunGxT34Anf9ue/wuWOqBW2WcQ==",
      "cpu": [
        "ppc64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-s390x": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.2.0.tgz",
      "integrity": "sha512-eMKfzDxLGT8mnmPJTNMcjfO33fLiTDsrMlUVcp6b96ETbnJmd4uvZxVJSKPQfS+odwfVaGifhsB07J1LynFehw==",
      "cpu": [
        "s390x"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linux-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.2.0.tgz",
      "integrity": "sha512-ZW3FPWIc7K1sH9E3nxIGB3y3dZkpJlMnkk7z5tu1nSkBoCgw2nSRTFHI5pB/3CQaJM0pdzMF3paf9ckKMSE9Tg==",
      "cpu": [
        "x64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linuxmusl-arm64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.2.0.tgz",
      "integrity": "sha512-UG+LqQJbf5VJ8NWJ5Z3tdIe/HXjuIdo4JeVNADXBFuG7z9zjoegpzzGIyV5zQKi4zaJjnAd2+g2nna8TZvuW9Q==",
      "cpu": [
        "arm64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-libvips-linuxmusl-x64": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.2.0.tgz",
      "integrity": "sha512-SRYOLR7CXPgNze8akZwjoGBoN1ThNZoqpOgfnOxmWsklTGVfJiGJoC/Lod7aNMGA1jSsKWM1+HRX43OP6p9+6Q==",
      "cpu": [
        "x64"
      ],
      "license": "LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "linux"
      ],
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-linux-arm": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.3.tgz",
      "integrity": "sha512-oBK9l+h6KBN0i3dC8rYntLiVfW8D8wH+NPNT3O/WBHeW0OQWCjfWksLUaPidsrDKpJgXp3G3/hkmhptAW0I3+A==",
      "cpu": [
        "arm"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-arm": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.3.tgz",
      "integrity": "sha512-QdrKe3EvQrqwkDrtuTIjI0bu6YEJHTgEeqdzI3uWJOH6G1O8Nl1iEeVYRGdj1h5I21CqxSvQp1Yv7xeU3ZewbA==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-ppc64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-ppc64/-/sharp-linux-ppc64-0.34.3.tgz",
      "integrity": "sha512-GLtbLQMCNC5nxuImPR2+RgrviwKwVql28FWZIW1zWruy6zLgA5/x2ZXk3mxj58X/tszVF69KK0Is83V8YgWhLA==",
      "cpu": [
        "ppc64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-ppc64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-s390x": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.3.tgz",
      "integrity": "sha512-3gahT+A6c4cdc2edhsLHmIOXMb17ltffJlxR0aC2VPZfwKoTGZec6u5GrFgdR7ciJSsHT27BD3TIuGcuRT0KmQ==",
      "cpu": [
        "s390x"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-s390x": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linux-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.3.tgz",
      "integrity": "sha512-8kYso8d806ypnSq3/Ly0QEw90V5ZoHh10yH0HnrzOCr6DKAPI6QVHvwleqMkVQ0m+fc7EH8ah0BB0QPuWY6zJQ==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linux-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linuxmusl-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.3.tgz",
      "integrity": "sha512-vAjbHDlr4izEiXM1OTggpCcPg9tn4YriK5vAjowJsHwdBIdx0fYRsURkxLG2RLm9gyBq66gwtWI8Gx0/ov+JKQ==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-linuxmusl-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.3.tgz",
      "integrity": "sha512-gCWUn9547K5bwvOn9l5XGAEjVTTRji4aPTqLzGXHvIr6bIDZKNTA34seMPgM0WmSf+RYBH411VavCejp3PkOeQ==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-libvips-linuxmusl-x64": "1.2.0"
      }
    },
    "node_modules/@img/sharp-wasm32": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.3.tgz",
      "integrity": "sha512-+CyRcpagHMGteySaWos8IbnXcHgfDn7pO2fiC2slJxvNq9gDipYBN42/RagzctVRKgxATmfqOSulgZv5e1RdMg==",
      "cpu": [
        "wasm32"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later AND MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/runtime": "^1.4.4"
      },
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-arm64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-arm64/-/sharp-win32-arm64-0.34.3.tgz",
      "integrity": "sha512-MjnHPnbqMXNC2UgeLJtX4XqoVHHlZNd+nPt1kRPmj63wURegwBhZlApELdtxM2OIZDRv/DFtLcNhVbd1z8GYXQ==",
      "cpu": [
        "arm64"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-ia32": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.3.tgz",
      "integrity": "sha512-xuCdhH44WxuXgOM714hn4amodJMZl3OEvf0GVTm0BEyMeA2to+8HEdRPShH0SLYptJY1uBw+SCFP9WVQi1Q/cw==",
      "cpu": [
        "ia32"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@img/sharp-win32-x64": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.3.tgz",
      "integrity": "sha512-OWwz05d++TxzLEv4VnsTz5CmZ6mI6S05sfQGEMrNrQcOEERbX46332IvE7pO/EUiw7jUrrS40z/M7kPyjfl04g==",
      "cpu": [
        "x64"
      ],
      "license": "Apache-2.0 AND LGPL-3.0-or-later",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.12",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz",
      "integrity": "sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.29",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz",
      "integrity": "sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@js-sdsl/ordered-map": {
      "version": "4.4.2",
      "resolved": "https://registry.npmjs.org/@js-sdsl/ordered-map/-/ordered-map-4.4.2.tgz",
      "integrity": "sha512-iUKgm52T8HOE/makSxjqoWhe95ZJA1/G1sYsGev2JDKUSS14KAgg1LHb+Ba+IPow0xflbnSkOsZcO08C7w1gYw==",
      "license": "MIT",
      "optional": true,
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/js-sdsl"
      }
    },
    "node_modules/@napi-rs/wasm-runtime": {
      "version": "0.2.12",
      "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-0.2.12.tgz",
      "integrity": "sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.3",
        "@emnapi/runtime": "^1.4.3",
        "@tybys/wasm-util": "^0.10.0"
      }
    },
    "node_modules/@next/env": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/env/-/env-15.4.4.tgz",
      "integrity": "sha512-SJKOOkULKENyHSYXE5+KiFU6itcIb6wSBjgM92meK0HVKpo94dNOLZVdLLuS7/BxImROkGoPsjR4EnuDucqiiA==",
      "license": "MIT"
    },
    "node_modules/@next/eslint-plugin-next": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/eslint-plugin-next/-/eslint-plugin-next-15.4.4.tgz",
      "integrity": "sha512-1FDsyN//ai3Jd97SEd7scw5h1yLdzDACGOPRofr2GD3sEFsBylEEoL0MHSerd4n2dq9Zm/mFMqi4+NRMOreOKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-glob": "3.3.1"
      }
    },
    "node_modules/@next/swc-darwin-arm64": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.4.4.tgz",
      "integrity": "sha512-eVG55dnGwfUuG+TtnUCt+mEJ+8TGgul6nHEvdb8HEH7dmJIFYOCApAaFrIrxwtEq2Cdf+0m5sG1Np8cNpw9EAw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-darwin-x64": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.4.4.tgz",
      "integrity": "sha512-zqG+/8apsu49CltEj4NAmCGZvHcZbOOOsNoTVeIXphYWIbE4l6A/vuQHyqll0flU2o3dmYCXsBW5FmbrGDgljQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-gnu": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.4.4.tgz",
      "integrity": "sha512-LRD4l2lq4R+2QCHBQVC0wjxxkLlALGJCwigaJ5FSRSqnje+MRKHljQNZgDCaKUZQzO/TXxlmUdkZP/X3KNGZaw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-arm64-musl": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.4.4.tgz",
      "integrity": "sha512-LsGUCTvuZ0690fFWerA4lnQvjkYg9gHo12A3wiPUR4kCxbx/d+SlwmonuTH2SWZI+RVGA9VL3N0S03WTYv6bYg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-gnu": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.4.4.tgz",
      "integrity": "sha512-aOy5yNRpLL3wNiJVkFYl6w22hdREERNjvegE6vvtix8LHRdsTHhWTpgvcYdCK7AIDCQW5ATmzr9XkPHvSoAnvg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-linux-x64-musl": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.4.4.tgz",
      "integrity": "sha512-FL7OAn4UkR8hKQRGBmlHiHinzOb07tsfARdGh7v0Z0jEJ3sz8/7L5bR23ble9E6DZMabSStqlATHlSxv1fuzAg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-arm64-msvc": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.4.4.tgz",
      "integrity": "sha512-eEdNW/TXwjYhOulQh0pffTMMItWVwKCQpbziSBmgBNFZIIRn2GTXrhrewevs8wP8KXWYMx8Z+mNU0X+AfvtrRg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@next/swc-win32-x64-msvc": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.4.4.tgz",
      "integrity": "sha512-SE5pYNbn/xZKMy1RE3pAs+4xD32OI4rY6mzJa4XUkp/ItZY+OMjIgilskmErt8ls/fVJ+Ihopi2QIeW6O3TrMw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@noble/hashes": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/@noble/hashes/-/hashes-1.8.0.tgz",
      "integrity": "sha512-jCs9ldd7NwzpgXDIf6P3+NrHh9/sD6CQdxHyjQI+h/6rDNo88ypBxxz45UDuZHz9r3tNz7N/VInSVoVdtXEI4A==",
      "license": "MIT",
      "engines": {
        "node": "^14.21.3 || >=16"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nolyfill/is-core-module": {
      "version": "1.0.39",
      "resolved": "https://registry.npmjs.org/@nolyfill/is-core-module/-/is-core-module-1.0.39.tgz",
      "integrity": "sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12.4.0"
      }
    },
    "node_modules/@opentelemetry/api": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/@opentelemetry/api/-/api-1.9.0.tgz",
      "integrity": "sha512-3giAOQvZiH5F9bMlMiv8+GSPMeqg0dbaeo58/0SlA9sxSqZhnUtxzX9/2FzyhS9sWQf5S0GJE0AKBrFqjpeYcg==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/@paralleldrive/cuid2": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/@paralleldrive/cuid2/-/cuid2-2.2.2.tgz",
      "integrity": "sha512-ZOBkgDwEdoYVlSeRbYYXs0S9MejQofiVYoTbKzy/6GQa39/q5tQU2IX46+shYnUkpEl3wc+J6wRlar7r2EK2xA==",
      "license": "MIT",
      "dependencies": {
        "@noble/hashes": "^1.1.5"
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@protobufjs/aspromise": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
      "integrity": "sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/base64": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
      "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/codegen": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
      "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/eventemitter": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
      "integrity": "sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/fetch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
      "integrity": "sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.1",
        "@protobufjs/inquire": "^1.1.0"
      }
    },
    "node_modules/@protobufjs/float": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
      "integrity": "sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/inquire": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
      "integrity": "sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/path": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
      "integrity": "sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/pool": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
      "integrity": "sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@protobufjs/utf8": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
      "integrity": "sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@radix-ui/number": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/number/-/number-1.1.1.tgz",
      "integrity": "sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==",
      "license": "MIT"
    },
    "node_modules/@radix-ui/primitive": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
      "integrity": "sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==",
      "license": "MIT"
    },
    "node_modules/@radix-ui/react-arrow": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.7.tgz",
      "integrity": "sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-collection": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz",
      "integrity": "sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-slot": "1.2.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-compose-refs": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz",
      "integrity": "sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-context": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-context/-/react-context-1.1.2.tgz",
      "integrity": "sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-dialog": {
      "version": "1.1.14",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-dialog/-/react-dialog-1.1.14.tgz",
      "integrity": "sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-dismissable-layer": "1.1.10",
        "@radix-ui/react-focus-guards": "1.1.2",
        "@radix-ui/react-focus-scope": "1.1.7",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-portal": "1.1.9",
        "@radix-ui/react-presence": "1.1.4",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-slot": "1.2.3",
        "@radix-ui/react-use-controllable-state": "1.2.2",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-direction": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-direction/-/react-direction-1.1.1.tgz",
      "integrity": "sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-dismissable-layer": {
      "version": "1.1.10",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-dismissable-layer/-/react-dismissable-layer-1.1.10.tgz",
      "integrity": "sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-escape-keydown": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-focus-guards": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-guards/-/react-focus-guards-1.1.2.tgz",
      "integrity": "sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-focus-scope": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-focus-scope/-/react-focus-scope-1.1.7.tgz",
      "integrity": "sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-callback-ref": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-id": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-id/-/react-id-1.1.1.tgz",
      "integrity": "sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-label": {
      "version": "2.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-label/-/react-label-2.1.7.tgz",
      "integrity": "sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-popper": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-popper/-/react-popper-1.2.7.tgz",
      "integrity": "sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/react-dom": "^2.0.0",
        "@radix-ui/react-arrow": "1.1.7",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-rect": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1",
        "@radix-ui/rect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-portal": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-portal/-/react-portal-1.1.9.tgz",
      "integrity": "sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-presence": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-presence/-/react-presence-1.1.4.tgz",
      "integrity": "sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-primitive": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-primitive/-/react-primitive-2.1.3.tgz",
      "integrity": "sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-slot": "1.2.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-select": {
      "version": "2.2.5",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-select/-/react-select-2.2.5.tgz",
      "integrity": "sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/number": "1.1.1",
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-collection": "1.1.7",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-direction": "1.1.1",
        "@radix-ui/react-dismissable-layer": "1.1.10",
        "@radix-ui/react-focus-guards": "1.1.2",
        "@radix-ui/react-focus-scope": "1.1.7",
        "@radix-ui/react-id": "1.1.1",
        "@radix-ui/react-popper": "1.2.7",
        "@radix-ui/react-portal": "1.1.9",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-slot": "1.2.3",
        "@radix-ui/react-use-callback-ref": "1.1.1",
        "@radix-ui/react-use-controllable-state": "1.2.2",
        "@radix-ui/react-use-layout-effect": "1.1.1",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-visually-hidden": "1.2.3",
        "aria-hidden": "^1.2.4",
        "react-remove-scroll": "^2.6.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-separator": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-separator/-/react-separator-1.1.7.tgz",
      "integrity": "sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-slot": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-slot/-/react-slot-1.2.3.tgz",
      "integrity": "sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-compose-refs": "1.1.2"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-switch": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-switch/-/react-switch-1.2.5.tgz",
      "integrity": "sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/primitive": "1.1.2",
        "@radix-ui/react-compose-refs": "1.1.2",
        "@radix-ui/react-context": "1.1.2",
        "@radix-ui/react-primitive": "2.1.3",
        "@radix-ui/react-use-controllable-state": "1.2.2",
        "@radix-ui/react-use-previous": "1.1.1",
        "@radix-ui/react-use-size": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-callback-ref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.1.tgz",
      "integrity": "sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-controllable-state": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-controllable-state/-/react-use-controllable-state-1.2.2.tgz",
      "integrity": "sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-effect-event": "0.0.2",
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-effect-event": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-effect-event/-/react-use-effect-event-0.0.2.tgz",
      "integrity": "sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-escape-keydown": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-escape-keydown/-/react-use-escape-keydown-1.1.1.tgz",
      "integrity": "sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-callback-ref": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-layout-effect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-layout-effect/-/react-use-layout-effect-1.1.1.tgz",
      "integrity": "sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-previous": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-previous/-/react-use-previous-1.1.1.tgz",
      "integrity": "sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==",
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-rect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-rect/-/react-use-rect-1.1.1.tgz",
      "integrity": "sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/rect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-use-size": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-use-size/-/react-use-size-1.1.1.tgz",
      "integrity": "sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-use-layout-effect": "1.1.1"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/react-visually-hidden": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@radix-ui/react-visually-hidden/-/react-visually-hidden-1.2.3.tgz",
      "integrity": "sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==",
      "license": "MIT",
      "dependencies": {
        "@radix-ui/react-primitive": "2.1.3"
      },
      "peerDependencies": {
        "@types/react": "*",
        "@types/react-dom": "*",
        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "@types/react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/@radix-ui/rect": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@radix-ui/rect/-/rect-1.1.1.tgz",
      "integrity": "sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==",
      "license": "MIT"
    },
    "node_modules/@reduxjs/toolkit": {
      "version": "2.8.2",
      "resolved": "https://registry.npmjs.org/@reduxjs/toolkit/-/toolkit-2.8.2.tgz",
      "integrity": "sha512-MYlOhQ0sLdw4ud48FoC5w0dH9VfWQjtCjreKwYTT3l+r427qYC5Y8PihNutepr8XrNaBUDQo9khWUwQxZaqt5A==",
      "license": "MIT",
      "dependencies": {
        "@standard-schema/spec": "^1.0.0",
        "@standard-schema/utils": "^0.3.0",
        "immer": "^10.0.3",
        "redux": "^5.0.1",
        "redux-thunk": "^3.1.0",
        "reselect": "^5.1.0"
      },
      "peerDependencies": {
        "react": "^16.9.0 || ^17.0.0 || ^18 || ^19",
        "react-redux": "^7.2.1 || ^8.1.3 || ^9.0.0"
      },
      "peerDependenciesMeta": {
        "react": {
          "optional": true
        },
        "react-redux": {
          "optional": true
        }
      }
    },
    "node_modules/@rtsao/scc": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@rtsao/scc/-/scc-1.1.0.tgz",
      "integrity": "sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@rushstack/eslint-patch": {
      "version": "1.12.0",
      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.12.0.tgz",
      "integrity": "sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@sideway/address": {
      "version": "4.1.5",
      "resolved": "https://registry.npmjs.org/@sideway/address/-/address-4.1.5.tgz",
      "integrity": "sha512-IqO/DUQHUkPeixNQ8n0JA6102hT9CmaljNTPmQ1u8MEhBo/R4Q8eKLN/vGZxuebwOroDB4cbpjheD4+/sKFK4Q==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@hapi/hoek": "^9.0.0"
      }
    },
    "node_modules/@sideway/formula": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/@sideway/formula/-/formula-3.0.1.tgz",
      "integrity": "sha512-/poHZJJVjx3L+zVD6g9KgHfYnb443oi7wLu/XKojDviHy6HOEOA6z1Trk5aR1dGcmPenJEgb2sK2I80LeS3MIg==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@sideway/pinpoint": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@sideway/pinpoint/-/pinpoint-2.0.0.tgz",
      "integrity": "sha512-RNiOoTPkptFtSVzQevY/yWtZwf/RxyVnPy/OcA9HBM3MlGDnBEYL5B41H0MTn0Uec8Hi+2qUtTfG2WWZBmMejQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@standard-schema/spec": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/spec/-/spec-1.0.0.tgz",
      "integrity": "sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==",
      "license": "MIT"
    },
    "node_modules/@standard-schema/utils": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/utils/-/utils-0.3.0.tgz",
      "integrity": "sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==",
      "license": "MIT"
    },
    "node_modules/@swc/helpers": {
      "version": "0.5.15",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.15.tgz",
      "integrity": "sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@symbiotejs/symbiote": {
      "version": "1.11.7",
      "resolved": "https://registry.npmjs.org/@symbiotejs/symbiote/-/symbiote-1.11.7.tgz",
      "integrity": "sha512-fUOJwzuldeApJ533YeTdrfnpp4nsA+ss1eiNBodX7RHf4LnhPB2Z9HP4fF3m2YhKYnxK0whjXaKA+wrxTRP5qA==",
      "license": "MIT"
    },
    "node_modules/@tailwindcss/forms": {
      "version": "0.5.10",
      "resolved": "https://registry.npmjs.org/@tailwindcss/forms/-/forms-0.5.10.tgz",
      "integrity": "sha512-utI1ONF6uf/pPNO68kmN1b8rEwNXv3czukalo8VtJH8ksIkZXr3Q3VYudZLkCsDd4Wku120uF02hYK25XGPorw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "mini-svg-data-uri": "^1.2.3"
      },
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || >= 3.0.0-alpha.1 || >= 4.0.0-alpha.20 || >= 4.0.0-beta.1"
      }
    },
    "node_modules/@tailwindcss/typography": {
      "version": "0.5.16",
      "resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.16.tgz",
      "integrity": "sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "lodash.castarray": "^4.4.0",
        "lodash.isplainobject": "^4.0.6",
        "lodash.merge": "^4.6.2",
        "postcss-selector-parser": "6.0.10"
      },
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1"
      }
    },
    "node_modules/@tootallnate/once": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@tootallnate/once/-/once-2.0.0.tgz",
      "integrity": "sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tsconfig/node16": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.4.tgz",
      "integrity": "sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==",
      "license": "MIT"
    },
    "node_modules/@tybys/wasm-util": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.0.tgz",
      "integrity": "sha512-VyyPYFlOMNylG45GoAe0xDoLwWuowvf92F9kySqzYh8vmYm7D2u4iUJKa1tOUpS70Ku13ASrOkS4ScXFsTaCNQ==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "tslib": "^2.4.0"
      }
    },
    "node_modules/@types/bad-words": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/bad-words/-/bad-words-3.0.3.tgz",
      "integrity": "sha512-jYdpTxDOJ+EENnsCwt8cOZhV/+4+qcwhks1igrOSg4zwwA17rsPqLsZpTo1l+OwViNu+5SPus0v5g7iGx+ofzA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/body-parser": {
      "version": "1.19.6",
      "resolved": "https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.6.tgz",
      "integrity": "sha512-HLFeCYgz89uk22N5Qg3dvGvsv46B8GLvKKo1zKG4NybA8U2DiEO3w9lqGg29t/tfLRJpJ6iQxnVw4OnB7MoM9g==",
      "license": "MIT",
      "dependencies": {
        "@types/connect": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/caseless": {
      "version": "0.12.5",
      "resolved": "https://registry.npmjs.org/@types/caseless/-/caseless-0.12.5.tgz",
      "integrity": "sha512-hWtVTC2q7hc7xZ/RLbxapMvDMgUnDvKvMOpKal4DrMyfGBUfB1oKaZlIRr6mJL+If3bAP6sV/QneGzF6tJjZDg==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/@types/connect": {
      "version": "3.4.38",
      "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.38.tgz",
      "integrity": "sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/d3-array": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.1.tgz",
      "integrity": "sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==",
      "license": "MIT"
    },
    "node_modules/@types/d3-color": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz",
      "integrity": "sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==",
      "license": "MIT"
    },
    "node_modules/@types/d3-ease": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz",
      "integrity": "sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==",
      "license": "MIT"
    },
    "node_modules/@types/d3-interpolate": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz",
      "integrity": "sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-color": "*"
      }
    },
    "node_modules/@types/d3-path": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@types/d3-path/-/d3-path-1.0.11.tgz",
      "integrity": "sha512-4pQMp8ldf7UaB/gR8Fvvy69psNHkTpD/pVw3vmEi8iZAB9EPMBruB1JvHO4BIq9QkUUd2lV1F5YXpMNj7JPBpw==",
      "license": "MIT"
    },
    "node_modules/@types/d3-scale": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz",
      "integrity": "sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-time": "*"
      }
    },
    "node_modules/@types/d3-shape": {
      "version": "1.3.12",
      "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-1.3.12.tgz",
      "integrity": "sha512-8oMzcd4+poSLGgV0R1Q1rOlx/xdmozS4Xab7np0eamFFUYq71AU9pOCJEFnkXW2aI/oXdVYJzw6pssbSut7Z9Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/d3-path": "^1"
      }
    },
    "node_modules/@types/d3-time": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz",
      "integrity": "sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==",
      "license": "MIT"
    },
    "node_modules/@types/d3-timer": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz",
      "integrity": "sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==",
      "license": "MIT"
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/express": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/@types/express/-/express-5.0.3.tgz",
      "integrity": "sha512-wGA0NX93b19/dZC1J18tKWVIYWyyF2ZjT9vin/NRu0qzzvfVzWjs04iq2rQ3H65vCTQYlRqs3YHfY7zjdV+9Kw==",
      "license": "MIT",
      "dependencies": {
        "@types/body-parser": "*",
        "@types/express-serve-static-core": "^5.0.0",
        "@types/serve-static": "*"
      }
    },
    "node_modules/@types/express-serve-static-core": {
      "version": "5.0.7",
      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-5.0.7.tgz",
      "integrity": "sha512-R+33OsgWw7rOhD1emjU7dzCDHucJrgJXMA5PYCzJxVil0dsyx5iBEPHqpPfiKNJQb7lZ1vxwoLR4Z87bBUpeGQ==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "@types/qs": "*",
        "@types/range-parser": "*",
        "@types/send": "*"
      }
    },
    "node_modules/@types/formidable": {
      "version": "3.4.5",
      "resolved": "https://registry.npmjs.org/@types/formidable/-/formidable-3.4.5.tgz",
      "integrity": "sha512-s7YPsNVfnsng5L8sKnG/Gbb2tiwwJTY1conOkJzTMRvJAlLFW1nEua+ADsJQu8N1c0oTHx9+d5nqg10WuT9gHQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/http-errors": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@types/http-errors/-/http-errors-2.0.5.tgz",
      "integrity": "sha512-r8Tayk8HJnX0FztbZN7oVqGccWgw98T/0neJphO91KkmOzug1KkofZURD4UaD5uH8AqcFLfdPErnBod0u71/qg==",
      "license": "MIT"
    },
    "node_modules/@types/js-cookie": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/@types/js-cookie/-/js-cookie-3.0.6.tgz",
      "integrity": "sha512-wkw9yd1kEXOPnvEeEV1Go1MmxtBJL0RR79aOTAApecWFVu7w0NNXNqhcWgvw2YgZDYadliXkl14pa3WXw5jlCQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/json5": {
      "version": "0.0.29",
      "resolved": "https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz",
      "integrity": "sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/jsonwebtoken": {
      "version": "9.0.10",
      "resolved": "https://registry.npmjs.org/@types/jsonwebtoken/-/jsonwebtoken-9.0.10.tgz",
      "integrity": "sha512-asx5hIG9Qmf/1oStypjanR7iKTv0gXQ1Ov/jfrX6kS/EO0OFni8orbmGCn0672NHR3kXHwpAwR+B368ZGN/2rA==",
      "license": "MIT",
      "dependencies": {
        "@types/ms": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/long": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/@types/long/-/long-4.0.2.tgz",
      "integrity": "sha512-MqTGEo5bj5t157U6fA/BiDynNkn0YknVdh48CMPkTSpFTVmvao5UQmm7uEF6xBEo7qIMAlY/JSleYaE6VOdpaA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/@types/mime": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/@types/mime/-/mime-1.3.5.tgz",
      "integrity": "sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==",
      "license": "MIT"
    },
    "node_modules/@types/ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgz",
      "integrity": "sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==",
      "license": "MIT"
    },
    "node_modules/@types/multer": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/@types/multer/-/multer-2.0.0.tgz",
      "integrity": "sha512-C3Z9v9Evij2yST3RSBktxP9STm6OdMc5uR1xF1SGr98uv8dUlAL2hqwrZ3GVB3uyMyiegnscEK6PGtYvNrjTjw==",
      "license": "MIT",
      "dependencies": {
        "@types/express": "*"
      }
    },
    "node_modules/@types/node": {
      "version": "20.19.9",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
      "integrity": "sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/@types/node-fetch": {
      "version": "2.6.13",
      "resolved": "https://registry.npmjs.org/@types/node-fetch/-/node-fetch-2.6.13.tgz",
      "integrity": "sha512-QGpRVpzSaUs30JBSGPjOg4Uveu384erbHBoT1zeONvyCfwQxIkUshLAOqN/k9EjGviPRmWTTe6aH2qySWKTVSw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "form-data": "^4.0.4"
      }
    },
    "node_modules/@types/nodemailer": {
      "version": "6.4.17",
      "resolved": "https://registry.npmjs.org/@types/nodemailer/-/nodemailer-6.4.17.tgz",
      "integrity": "sha512-I9CCaIp6DTldEg7vyUTZi8+9Vo0hi1/T8gv3C89yk1rSAAzoKQ8H8ki/jBYJSFoH/BisgLP8tkZMlQ91CIquww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/pdfkit": {
      "version": "0.17.2",
      "resolved": "https://registry.npmjs.org/@types/pdfkit/-/pdfkit-0.17.2.tgz",
      "integrity": "sha512-a7mqP/l8lsLMVNhQ3N2blU5pA1KX0YFE8FxWp0OTqZQKEZoPk7ndAlW+kdFBAWpFmLpy6fFbMRm4a6ZELWNgOQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/node": "*"
      }
    },
    "node_modules/@types/qs": {
      "version": "6.14.0",
      "resolved": "https://registry.npmjs.org/@types/qs/-/qs-6.14.0.tgz",
      "integrity": "sha512-eOunJqu0K1923aExK6y8p6fsihYEn/BYuQ4g0CxAAgFc4b/ZLN4CrsRZ55srTdqoiLzU2B2evC+apEIxprEzkQ==",
      "license": "MIT"
    },
    "node_modules/@types/range-parser": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.7.tgz",
      "integrity": "sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==",
      "license": "MIT"
    },
    "node_modules/@types/react": {
      "version": "19.1.9",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.9.tgz",
      "integrity": "sha512-WmdoynAX8Stew/36uTSVMcLJJ1KRh6L3IZRx1PZ7qJtBqT3dYTgyDTx8H1qoRghErydW7xw9mSJ3wS//tCRpFA==",
      "license": "MIT",
      "dependencies": {
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "19.1.7",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.7.tgz",
      "integrity": "sha512-i5ZzwYpqjmrKenzkoLM2Ibzt6mAsM7pxB6BCIouEVVmgiqaMj1TjaK7hnA36hbW5aZv20kx7Lw6hWzPWg0Rurw==",
      "devOptional": true,
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^19.0.0"
      }
    },
    "node_modules/@types/recharts": {
      "version": "1.8.29",
      "resolved": "https://registry.npmjs.org/@types/recharts/-/recharts-1.8.29.tgz",
      "integrity": "sha512-ulKklaVsnFIIhTQsQw226TnOibrddW1qUQNFVhoQEyY1Z7FRQrNecFCGt7msRuJseudzE9czVawZb17dK/aPXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/d3-shape": "^1",
        "@types/react": "*"
      }
    },
    "node_modules/@types/request": {
      "version": "2.48.13",
      "resolved": "https://registry.npmjs.org/@types/request/-/request-2.48.13.tgz",
      "integrity": "sha512-FGJ6udDNUCjd19pp0Q3iTiDkwhYup7J8hpMW9c4k53NrccQFFWKRho6hvtPPEhnXWKvukfwAlB6DbDz4yhH5Gg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@types/caseless": "*",
        "@types/node": "*",
        "@types/tough-cookie": "*",
        "form-data": "^2.5.5"
      }
    },
    "node_modules/@types/request/node_modules/form-data": {
      "version": "2.5.5",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.5.5.tgz",
      "integrity": "sha512-jqdObeR2rxZZbPSGL+3VckHMYtu+f9//KXBsVny6JSX/pa38Fy+bGjuG8eW/H6USNQWhLi8Num++cU2yOCNz4A==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.35",
        "safe-buffer": "^5.2.1"
      },
      "engines": {
        "node": ">= 0.12"
      }
    },
    "node_modules/@types/send": {
      "version": "0.17.5",
      "resolved": "https://registry.npmjs.org/@types/send/-/send-0.17.5.tgz",
      "integrity": "sha512-z6F2D3cOStZvuk2SaP6YrwkNO65iTZcwA2ZkSABegdkAh/lf+Aa/YQndZVfmEXT5vgAp6zv06VQ3ejSVjAny4w==",
      "license": "MIT",
      "dependencies": {
        "@types/mime": "^1",
        "@types/node": "*"
      }
    },
    "node_modules/@types/serve-static": {
      "version": "1.15.8",
      "resolved": "https://registry.npmjs.org/@types/serve-static/-/serve-static-1.15.8.tgz",
      "integrity": "sha512-roei0UY3LhpOJvjbIP6ZZFngyLKl5dskOtDhxY5THRSpO+ZI+nzJ+m5yUMzGrp89YRa7lvknKkMYjqQFGwA7Sg==",
      "license": "MIT",
      "dependencies": {
        "@types/http-errors": "*",
        "@types/node": "*",
        "@types/send": "*"
      }
    },
    "node_modules/@types/tough-cookie": {
      "version": "4.0.5",
      "resolved": "https://registry.npmjs.org/@types/tough-cookie/-/tough-cookie-4.0.5.tgz",
      "integrity": "sha512-/Ad8+nIOV7Rl++6f1BdKxFSMgmoqEoYbHRpPcx3JEfv8VRsQe9Z4mCXeJBzxs7mbHY/XOZZuXlRNfhpVPbs6ZA==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/@types/triple-beam": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/@types/triple-beam/-/triple-beam-1.3.5.tgz",
      "integrity": "sha512-6WaYesThRMCl19iryMYP7/x2OVgCtbIVflDGFpWnb9irXI3UjYE4AzmYuiUKY1AJstGijoY+MgUszMgRxIYTYw==",
      "license": "MIT"
    },
    "node_modules/@types/use-sync-external-store": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/@types/use-sync-external-store/-/use-sync-external-store-0.0.6.tgz",
      "integrity": "sha512-zFDAD+tlpf2r4asuHEj0XH6pY6i0g5NeAHPn+15wk3BV6JA69eERFXC1gyGThDkVa1zCyKr5jox1+2LbV/AMLg==",
      "license": "MIT"
    },
    "node_modules/@types/winston": {
      "version": "2.4.4",
      "resolved": "https://registry.npmjs.org/@types/winston/-/winston-2.4.4.tgz",
      "integrity": "sha512-BVGCztsypW8EYwJ+Hq+QNYiT/MUyCif0ouBH+flrY66O5W+KIXAMML6E/0fJpm7VjIzgangahl5S03bJJQGrZw==",
      "deprecated": "This is a stub types definition. winston provides its own type definitions, so you do not need this installed.",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "winston": "*"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.39.0.tgz",
      "integrity": "sha512-bhEz6OZeUR+O/6yx9Jk6ohX6H9JSFTaiY0v9/PuKT3oGK0rn0jNplLmyFUGV+a9gfYnVNwGDwS/UkLIuXNb2Rw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/regexpp": "^4.10.0",
        "@typescript-eslint/scope-manager": "8.39.0",
        "@typescript-eslint/type-utils": "8.39.0",
        "@typescript-eslint/utils": "8.39.0",
        "@typescript-eslint/visitor-keys": "8.39.0",
        "graphemer": "^1.4.0",
        "ignore": "^7.0.0",
        "natural-compare": "^1.4.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "@typescript-eslint/parser": "^8.39.0",
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/eslint-plugin/node_modules/ignore": {
      "version": "7.0.5",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz",
      "integrity": "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/@typescript-eslint/parser": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.39.0.tgz",
      "integrity": "sha512-g3WpVQHngx0aLXn6kfIYCZxM6rRJlWzEkVpqEFLT3SgEDsp9cpCbxxgwnE504q4H+ruSDh/VGS6nqZIDynP+vg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/scope-manager": "8.39.0",
        "@typescript-eslint/types": "8.39.0",
        "@typescript-eslint/typescript-estree": "8.39.0",
        "@typescript-eslint/visitor-keys": "8.39.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/project-service": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.39.0.tgz",
      "integrity": "sha512-CTzJqaSq30V/Z2Og9jogzZt8lJRR5TKlAdXmWgdu4hgcC9Kww5flQ+xFvMxIBWVNdxJO7OifgdOK4PokMIWPew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/tsconfig-utils": "^8.39.0",
        "@typescript-eslint/types": "^8.39.0",
        "debug": "^4.3.4"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/scope-manager": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.39.0.tgz",
      "integrity": "sha512-8QOzff9UKxOh6npZQ/4FQu4mjdOCGSdO3p44ww0hk8Vu+IGbg0tB/H1LcTARRDzGCC8pDGbh2rissBuuoPgH8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.39.0",
        "@typescript-eslint/visitor-keys": "8.39.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/tsconfig-utils": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.39.0.tgz",
      "integrity": "sha512-Fd3/QjmFV2sKmvv3Mrj8r6N8CryYiCS8Wdb/6/rgOXAWGcFuc+VkQuG28uk/4kVNVZBQuuDHEDUpo/pQ32zsIQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/type-utils": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.39.0.tgz",
      "integrity": "sha512-6B3z0c1DXVT2vYA9+z9axjtc09rqKUPRmijD5m9iv8iQpHBRYRMBcgxSiKTZKm6FwWw1/cI4v6em35OsKCiN5Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.39.0",
        "@typescript-eslint/typescript-estree": "8.39.0",
        "@typescript-eslint/utils": "8.39.0",
        "debug": "^4.3.4",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/types": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.39.0.tgz",
      "integrity": "sha512-ArDdaOllnCj3yn/lzKn9s0pBQYmmyme/v1HbGIGB0GB/knFI3fWMHloC+oYTJW46tVbYnGKTMDK4ah1sC2v0Kg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.39.0.tgz",
      "integrity": "sha512-ndWdiflRMvfIgQRpckQQLiB5qAKQ7w++V4LlCHwp62eym1HLB/kw7D9f2e8ytONls/jt89TEasgvb+VwnRprsw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/project-service": "8.39.0",
        "@typescript-eslint/tsconfig-utils": "8.39.0",
        "@typescript-eslint/types": "8.39.0",
        "@typescript-eslint/visitor-keys": "8.39.0",
        "debug": "^4.3.4",
        "fast-glob": "^3.3.2",
        "is-glob": "^4.0.3",
        "minimatch": "^9.0.4",
        "semver": "^7.6.0",
        "ts-api-utils": "^2.1.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/@typescript-eslint/utils": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.39.0.tgz",
      "integrity": "sha512-4GVSvNA0Vx1Ktwvf4sFE+exxJ3QGUorQG1/A5mRfRNZtkBT2xrA/BCO2H0eALx/PnvCS6/vmYwRdDA41EoffkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.7.0",
        "@typescript-eslint/scope-manager": "8.39.0",
        "@typescript-eslint/types": "8.39.0",
        "@typescript-eslint/typescript-estree": "8.39.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      },
      "peerDependencies": {
        "eslint": "^8.57.0 || ^9.0.0",
        "typescript": ">=4.8.4 <6.0.0"
      }
    },
    "node_modules/@typescript-eslint/visitor-keys": {
      "version": "8.39.0",
      "resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.39.0.tgz",
      "integrity": "sha512-ldgiJ+VAhQCfIjeOgu8Kj5nSxds0ktPOSO9p4+0VDH2R2pLvQraaM5Oen2d7NxzMCm+Sn/vJT+mv2H5u6b/3fA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@typescript-eslint/types": "8.39.0",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/typescript-eslint"
      }
    },
    "node_modules/@unrs/resolver-binding-android-arm-eabi": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm-eabi/-/resolver-binding-android-arm-eabi-1.11.1.tgz",
      "integrity": "sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@unrs/resolver-binding-android-arm64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-android-arm64/-/resolver-binding-android-arm64-1.11.1.tgz",
      "integrity": "sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@unrs/resolver-binding-darwin-arm64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-arm64/-/resolver-binding-darwin-arm64-1.11.1.tgz",
      "integrity": "sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@unrs/resolver-binding-darwin-x64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-darwin-x64/-/resolver-binding-darwin-x64-1.11.1.tgz",
      "integrity": "sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@unrs/resolver-binding-freebsd-x64": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-freebsd-x64/-/resolver-binding-freebsd-x64-1.11.1.tgz",
      "integrity": "sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm-gnueabihf": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-gnueabihf/-/resolver-binding-linux-arm-gnueabihf-1.11.1.tgz",
      "integrity": "sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm-musleabihf": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm-musleabihf/-/resolver-binding-linux-arm-musleabihf-1.11.1.tgz",
      "integrity": "sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-gnu/-/resolver-binding-linux-arm64-gnu-1.11.1.tgz",
      "integrity": "sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-arm64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-arm64-musl/-/resolver-binding-linux-arm64-musl-1.11.1.tgz",
      "integrity": "sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-ppc64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-ppc64-gnu/-/resolver-binding-linux-ppc64-gnu-1.11.1.tgz",
      "integrity": "sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-riscv64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-gnu/-/resolver-binding-linux-riscv64-gnu-1.11.1.tgz",
      "integrity": "sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-riscv64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-riscv64-musl/-/resolver-binding-linux-riscv64-musl-1.11.1.tgz",
      "integrity": "sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-s390x-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-s390x-gnu/-/resolver-binding-linux-s390x-gnu-1.11.1.tgz",
      "integrity": "sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-x64-gnu": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-gnu/-/resolver-binding-linux-x64-gnu-1.11.1.tgz",
      "integrity": "sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-linux-x64-musl": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-linux-x64-musl/-/resolver-binding-linux-x64-musl-1.11.1.tgz",
      "integrity": "sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@unrs/resolver-binding-wasm32-wasi": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-wasm32-wasi/-/resolver-binding-wasm32-wasi-1.11.1.tgz",
      "integrity": "sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==",
      "cpu": [
        "wasm32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@napi-rs/wasm-runtime": "^0.2.11"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@unrs/resolver-binding-win32-arm64-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-arm64-msvc/-/resolver-binding-win32-arm64-msvc-1.11.1.tgz",
      "integrity": "sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@unrs/resolver-binding-win32-ia32-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-ia32-msvc/-/resolver-binding-win32-ia32-msvc-1.11.1.tgz",
      "integrity": "sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@unrs/resolver-binding-win32-x64-msvc": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/@unrs/resolver-binding-win32-x64-msvc/-/resolver-binding-win32-x64-msvc-1.11.1.tgz",
      "integrity": "sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@uploadcare/cname-prefix": {
      "version": "6.17.0",
      "resolved": "https://registry.npmjs.org/@uploadcare/cname-prefix/-/cname-prefix-6.17.0.tgz",
      "integrity": "sha512-UqomH1TtegTmltLhwnKTN4fPNzUlXx6LQZj0YNIkiA726ih+ao6oPS9ER1rvz/XX4e5EOl7/aj+AHHIscLPncQ==",
      "license": "MIT"
    },
    "node_modules/@uploadcare/file-uploader": {
      "version": "1.19.5",
      "resolved": "https://registry.npmjs.org/@uploadcare/file-uploader/-/file-uploader-1.19.5.tgz",
      "integrity": "sha512-STzb0+SGSNiEmhCDbcRyUdlY84mI/LDZoBhYxXA9rpUsFe/1YpzWYfa60yu/zXCBs60XWig0QPKgkEn4ux90oA==",
      "license": "MIT",
      "dependencies": {
        "@symbiotejs/symbiote": "^1.11.7",
        "@uploadcare/cname-prefix": "^6.17.0",
        "@uploadcare/image-shrink": "^6.17.0",
        "@uploadcare/upload-client": "^6.17.0",
        "keyux": "^0.7.1"
      }
    },
    "node_modules/@uploadcare/image-shrink": {
      "version": "6.17.0",
      "resolved": "https://registry.npmjs.org/@uploadcare/image-shrink/-/image-shrink-6.17.0.tgz",
      "integrity": "sha512-9ZIQR2Uad7BeSH0hqo7W/VenHCwnEqRjFpN6SGynTzG6BxoH/HK8NkuMKdJ8URFisW7dZSXpVMZrCL5kf7FfKA==",
      "license": "MIT"
    },
    "node_modules/@uploadcare/react-adapter": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@uploadcare/react-adapter/-/react-adapter-0.3.1.tgz",
      "integrity": "sha512-OyGmGkD/u1CSlFZRY+fze/i90B1NDcdQblRn9bgNFY5JdGQMBWfiUGRbw0CKVcKXKkMJY7cuR8qVEzVd1U/UUQ==",
      "peerDependencies": {
        "@types/react": ">= 17.0.0"
      }
    },
    "node_modules/@uploadcare/react-uploader": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/@uploadcare/react-uploader/-/react-uploader-1.10.2.tgz",
      "integrity": "sha512-vQZ4N7fSrgUeCVd+muGJWg207E7fjI7g+4Is5u//Dl1JS5cun0lVK7bjLzenQ8Ywc1IYKI8Ddw/SrjX6lerKGA==",
      "license": "MIT",
      "dependencies": {
        "@uploadcare/file-uploader": "1.19.5",
        "@uploadcare/react-adapter": "^0.3.1"
      },
      "optionalDependencies": {
        "next": ">= 13.0.0"
      },
      "peerDependencies": {
        "@types/react": ">= 17.0.0"
      }
    },
    "node_modules/@uploadcare/upload-client": {
      "version": "6.17.0",
      "resolved": "https://registry.npmjs.org/@uploadcare/upload-client/-/upload-client-6.17.0.tgz",
      "integrity": "sha512-ir6xo6HLy3TVn4lVJ+9fOOcq8vvgMmcXoSP/mM+l1CTKKJmd0hzXqNkZ1CYyz7PiRhLPUC6fprmUuA7rnVC87g==",
      "license": "MIT",
      "dependencies": {
        "form-data": "^4.0.0",
        "ws": "^8.2.3"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/abort-controller": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/abort-controller/-/abort-controller-3.0.0.tgz",
      "integrity": "sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "event-target-shim": "^5.0.0"
      },
      "engines": {
        "node": ">=6.5"
      }
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/agent-base": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.4.tgz",
      "integrity": "sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
      "license": "MIT"
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/append-field": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/append-field/-/append-field-1.0.0.tgz",
      "integrity": "sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==",
      "license": "MIT"
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "license": "MIT"
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/aria-hidden": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/aria-hidden/-/aria-hidden-1.2.6.tgz",
      "integrity": "sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/aria-query": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz",
      "integrity": "sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/array-buffer-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz",
      "integrity": "sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "is-array-buffer": "^3.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array-includes": {
      "version": "3.1.9",
      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.9.tgz",
      "integrity": "sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.24.0",
        "es-object-atoms": "^1.1.1",
        "get-intrinsic": "^1.3.0",
        "is-string": "^1.1.1",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlast": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.findlastindex": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/array.prototype.findlastindex/-/array.prototype.findlastindex-1.2.6.tgz",
      "integrity": "sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "es-shim-unscopables": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flat": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.3.tgz",
      "integrity": "sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.flatmap": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.3.tgz",
      "integrity": "sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/array.prototype.tosorted": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3",
        "es-errors": "^1.3.0",
        "es-shim-unscopables": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/arraybuffer.prototype.slice": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.4.tgz",
      "integrity": "sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.1",
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "is-array-buffer": "^3.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/arrify": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-2.0.1.tgz",
      "integrity": "sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/asap": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
      "integrity": "sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==",
      "license": "MIT"
    },
    "node_modules/ast-types-flow": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.8.tgz",
      "integrity": "sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/async": {
      "version": "3.2.6",
      "resolved": "https://registry.npmjs.org/async/-/async-3.2.6.tgz",
      "integrity": "sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==",
      "license": "MIT"
    },
    "node_modules/async-function": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
      "integrity": "sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/async-retry": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/async-retry/-/async-retry-1.3.3.tgz",
      "integrity": "sha512-wfr/jstw9xNi/0teMHrRW7dsz3Lt5ARhYNZ2ewpadnhaIp5mbALhOAP+EAdsC7t4Z6wqsDVv9+W6gm1Dk9mEyw==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "retry": "0.13.1"
      }
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "license": "MIT"
    },
    "node_modules/autoprefixer": {
      "version": "10.4.21",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.24.4",
        "caniuse-lite": "^1.0.30001702",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.1.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/available-typed-arrays": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "possible-typed-array-names": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/axe-core": {
      "version": "4.10.3",
      "resolved": "https://registry.npmjs.org/axe-core/-/axe-core-4.10.3.tgz",
      "integrity": "sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==",
      "dev": true,
      "license": "MPL-2.0",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/axios": {
      "version": "1.11.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.11.0.tgz",
      "integrity": "sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.4",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/axobject-query": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",
      "integrity": "sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/bad-words": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/bad-words/-/bad-words-4.0.0.tgz",
      "integrity": "sha512-fLjG/I0N3I7xhurqGnGitSRD10UeEE63a7hyXtutQDpxo4+Eal+i7veWeZxZJPNtsl6X1mUIoWPwt8gQ7NMQUw==",
      "license": "MIT",
      "dependencies": {
        "badwords-list": "^2.0.1-4"
      },
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/badwords-list": {
      "version": "2.0.1-4",
      "resolved": "https://registry.npmjs.org/badwords-list/-/badwords-list-2.0.1-4.tgz",
      "integrity": "sha512-FxfZUp7B9yCnesNtFQS9v6PvZdxTYa14Q60JR6vhjdQdWI4naTjJIyx22JzoER8ooeT8SAAKoHLjKfCV7XgYUQ==",
      "license": "MIT"
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "license": "MIT"
    },
    "node_modules/base-64": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/base-64/-/base-64-0.1.0.tgz",
      "integrity": "sha512-Y5gU45svrR5tI2Vt/X9GPd3L0HNIKzGu202EjxrXMpuc2V2CiKgemAbUUsqYmZJvPtCXoUKjNZwBJzsNScUbXA=="
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/bignumber.js": {
      "version": "9.3.1",
      "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.3.1.tgz",
      "integrity": "sha512-Ko0uX15oIUS7wJ3Rb30Fs6SkVbLmPBAKdlm7q9+ak9bbIeFf0MwuBsQV6z7+X768/cHsfg+WlysDWJcmthjsjQ==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/brotli": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/brotli/-/brotli-1.3.3.tgz",
      "integrity": "sha512-oTKjJdShmDuGW94SyyaoQvAjf30dZaHnjJ8uAF+u2/vGJkJbJPJAT1gDiOJP5v1Zb6f9KEyW/1HpuaWIXtGHPg==",
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.1.2"
      }
    },
    "node_modules/browserslist": {
      "version": "4.25.1",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz",
      "integrity": "sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001726",
        "electron-to-chromium": "^1.5.173",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/buffer-equal-constant-time": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "license": "MIT"
    },
    "node_modules/build-url": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/build-url/-/build-url-1.3.3.tgz",
      "integrity": "sha512-uSC8d+d4SlbXTu/9nBhwEKi33CE0KQgCvfy8QwyrrO5vCuXr9hN021ZBh8ip5vxPbMOrZiPwgqcupuhezxiP3g==",
      "deprecated": "This package is no longer maintained",
      "license": "MIT"
    },
    "node_modules/busboy": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
      "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
      "dependencies": {
        "streamsearch": "^1.1.0"
      },
      "engines": {
        "node": ">=10.16.0"
      }
    },
    "node_modules/call-bind": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
      "integrity": "sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.0",
        "es-define-property": "^1.0.0",
        "get-intrinsic": "^1.2.4",
        "set-function-length": "^1.2.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/call-bound": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "get-intrinsic": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001731",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001731.tgz",
      "integrity": "sha512-lDdp2/wrOmTRWuoB5DpfNkC0rJDU8DqRa6nYL6HK6sytw70QMopt/NIc/9SM7ylItlBWfACXk0tEn37UWM/+mg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/class-variance-authority": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/class-variance-authority/-/class-variance-authority-0.7.1.tgz",
      "integrity": "sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==",
      "license": "Apache-2.0",
      "dependencies": {
        "clsx": "^2.1.1"
      },
      "funding": {
        "url": "https://polar.sh/cva"
      }
    },
    "node_modules/client-only": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/client-only/-/client-only-0.0.1.tgz",
      "integrity": "sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==",
      "license": "MIT"
    },
    "node_modules/cliui": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz",
      "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
      "license": "ISC",
      "dependencies": {
        "string-width": "^4.2.0",
        "strip-ansi": "^6.0.1",
        "wrap-ansi": "^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/cliui/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/cliui/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/cliui/node_modules/wrap-ansi": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha512-3Pe/CF1Nn94hyhIYpjtiLhdCoEoz0DqQ+988E9gmeEdQZlojxnOb74wctFyuwWQHzqyf9X7C7MG8juUpqBJT8w==",
      "license": "MIT",
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/color": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
      "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "color-convert": "^2.0.1",
        "color-string": "^1.9.0"
      },
      "engines": {
        "node": ">=12.5.0"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "license": "MIT"
    },
    "node_modules/color-string": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz",
      "integrity": "sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "^1.0.0",
        "simple-swizzle": "^0.2.2"
      }
    },
    "node_modules/colorspace": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/colorspace/-/colorspace-1.1.4.tgz",
      "integrity": "sha512-BgvKJiuVu1igBUF2kEjRCZXol6wiiGbY5ipL/oVPwm0BL9sIpMIzM8IK7vwuxIIzOXMV3Ey5w+vxhm0rR/TN8w==",
      "license": "MIT",
      "dependencies": {
        "color": "^3.1.3",
        "text-hex": "1.0.x"
      }
    },
    "node_modules/colorspace/node_modules/color": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/color/-/color-3.2.1.tgz",
      "integrity": "sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==",
      "license": "MIT",
      "dependencies": {
        "color-convert": "^1.9.3",
        "color-string": "^1.6.0"
      }
    },
    "node_modules/colorspace/node_modules/color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "license": "MIT",
      "dependencies": {
        "color-name": "1.1.3"
      }
    },
    "node_modules/colorspace/node_modules/color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
      "license": "MIT"
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "license": "MIT",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/concat-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-2.0.0.tgz",
      "integrity": "sha512-MWufYdFw53ccGjCA+Ol7XJYpAlW6/prSMzuPOTRnJGcGzuhLn4Scrz7qf6o8bROZ514ltazcIFJZevcfbo0x7A==",
      "engines": [
        "node >= 6.0"
      ],
      "license": "MIT",
      "dependencies": {
        "buffer-from": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.0.2",
        "typedarray": "^0.0.6"
      }
    },
    "node_modules/cookie": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-1.0.2.tgz",
      "integrity": "sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/crypto-js": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.2.0.tgz",
      "integrity": "sha512-KALDyEYgpY+Rlob/iriUtjV6d5Eq+Y191A5g4UqLAi8CyGP9N1+FdVbkc1SxKc2r4YAYqG8JzO2KGL+AizD70Q==",
      "license": "MIT"
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "license": "MIT",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/csv-parse": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/csv-parse/-/csv-parse-6.1.0.tgz",
      "integrity": "sha512-CEE+jwpgLn+MmtCpVcPtiCZpVtB6Z2OKPTr34pycYYoL7sxdOkXDdQ4lRiw6ioC0q6BLqhc6cKweCVvral8yhw==",
      "license": "MIT"
    },
    "node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-color": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz",
      "integrity": "sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-ease": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz",
      "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-format": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
      "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-interpolate": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
      "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
      "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-scale": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
      "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2.10.0 - 3",
        "d3-format": "1 - 3",
        "d3-interpolate": "1.2.0 - 3",
        "d3-time": "2.1.1 - 3",
        "d3-time-format": "2 - 4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-shape": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
      "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
      "license": "ISC",
      "dependencies": {
        "d3-path": "^3.1.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time-format": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
      "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
      "license": "ISC",
      "dependencies": {
        "d3-time": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-timer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz",
      "integrity": "sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/damerau-levenshtein": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.8.tgz",
      "integrity": "sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==",
      "dev": true,
      "license": "BSD-2-Clause"
    },
    "node_modules/data-view-buffer": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.2.tgz",
      "integrity": "sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/data-view-byte-length": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.2.tgz",
      "integrity": "sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/inspect-js"
      }
    },
    "node_modules/data-view-byte-offset": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.1.tgz",
      "integrity": "sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-data-view": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/date-fns": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-4.1.0.tgz",
      "integrity": "sha512-Ukq0owbQXxa/U3EGtsdVBkR1w7KOQ5gIBqdH2hkvknzZPYvBxb/aa6E8L7tmjFtkwZBu3UXBbjIgPo/Ez4xaNg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/kossnocorp"
      }
    },
    "node_modules/dayjs": {
      "version": "1.11.13",
      "resolved": "https://registry.npmjs.org/dayjs/-/dayjs-1.11.13.tgz",
      "integrity": "sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==",
      "license": "MIT"
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decimal.js-light": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz",
      "integrity": "sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==",
      "license": "MIT"
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/define-data-property": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0",
        "es-errors": "^1.3.0",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/define-properties": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.0.1",
        "has-property-descriptors": "^1.0.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "license": "Apache-2.0",
      "optional": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/detect-node-es": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/detect-node-es/-/detect-node-es-1.1.0.tgz",
      "integrity": "sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==",
      "license": "MIT"
    },
    "node_modules/dezalgo": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/dezalgo/-/dezalgo-1.0.4.tgz",
      "integrity": "sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==",
      "license": "ISC",
      "dependencies": {
        "asap": "^2.0.0",
        "wrappy": "1"
      }
    },
    "node_modules/dfa": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/dfa/-/dfa-1.2.0.tgz",
      "integrity": "sha512-ED3jP8saaweFTjeGX8HQPjeC1YYyZs98jGNZx6IiBvxW7JG5v492kamAQB3m2wop07CvU/RQmzcKr6bgcC5D/Q==",
      "license": "MIT"
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "license": "Apache-2.0"
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "license": "MIT"
    },
    "node_modules/doctrine": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "esutils": "^2.0.2"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/dotenv": {
      "version": "17.2.1",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-17.2.1.tgz",
      "integrity": "sha512-kQhDYKZecqnM0fCnzI5eIv5L4cAe/iRI+HqMbO/hbRdTAeXDG+M9FjipUxNfbARuEg4iHIbhnhs78BCHNbSxEQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://dotenvx.com"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/duplexify": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-4.1.3.tgz",
      "integrity": "sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "end-of-stream": "^1.4.1",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1",
        "stream-shift": "^1.0.2"
      }
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "license": "MIT"
    },
    "node_modules/ecdsa-sig-formatter": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
      "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.195",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.195.tgz",
      "integrity": "sha512-URclP0iIaDUzqcAyV1v2PgduJ9N0IdXmWsnPzPfelvBmjmZzEy6xJcjb1cXj+TbYqXgtLrjHEoaSIdTYhw4ezg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "license": "MIT"
    },
    "node_modules/enabled": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/enabled/-/enabled-2.0.0.tgz",
      "integrity": "sha512-AKrN98kuwOzMIdAizXGI86UFBoo26CL21UM763y1h/GMSJ4/OHU9k2YlsmBpyScFo/wbLzWQJBMCW4+IO3/+OQ==",
      "license": "MIT"
    },
    "node_modules/end-of-stream": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.5.tgz",
      "integrity": "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/es-abstract": {
      "version": "1.24.0",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
      "integrity": "sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-buffer-byte-length": "^1.0.2",
        "arraybuffer.prototype.slice": "^1.0.4",
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "data-view-buffer": "^1.0.2",
        "data-view-byte-length": "^1.0.2",
        "data-view-byte-offset": "^1.0.1",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "es-set-tostringtag": "^2.1.0",
        "es-to-primitive": "^1.3.0",
        "function.prototype.name": "^1.1.8",
        "get-intrinsic": "^1.3.0",
        "get-proto": "^1.0.1",
        "get-symbol-description": "^1.1.0",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "internal-slot": "^1.1.0",
        "is-array-buffer": "^3.0.5",
        "is-callable": "^1.2.7",
        "is-data-view": "^1.0.2",
        "is-negative-zero": "^2.0.3",
        "is-regex": "^1.2.1",
        "is-set": "^2.0.3",
        "is-shared-array-buffer": "^1.0.4",
        "is-string": "^1.1.1",
        "is-typed-array": "^1.1.15",
        "is-weakref": "^1.1.1",
        "math-intrinsics": "^1.1.0",
        "object-inspect": "^1.13.4",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.7",
        "own-keys": "^1.0.1",
        "regexp.prototype.flags": "^1.5.4",
        "safe-array-concat": "^1.1.3",
        "safe-push-apply": "^1.0.0",
        "safe-regex-test": "^1.1.0",
        "set-proto": "^1.0.0",
        "stop-iteration-iterator": "^1.1.0",
        "string.prototype.trim": "^1.2.10",
        "string.prototype.trimend": "^1.0.9",
        "string.prototype.trimstart": "^1.0.8",
        "typed-array-buffer": "^1.0.3",
        "typed-array-byte-length": "^1.0.3",
        "typed-array-byte-offset": "^1.0.4",
        "typed-array-length": "^1.0.7",
        "unbox-primitive": "^1.1.0",
        "which-typed-array": "^1.1.19"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-iterator-helpers": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.2.1.tgz",
      "integrity": "sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-set-tostringtag": "^2.0.3",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.6",
        "globalthis": "^1.0.4",
        "gopd": "^1.2.0",
        "has-property-descriptors": "^1.0.2",
        "has-proto": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "iterator.prototype": "^1.1.4",
        "safe-array-concat": "^1.1.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-shim-unscopables": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.1.0.tgz",
      "integrity": "sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-to-primitive": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.3.0.tgz",
      "integrity": "sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7",
        "is-date-object": "^1.0.5",
        "is-symbol": "^1.0.4"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/es-toolkit": {
      "version": "1.39.8",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.39.8.tgz",
      "integrity": "sha512-A8QO9TfF+rltS8BXpdu8OS+rpGgEdnRhqIVxO/ZmNvnXBYgOdSsxukT55ELyP94gZIntWJ+Li9QRrT2u1Kitpg==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/esbuild": {
      "version": "0.25.8",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.8.tgz",
      "integrity": "sha512-vVC0USHGtMi8+R4Kz8rt6JhEWLxsv9Rnu/lGYbPR8u47B+DCBksq9JarW0zOO7bs37hyOK1l2/oqtbciutL5+Q==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.8",
        "@esbuild/android-arm": "0.25.8",
        "@esbuild/android-arm64": "0.25.8",
        "@esbuild/android-x64": "0.25.8",
        "@esbuild/darwin-arm64": "0.25.8",
        "@esbuild/darwin-x64": "0.25.8",
        "@esbuild/freebsd-arm64": "0.25.8",
        "@esbuild/freebsd-x64": "0.25.8",
        "@esbuild/linux-arm": "0.25.8",
        "@esbuild/linux-arm64": "0.25.8",
        "@esbuild/linux-ia32": "0.25.8",
        "@esbuild/linux-loong64": "0.25.8",
        "@esbuild/linux-mips64el": "0.25.8",
        "@esbuild/linux-ppc64": "0.25.8",
        "@esbuild/linux-riscv64": "0.25.8",
        "@esbuild/linux-s390x": "0.25.8",
        "@esbuild/linux-x64": "0.25.8",
        "@esbuild/netbsd-arm64": "0.25.8",
        "@esbuild/netbsd-x64": "0.25.8",
        "@esbuild/openbsd-arm64": "0.25.8",
        "@esbuild/openbsd-x64": "0.25.8",
        "@esbuild/openharmony-arm64": "0.25.8",
        "@esbuild/sunos-x64": "0.25.8",
        "@esbuild/win32-arm64": "0.25.8",
        "@esbuild/win32-ia32": "0.25.8",
        "@esbuild/win32-x64": "0.25.8"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "9.32.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.32.0.tgz",
      "integrity": "sha512-LSehfdpgMeWcTZkWZVIJl+tkZ2nuSkyyB9C27MZqFWXuph7DvaowgcTvKqxvpLW1JZIk8PN7hFY3Rj9LQ7m7lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.21.0",
        "@eslint/config-helpers": "^0.3.0",
        "@eslint/core": "^0.15.0",
        "@eslint/eslintrc": "^3.3.1",
        "@eslint/js": "9.32.0",
        "@eslint/plugin-kit": "^0.3.4",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.4.0",
        "eslint-visitor-keys": "^4.2.1",
        "espree": "^10.4.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-config-next": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/eslint-config-next/-/eslint-config-next-15.4.4.tgz",
      "integrity": "sha512-sK/lWLUVF5om18O5w76Jt3F8uzu/LP5mVa6TprCMWkjWHUmByq80iHGHcdH7k1dLiJlj+DRIWf98d5piwRsSuA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@next/eslint-plugin-next": "15.4.4",
        "@rushstack/eslint-patch": "^1.10.3",
        "@typescript-eslint/eslint-plugin": "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0",
        "@typescript-eslint/parser": "^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0",
        "eslint-import-resolver-node": "^0.3.6",
        "eslint-import-resolver-typescript": "^3.5.2",
        "eslint-plugin-import": "^2.31.0",
        "eslint-plugin-jsx-a11y": "^6.10.0",
        "eslint-plugin-react": "^7.37.0",
        "eslint-plugin-react-hooks": "^5.0.0"
      },
      "peerDependencies": {
        "eslint": "^7.23.0 || ^8.0.0 || ^9.0.0",
        "typescript": ">=3.3.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-import-resolver-node": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.9.tgz",
      "integrity": "sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "^3.2.7",
        "is-core-module": "^2.13.0",
        "resolve": "^1.22.4"
      }
    },
    "node_modules/eslint-import-resolver-node/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-import-resolver-typescript": {
      "version": "3.10.1",
      "resolved": "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-3.10.1.tgz",
      "integrity": "sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "@nolyfill/is-core-module": "1.0.39",
        "debug": "^4.4.0",
        "get-tsconfig": "^4.10.0",
        "is-bun-module": "^2.0.0",
        "stable-hash": "^0.0.5",
        "tinyglobby": "^0.2.13",
        "unrs-resolver": "^1.6.2"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint-import-resolver-typescript"
      },
      "peerDependencies": {
        "eslint": "*",
        "eslint-plugin-import": "*",
        "eslint-plugin-import-x": "*"
      },
      "peerDependenciesMeta": {
        "eslint-plugin-import": {
          "optional": true
        },
        "eslint-plugin-import-x": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-module-utils": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.12.1.tgz",
      "integrity": "sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "debug": "^3.2.7"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependenciesMeta": {
        "eslint": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-module-utils/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import": {
      "version": "2.32.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.32.0.tgz",
      "integrity": "sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@rtsao/scc": "^1.1.0",
        "array-includes": "^3.1.9",
        "array.prototype.findlastindex": "^1.2.6",
        "array.prototype.flat": "^1.3.3",
        "array.prototype.flatmap": "^1.3.3",
        "debug": "^3.2.7",
        "doctrine": "^2.1.0",
        "eslint-import-resolver-node": "^0.3.9",
        "eslint-module-utils": "^2.12.1",
        "hasown": "^2.0.2",
        "is-core-module": "^2.16.1",
        "is-glob": "^4.0.3",
        "minimatch": "^3.1.2",
        "object.fromentries": "^2.0.8",
        "object.groupby": "^1.0.3",
        "object.values": "^1.2.1",
        "semver": "^6.3.1",
        "string.prototype.trimend": "^1.0.9",
        "tsconfig-paths": "^3.15.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/debug": {
      "version": "3.2.7",
      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.1"
      }
    },
    "node_modules/eslint-plugin-import/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-plugin-jsx-a11y": {
      "version": "6.10.2",
      "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.10.2.tgz",
      "integrity": "sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "aria-query": "^5.3.2",
        "array-includes": "^3.1.8",
        "array.prototype.flatmap": "^1.3.2",
        "ast-types-flow": "^0.0.8",
        "axe-core": "^4.10.0",
        "axobject-query": "^4.1.0",
        "damerau-levenshtein": "^1.0.8",
        "emoji-regex": "^9.2.2",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^3.3.5",
        "language-tags": "^1.0.9",
        "minimatch": "^3.1.2",
        "object.fromentries": "^2.0.8",
        "safe-regex-test": "^1.0.3",
        "string.prototype.includes": "^2.0.1"
      },
      "engines": {
        "node": ">=4.0"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9"
      }
    },
    "node_modules/eslint-plugin-react": {
      "version": "7.37.5",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.5.tgz",
      "integrity": "sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.8",
        "array.prototype.findlast": "^1.2.5",
        "array.prototype.flatmap": "^1.3.3",
        "array.prototype.tosorted": "^1.1.4",
        "doctrine": "^2.1.0",
        "es-iterator-helpers": "^1.2.1",
        "estraverse": "^5.3.0",
        "hasown": "^2.0.2",
        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
        "minimatch": "^3.1.2",
        "object.entries": "^1.1.9",
        "object.fromentries": "^2.0.8",
        "object.values": "^1.2.1",
        "prop-types": "^15.8.1",
        "resolve": "^2.0.0-next.5",
        "semver": "^6.3.1",
        "string.prototype.matchall": "^4.0.12",
        "string.prototype.repeat": "^1.0.0"
      },
      "engines": {
        "node": ">=4"
      },
      "peerDependencies": {
        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
      }
    },
    "node_modules/eslint-plugin-react-hooks": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/resolve": {
      "version": "2.0.0-next.5",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.13.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/eslint-plugin-react/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree": {
      "version": "10.4.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.15.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/event-target-shim": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/event-target-shim/-/event-target-shim-5.0.1.tgz",
      "integrity": "sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/eventemitter3": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz",
      "integrity": "sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==",
      "license": "MIT"
    },
    "node_modules/extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
      "license": "MIT"
    },
    "node_modules/farmhash-modern": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/farmhash-modern/-/farmhash-modern-1.1.0.tgz",
      "integrity": "sha512-6ypT4XfgqJk/F3Yuv4SX26I3doUjt0GTG4a+JgWxXQpxXzTBq8fPUeGHfcYMMDPHJHm3yPOSjaeBwBGAHWXCdA==",
      "license": "MIT",
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "license": "MIT"
    },
    "node_modules/fast-glob": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.1.tgz",
      "integrity": "sha512-kNFPyjhh5cKjrUltxs+wFx+ZkbRaxxmZ+X0ZU31SOsxCEtP9VPgtq2teZw1DebupL5GmDaNQ6yKMMVcM41iqDg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.4"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-xml-parser": {
      "version": "4.5.3",
      "resolved": "https://registry.npmjs.org/fast-xml-parser/-/fast-xml-parser-4.5.3.tgz",
      "integrity": "sha512-RKihhV+SHsIUGXObeVy9AXiBbFwkVk7Syp8XgwN5U3JV416+Gwp/GO9i0JYKmikykgz/UHRrrV4ROuZEo/T0ig==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/NaturalIntelligence"
        }
      ],
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "strnum": "^1.1.1"
      },
      "bin": {
        "fxparser": "src/cli/cli.js"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/faye-websocket": {
      "version": "0.11.4",
      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.4.tgz",
      "integrity": "sha512-CzbClwlXAuiRQAlUyfqPgvPoNKTckTPGfwZV4ZdAhVcP2lh9KUxJg2b5GkE7XbjKQ3YJnQ9z6D9ntLAlB+tP8g==",
      "license": "Apache-2.0",
      "dependencies": {
        "websocket-driver": ">=0.5.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/fecha": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/fecha/-/fecha-4.2.3.tgz",
      "integrity": "sha512-OP2IUU6HeYKJi3i0z4A19kHMQoLVs4Hc+DPqqxI2h/DPZHTm/vjsfC6P0b4jCMy14XizLBqvndQ+UilD7707Jw==",
      "license": "MIT"
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/firebase": {
      "version": "12.0.0",
      "resolved": "https://registry.npmjs.org/firebase/-/firebase-12.0.0.tgz",
      "integrity": "sha512-KV+OrMJpi2uXlqL2zaCcXb7YuQbY/gMIWT1hf8hKeTW1bSumWaHT5qfmn0WTpHwKQa3QEVOtZR2ta9EchcmYuw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@firebase/ai": "2.0.0",
        "@firebase/analytics": "0.10.18",
        "@firebase/analytics-compat": "0.2.24",
        "@firebase/app": "0.14.0",
        "@firebase/app-check": "0.11.0",
        "@firebase/app-check-compat": "0.4.0",
        "@firebase/app-compat": "0.5.0",
        "@firebase/app-types": "0.9.3",
        "@firebase/auth": "1.11.0",
        "@firebase/auth-compat": "0.6.0",
        "@firebase/data-connect": "0.3.11",
        "@firebase/database": "1.1.0",
        "@firebase/database-compat": "2.1.0",
        "@firebase/firestore": "4.9.0",
        "@firebase/firestore-compat": "0.4.0",
        "@firebase/functions": "0.13.0",
        "@firebase/functions-compat": "0.4.0",
        "@firebase/installations": "0.6.19",
        "@firebase/installations-compat": "0.2.19",
        "@firebase/messaging": "0.12.23",
        "@firebase/messaging-compat": "0.2.23",
        "@firebase/performance": "0.7.8",
        "@firebase/performance-compat": "0.2.21",
        "@firebase/remote-config": "0.6.6",
        "@firebase/remote-config-compat": "0.2.19",
        "@firebase/storage": "0.14.0",
        "@firebase/storage-compat": "0.4.0",
        "@firebase/util": "1.13.0"
      }
    },
    "node_modules/firebase-admin": {
      "version": "13.4.0",
      "resolved": "https://registry.npmjs.org/firebase-admin/-/firebase-admin-13.4.0.tgz",
      "integrity": "sha512-Y8DcyKK+4pl4B93ooiy1G8qvdyRMkcNFfBSh+8rbVcw4cW8dgG0VXCCTp5NUwub8sn9vSPsOwpb9tE2OuFmcfQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@fastify/busboy": "^3.0.0",
        "@firebase/database-compat": "^2.0.0",
        "@firebase/database-types": "^1.0.6",
        "@types/node": "^22.8.7",
        "farmhash-modern": "^1.1.0",
        "google-auth-library": "^9.14.2",
        "jsonwebtoken": "^9.0.0",
        "jwks-rsa": "^3.1.0",
        "node-forge": "^1.3.1",
        "uuid": "^11.0.2"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@google-cloud/firestore": "^7.11.0",
        "@google-cloud/storage": "^7.14.0"
      }
    },
    "node_modules/firebase-admin/node_modules/@types/node": {
      "version": "22.17.0",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.17.0.tgz",
      "integrity": "sha512-bbAKTCqX5aNVryi7qXVMi+OkB3w/OyblodicMbvE38blyAz7GxXf6XYhklokijuPwwVg9sDLKRxt0ZHXQwZVfQ==",
      "license": "MIT",
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/fn.name": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fn.name/-/fn.name-1.1.0.tgz",
      "integrity": "sha512-GRnmB5gPyJpAhTQdSZTSp9uaPSvl09KoYcMQtsB9rQoOmzs9dH6ffeccH+Z+cv6P68Hu5bC6JjRh4Ah/mHSNRw==",
      "license": "MIT"
    },
    "node_modules/follow-redirects": {
      "version": "1.15.11",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.11.tgz",
      "integrity": "sha512-deG2P0JfjrTxl50XGCDyfI97ZGVCxIpfKYmfyrQ54n5FO/0gfIES8C/Psl6kWVDolizcaaxZJnTS0QSMxvnsBQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/fontkit": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/fontkit/-/fontkit-2.0.4.tgz",
      "integrity": "sha512-syetQadaUEDNdxdugga9CpEYVaQIxOwk7GlwZWWZ19//qW4zE5bknOKeMBDYAASwnpaSHKJITRLMF9m1fp3s6g==",
      "license": "MIT",
      "dependencies": {
        "@swc/helpers": "^0.5.12",
        "brotli": "^1.3.2",
        "clone": "^2.1.2",
        "dfa": "^1.2.0",
        "fast-deep-equal": "^3.1.3",
        "restructure": "^3.0.0",
        "tiny-inflate": "^1.0.3",
        "unicode-properties": "^1.4.0",
        "unicode-trie": "^2.0.0"
      }
    },
    "node_modules/for-each": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
      "integrity": "sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/foreground-child": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
      "license": "ISC",
      "dependencies": {
        "cross-spawn": "^7.0.6",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/form-data": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
      "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/formidable": {
      "version": "3.5.4",
      "resolved": "https://registry.npmjs.org/formidable/-/formidable-3.5.4.tgz",
      "integrity": "sha512-YikH+7CUTOtP44ZTnUhR7Ic2UASBPOqmaRkRKxRbywPTe5VxF7RRCck4af9wutiZ/QKM5nME9Bie2fFaPz5Gug==",
      "license": "MIT",
      "dependencies": {
        "@paralleldrive/cuid2": "^2.2.2",
        "dezalgo": "^1.0.4",
        "once": "^1.4.0"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "funding": {
        "url": "https://ko-fi.com/tunnckoCore/commissions"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/framer-motion": {
      "version": "12.23.12",
      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-12.23.12.tgz",
      "integrity": "sha512-6e78rdVtnBvlEVgu6eFEAgG9v3wLnYEboM8I5O5EXvfKC8gxGQB8wXJdhkMy10iVcn05jl6CNw7/HTsTCfwcWg==",
      "license": "MIT",
      "dependencies": {
        "motion-dom": "^12.23.12",
        "motion-utils": "^12.23.6",
        "tslib": "^2.4.0"
      },
      "peerDependencies": {
        "@emotion/is-prop-valid": "*",
        "react": "^18.0.0 || ^19.0.0",
        "react-dom": "^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/is-prop-valid": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/function.prototype.name": {
      "version": "1.1.8",
      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.8.tgz",
      "integrity": "sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "functions-have-names": "^1.2.3",
        "hasown": "^2.0.2",
        "is-callable": "^1.2.7"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/functional-red-black-tree": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",
      "integrity": "sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/functions-have-names": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gaxios": {
      "version": "6.7.1",
      "resolved": "https://registry.npmjs.org/gaxios/-/gaxios-6.7.1.tgz",
      "integrity": "sha512-LDODD4TMYx7XXdpwxAVRAIAuB0bzv0s+ywFonY46k126qzQHT9ygyoa9tncmOiQmmDrik65UYsEkv3lbfqQ3yQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "extend": "^3.0.2",
        "https-proxy-agent": "^7.0.1",
        "is-stream": "^2.0.0",
        "node-fetch": "^2.6.9",
        "uuid": "^9.0.1"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/gaxios/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/gcp-metadata": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/gcp-metadata/-/gcp-metadata-6.1.1.tgz",
      "integrity": "sha512-a4tiq7E0/5fTjxPAaH4jpjkSv/uCaU2p5KC6HVGrvl0cDjA8iBZv4vv1gyzlmK0ZUKqwpOyQMKzZQe3lTit77A==",
      "license": "Apache-2.0",
      "dependencies": {
        "gaxios": "^6.1.1",
        "google-logging-utils": "^0.0.2",
        "json-bigint": "^1.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/get-caller-file": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
      "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
      "license": "ISC",
      "engines": {
        "node": "6.* || 8.* || >= 10.*"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-nonce": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-nonce/-/get-nonce-1.0.1.tgz",
      "integrity": "sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/get-symbol-description": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.1.0.tgz",
      "integrity": "sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-tsconfig": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgz",
      "integrity": "sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "resolve-pkg-maps": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/privatenumber/get-tsconfig?sponsor=1"
      }
    },
    "node_modules/glob": {
      "version": "10.4.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
      "license": "ISC",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^3.1.2",
        "minimatch": "^9.0.4",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^1.11.1"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/glob/node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/glob/node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/globalthis": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.2.1",
        "gopd": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/google-auth-library": {
      "version": "9.15.1",
      "resolved": "https://registry.npmjs.org/google-auth-library/-/google-auth-library-9.15.1.tgz",
      "integrity": "sha512-Jb6Z0+nvECVz+2lzSMt9u98UsoakXxA2HGHMCxh+so3n90XgYWkq5dur19JAJV7ONiJY22yBTyJB1TSkvPq9Ng==",
      "license": "Apache-2.0",
      "dependencies": {
        "base64-js": "^1.3.0",
        "ecdsa-sig-formatter": "^1.0.11",
        "gaxios": "^6.1.1",
        "gcp-metadata": "^6.1.0",
        "gtoken": "^7.0.0",
        "jws": "^4.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/google-gax": {
      "version": "4.6.1",
      "resolved": "https://registry.npmjs.org/google-gax/-/google-gax-4.6.1.tgz",
      "integrity": "sha512-V6eky/xz2mcKfAd1Ioxyd6nmA61gao3n01C+YeuIwu3vzM9EDR6wcVzMSIbLMDXWeoi9SHYctXuKYC5uJUT3eQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@grpc/grpc-js": "^1.10.9",
        "@grpc/proto-loader": "^0.7.13",
        "@types/long": "^4.0.0",
        "abort-controller": "^3.0.0",
        "duplexify": "^4.0.0",
        "google-auth-library": "^9.3.0",
        "node-fetch": "^2.7.0",
        "object-hash": "^3.0.0",
        "proto3-json-serializer": "^2.0.2",
        "protobufjs": "^7.3.2",
        "retry-request": "^7.0.0",
        "uuid": "^9.0.1"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/google-gax/node_modules/@grpc/grpc-js": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.13.4.tgz",
      "integrity": "sha512-GsFaMXCkMqkKIvwCQjCrwH+GHbPKBjhwo/8ZuUkWHqbI73Kky9I+pQltrlT0+MWpedCoosda53lgjYfyEPgxBg==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "@grpc/proto-loader": "^0.7.13",
        "@js-sdsl/ordered-map": "^4.4.2"
      },
      "engines": {
        "node": ">=12.10.0"
      }
    },
    "node_modules/google-gax/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "optional": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/google-logging-utils": {
      "version": "0.0.2",
      "resolved": "https://registry.npmjs.org/google-logging-utils/-/google-logging-utils-0.0.2.tgz",
      "integrity": "sha512-NEgUnEcBiP5HrPzufUkBzJOD/Sxsco3rLNo1F1TNf7ieU8ryUzBhqba8r756CjLX7rn3fHl6iLEwPYuqpoKgQQ==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graphemer": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/gtoken": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/gtoken/-/gtoken-7.1.0.tgz",
      "integrity": "sha512-pCcEwRi+TKpMlxAQObHDQ56KawURgyAf6jtIY046fJ5tIv3zDe/LEIubckAO8fj6JnAxLdmWkUfNyulQ2iKdEw==",
      "license": "MIT",
      "dependencies": {
        "gaxios": "^6.0.0",
        "jws": "^4.0.0"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/has-bigints": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz",
      "integrity": "sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-property-descriptors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-define-property": "^1.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-proto": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.2.0.tgz",
      "integrity": "sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/html-entities": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-2.6.0.tgz",
      "integrity": "sha512-kig+rMn/QOVRvr7c86gQ8lWXq+Hkv6CbAH1hLu+RG338StTpE8Z0b44SDVaqVu7HGKf27frdmUYEs9hTUX/cLQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/mdevils"
        },
        {
          "type": "patreon",
          "url": "https://patreon.com/mdevils"
        }
      ],
      "license": "MIT",
      "optional": true
    },
    "node_modules/http-parser-js": {
      "version": "0.5.10",
      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.10.tgz",
      "integrity": "sha512-Pysuw9XpUq5dVc/2SMHpuTY01RFl8fttgcyunjL7eEMhGM3cI4eOmiCycJDVCo/7O7ClfQD3SaI6ftDzqOXYMA==",
      "license": "MIT"
    },
    "node_modules/http-proxy-agent": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-5.0.0.tgz",
      "integrity": "sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@tootallnate/once": "2",
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/http-proxy-agent/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/https-proxy-agent": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
      "integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "^7.1.2",
        "debug": "4"
      },
      "engines": {
        "node": ">= 14"
      }
    },
    "node_modules/idb": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/idb/-/idb-7.1.1.tgz",
      "integrity": "sha512-gchesWBzyvGHRO9W8tzUWFDycow5gwjvFKfyV9FF32Y7F50yZMp7mP+T2mJIWFx49zicqyC4uefHM17o6xKIVQ==",
      "license": "ISC"
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/immer": {
      "version": "10.1.1",
      "resolved": "https://registry.npmjs.org/immer/-/immer-10.1.1.tgz",
      "integrity": "sha512-s2MPrmjovJcoMaHtx6K11Ra7oD05NT97w1IC5zpMkT6Atjr7H8LjaDd81iIxUYpMKSRRNMJE703M1Fhr/TctHw==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/immer"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "license": "ISC"
    },
    "node_modules/internal-slot": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
      "integrity": "sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "hasown": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/internmap": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz",
      "integrity": "sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/is-array-buffer": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz",
      "integrity": "sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-arrayish": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
      "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
      "license": "MIT"
    },
    "node_modules/is-async-function": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.1.1.tgz",
      "integrity": "sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "async-function": "^1.0.0",
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.1",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bigint": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz",
      "integrity": "sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-bigints": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-boolean-object": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz",
      "integrity": "sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-bun-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-bun-module/-/is-bun-module-2.0.0.tgz",
      "integrity": "sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "semver": "^7.7.1"
      }
    },
    "node_modules/is-callable": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-data-view": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.2.tgz",
      "integrity": "sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "is-typed-array": "^1.1.13"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-date-object": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz",
      "integrity": "sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-finalizationregistry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.1.1.tgz",
      "integrity": "sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-generator-function": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.1.0.tgz",
      "integrity": "sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-proto": "^1.0.0",
        "has-tostringtag": "^1.0.2",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-map": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-negative-zero": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-number-object": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz",
      "integrity": "sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-regex": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz",
      "integrity": "sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-set": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-shared-array-buffer": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz",
      "integrity": "sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-stream": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz",
      "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/is-string": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz",
      "integrity": "sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-symbol": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz",
      "integrity": "sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "has-symbols": "^1.1.0",
        "safe-regex-test": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-typed-array": {
      "version": "1.1.15",
      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.15.tgz",
      "integrity": "sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakmap": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakref": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.1.1.tgz",
      "integrity": "sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-weakset": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz",
      "integrity": "sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "get-intrinsic": "^1.2.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/isarray": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "license": "ISC"
    },
    "node_modules/iterator.prototype": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.5.tgz",
      "integrity": "sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "get-proto": "^1.0.0",
        "has-symbols": "^1.1.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/jackspeak": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/joi": {
      "version": "17.13.3",
      "resolved": "https://registry.npmjs.org/joi/-/joi-17.13.3.tgz",
      "integrity": "sha512-otDA4ldcIx+ZXsKHWmp0YizCweVRZG96J10b0FevjfuncLO1oX59THoAmHkNubYJ+9gWsYsp5k8v4ib6oDv1fA==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "@hapi/hoek": "^9.3.0",
        "@hapi/topo": "^5.1.0",
        "@sideway/address": "^4.1.5",
        "@sideway/formula": "^3.0.1",
        "@sideway/pinpoint": "^2.0.0"
      }
    },
    "node_modules/jose": {
      "version": "4.15.9",
      "resolved": "https://registry.npmjs.org/jose/-/jose-4.15.9.tgz",
      "integrity": "sha512-1vUQX+IdDMVPj4k8kOxgUqlcK518yluMuGZwqlr44FS1ppZB/5GWh4rZG89erpOBOJjU/OBsnCVFfapsRz6nEA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/panva"
      }
    },
    "node_modules/jpeg-exif": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/jpeg-exif/-/jpeg-exif-1.1.4.tgz",
      "integrity": "sha512-a+bKEcCjtuW5WTdgeXFzswSrdqi0jk4XlEtZlx5A94wCoBpFjfFTbo/Tra5SpNCl/YFZPvcV1dJc+TAYeg6ROQ==",
      "license": "MIT"
    },
    "node_modules/js-cookie": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/js-cookie/-/js-cookie-3.0.5.tgz",
      "integrity": "sha512-cEiJEAEoIbWfCZYKWhVwFuvPX1gETRYPw6LlaTKoxD3s2AkXzkCjnp6h0V77ozyqj0jakteJ4YqDJT830+lVGw==",
      "license": "MIT",
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/json-bigint": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-bigint/-/json-bigint-1.0.0.tgz",
      "integrity": "sha512-SiPv/8VpZuWbvLSMtTDU8hEfrZWg/mH/nV/b4o0CYbSxu1UIQPLdwKOCIyLQX+VIPO5vrLX3i8qtqFyhdPSUSQ==",
      "license": "MIT",
      "dependencies": {
        "bignumber.js": "^9.0.0"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json5": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.2.tgz",
      "integrity": "sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.0"
      },
      "bin": {
        "json5": "lib/cli.js"
      }
    },
    "node_modules/jsonwebtoken": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",
      "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",
      "license": "MIT",
      "dependencies": {
        "jws": "^3.2.2",
        "lodash.includes": "^4.3.0",
        "lodash.isboolean": "^3.0.3",
        "lodash.isinteger": "^4.0.4",
        "lodash.isnumber": "^3.0.3",
        "lodash.isplainobject": "^4.0.6",
        "lodash.isstring": "^4.0.1",
        "lodash.once": "^4.0.0",
        "ms": "^2.1.1",
        "semver": "^7.5.4"
      },
      "engines": {
        "node": ">=12",
        "npm": ">=6"
      }
    },
    "node_modules/jsonwebtoken/node_modules/jwa": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz",
      "integrity": "sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==",
      "license": "MIT",
      "dependencies": {
        "buffer-equal-constant-time": "^1.0.1",
        "ecdsa-sig-formatter": "1.0.11",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jsonwebtoken/node_modules/jws": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
      "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
      "license": "MIT",
      "dependencies": {
        "jwa": "^1.4.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jsx-ast-utils": {
      "version": "3.3.5",
      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "array-includes": "^3.1.6",
        "array.prototype.flat": "^1.3.1",
        "object.assign": "^4.1.4",
        "object.values": "^1.1.6"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/jwa": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/jwa/-/jwa-2.0.1.tgz",
      "integrity": "sha512-hRF04fqJIP8Abbkq5NKGN0Bbr3JxlQ+qhZufXVr0DvujKy93ZCbXZMHDL4EOtodSbCWxOqR8MS1tXA5hwqCXDg==",
      "license": "MIT",
      "dependencies": {
        "buffer-equal-constant-time": "^1.0.1",
        "ecdsa-sig-formatter": "1.0.11",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jwks-rsa": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/jwks-rsa/-/jwks-rsa-3.2.0.tgz",
      "integrity": "sha512-PwchfHcQK/5PSydeKCs1ylNym0w/SSv8a62DgHJ//7x2ZclCoinlsjAfDxAAbpoTPybOum/Jgy+vkvMmKz89Ww==",
      "license": "MIT",
      "dependencies": {
        "@types/express": "^4.17.20",
        "@types/jsonwebtoken": "^9.0.4",
        "debug": "^4.3.4",
        "jose": "^4.15.4",
        "limiter": "^1.1.5",
        "lru-memoizer": "^2.2.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/jwks-rsa/node_modules/@types/express": {
      "version": "4.17.23",
      "resolved": "https://registry.npmjs.org/@types/express/-/express-4.17.23.tgz",
      "integrity": "sha512-Crp6WY9aTYP3qPi2wGDo9iUe/rceX01UMhnF1jmwDcKCFM6cx7YhGP/Mpr3y9AASpfHixIG0E6azCcL5OcDHsQ==",
      "license": "MIT",
      "dependencies": {
        "@types/body-parser": "*",
        "@types/express-serve-static-core": "^4.17.33",
        "@types/qs": "*",
        "@types/serve-static": "*"
      }
    },
    "node_modules/jwks-rsa/node_modules/@types/express-serve-static-core": {
      "version": "4.19.6",
      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.19.6.tgz",
      "integrity": "sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "*",
        "@types/qs": "*",
        "@types/range-parser": "*",
        "@types/send": "*"
      }
    },
    "node_modules/jws": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jws/-/jws-4.0.0.tgz",
      "integrity": "sha512-KDncfTmOZoOMTFG4mBlG0qUIOlc03fmzH+ru6RgYVZhPkyiy/92Owlt/8UEN+a4TXR1FQetfIpJE8ApdvdVxTg==",
      "license": "MIT",
      "dependencies": {
        "jwa": "^2.0.0",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/keyux": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/keyux/-/keyux-0.7.2.tgz",
      "integrity": "sha512-Z8ULf9BhSx1hI2rKG2uNjcvMgQmza97ZW2w43phS5VaT4wiTka7tOL4i/GJSc79k65tbvpoTVNCZwam0pqoH6A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/kuler": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/kuler/-/kuler-2.0.0.tgz",
      "integrity": "sha512-Xq9nH7KlWZmXAtodXDDRE7vs6DU1gTU8zYDHDiWLSip45Egwq3plLHzPn27NgvzL2r1LMPC1vdqh98sQxtqj4A==",
      "license": "MIT"
    },
    "node_modules/language-subtag-registry": {
      "version": "0.3.23",
      "resolved": "https://registry.npmjs.org/language-subtag-registry/-/language-subtag-registry-0.3.23.tgz",
      "integrity": "sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==",
      "dev": true,
      "license": "CC0-1.0"
    },
    "node_modules/language-tags": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/language-tags/-/language-tags-1.0.9.tgz",
      "integrity": "sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "language-subtag-registry": "^0.3.20"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lilconfig": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
      "license": "MIT",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/antonk52"
      }
    },
    "node_modules/limiter": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/limiter/-/limiter-1.1.5.tgz",
      "integrity": "sha512-FWWMIEOxz3GwUI4Ts/IvgVy6LPvoMPgjMdQ185nN6psJyBJ4yOpzqm695/h5umdLJg2vW3GR5iG11MAkR2AzJA=="
    },
    "node_modules/linebreak": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/linebreak/-/linebreak-1.1.0.tgz",
      "integrity": "sha512-MHp03UImeVhB7XZtjd0E4n6+3xr5Dq/9xI/5FptGk5FrbDR3zagPa2DS6U8ks/3HjbKWG9Q1M2ufOzxV2qLYSQ==",
      "license": "MIT",
      "dependencies": {
        "base64-js": "0.0.8",
        "unicode-trie": "^2.0.0"
      }
    },
    "node_modules/linebreak/node_modules/base64-js": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-0.0.8.tgz",
      "integrity": "sha512-3XSA2cR/h/73EzlXXdU6YNycmYI7+kicTxks4eJg2g39biHR84slg2+des+p7iHYhbRg/udIS4TD53WabcOUkw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "license": "MIT"
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "license": "MIT"
    },
    "node_modules/lodash.camelcase": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
      "integrity": "sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA==",
      "license": "MIT"
    },
    "node_modules/lodash.castarray": {
      "version": "4.4.0",
      "resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
      "integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.clonedeep": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
      "integrity": "sha512-H5ZhCF25riFd9uB5UCkVKo61m3S/xZk1x4wA6yp/L3RFP6Z/eHH1ymQcGLo7J3GMPfm0V/7m1tryHuGVxpqEBQ==",
      "license": "MIT"
    },
    "node_modules/lodash.includes": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==",
      "license": "MIT"
    },
    "node_modules/lodash.isboolean": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==",
      "license": "MIT"
    },
    "node_modules/lodash.isinteger": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==",
      "license": "MIT"
    },
    "node_modules/lodash.isnumber": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==",
      "license": "MIT"
    },
    "node_modules/lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
      "license": "MIT"
    },
    "node_modules/lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash.once": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==",
      "license": "MIT"
    },
    "node_modules/logform": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/logform/-/logform-2.7.0.tgz",
      "integrity": "sha512-TFYA4jnP7PVbmlBIfhlSe+WKxs9dklXMTEGcBCIvLhE/Tn3H6Gk1norupVW7m5Cnd4bLcr08AytbyV/xj7f/kQ==",
      "license": "MIT",
      "dependencies": {
        "@colors/colors": "1.6.0",
        "@types/triple-beam": "^1.3.2",
        "fecha": "^4.2.0",
        "ms": "^2.1.1",
        "safe-stable-stringify": "^2.3.1",
        "triple-beam": "^1.3.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      }
    },
    "node_modules/long": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/long/-/long-5.3.2.tgz",
      "integrity": "sha512-mNAgZ1GmyNhD7AuqnTG3/VQ26o760+ZYBPKjPvugO8+nLbYfX6TVpJPseBvopbdY+qpZ/lKUnmEc1LeZYS3QAA==",
      "license": "Apache-2.0"
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lottie-react": {
      "version": "2.4.1",
      "resolved": "https://registry.npmjs.org/lottie-react/-/lottie-react-2.4.1.tgz",
      "integrity": "sha512-LQrH7jlkigIIv++wIyrOYFLHSKQpEY4zehPicL9bQsrt1rnoKRYCYgpCUe5maqylNtacy58/sQDZTkwMcTRxZw==",
      "license": "MIT",
      "dependencies": {
        "lottie-web": "^5.10.2"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/lottie-web": {
      "version": "5.13.0",
      "resolved": "https://registry.npmjs.org/lottie-web/-/lottie-web-5.13.0.tgz",
      "integrity": "sha512-+gfBXl6sxXMPe8tKQm7qzLnUy5DUPJPKIyRHwtpCpyUEYjHYRJC/5gjUvdkuO2c3JllrPtHXH5UJJK8LRYl5yQ==",
      "license": "MIT"
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "license": "ISC",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/lru-memoizer": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/lru-memoizer/-/lru-memoizer-2.3.0.tgz",
      "integrity": "sha512-GXn7gyHAMhO13WSKrIiNfztwxodVsP8IoZ3XfrJV4yH2x0/OeTO/FIaAHTY5YekdGgW94njfuKmyyt1E0mR6Ug==",
      "license": "MIT",
      "dependencies": {
        "lodash.clonedeep": "^4.5.0",
        "lru-cache": "6.0.0"
      }
    },
    "node_modules/lucide-react": {
      "version": "0.535.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.535.0.tgz",
      "integrity": "sha512-2E3+YWGLpjZ8ejIYrdqxVjWMSMiRQHmU6xZYE9xA2SC5j2m0NeB4/acjhRdhxbfniBKoNEukDDQnmShTxwOQ4g==",
      "license": "ISC",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-3.0.0.tgz",
      "integrity": "sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==",
      "license": "MIT",
      "optional": true,
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mini-svg-data-uri": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/mini-svg-data-uri/-/mini-svg-data-uri-1.4.4.tgz",
      "integrity": "sha512-r9deDe9p5FJUPZAk3A59wGH7Ii9YrjjWw0jmw/liSbHl2CHiyXj6FcDXDu2K3TjVAXqiJdaw3xxwlZZr9E6nHg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "mini-svg-data-uri": "cli.js"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/mkdirp": {
      "version": "0.5.6",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
      "license": "MIT",
      "dependencies": {
        "minimist": "^1.2.6"
      },
      "bin": {
        "mkdirp": "bin/cmd.js"
      }
    },
    "node_modules/motion-dom": {
      "version": "12.23.12",
      "resolved": "https://registry.npmjs.org/motion-dom/-/motion-dom-12.23.12.tgz",
      "integrity": "sha512-RcR4fvMCTESQBD/uKQe49D5RUeDOokkGRmz4ceaJKDBgHYtZtntC/s2vLvY38gqGaytinij/yi3hMcWVcEF5Kw==",
      "license": "MIT",
      "dependencies": {
        "motion-utils": "^12.23.6"
      }
    },
    "node_modules/motion-utils": {
      "version": "12.23.6",
      "resolved": "https://registry.npmjs.org/motion-utils/-/motion-utils-12.23.6.tgz",
      "integrity": "sha512-eAWoPgr4eFEOFfg2WjIsMoqJTW6Z8MTUCgn/GZ3VRpClWBdnbjryiA3ZSNLyxCTmCQx4RmYX6jX1iWHbenUPNQ==",
      "license": "MIT"
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "license": "MIT"
    },
    "node_modules/multer": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/multer/-/multer-2.0.2.tgz",
      "integrity": "sha512-u7f2xaZ/UG8oLXHvtF/oWTRvT44p9ecwBBqTwgJVq0+4BW1g8OW01TyMEGWBHbyMOYVHXslaut7qEQ1meATXgw==",
      "license": "MIT",
      "dependencies": {
        "append-field": "^1.0.0",
        "busboy": "^1.6.0",
        "concat-stream": "^2.0.0",
        "mkdirp": "^0.5.6",
        "object-assign": "^4.1.1",
        "type-is": "^1.6.18",
        "xtend": "^4.0.2"
      },
      "engines": {
        "node": ">= 10.16.0"
      }
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/napi-postinstall": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/napi-postinstall/-/napi-postinstall-0.3.2.tgz",
      "integrity": "sha512-tWVJxJHmBWLy69PvO96TZMZDrzmw5KeiZBz3RHmiM2XZ9grBJ2WgMAFVVg25nqp3ZjTFUs2Ftw1JhscL3Teliw==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "napi-postinstall": "lib/cli.js"
      },
      "engines": {
        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/napi-postinstall"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/next": {
      "version": "15.4.4",
      "resolved": "https://registry.npmjs.org/next/-/next-15.4.4.tgz",
      "integrity": "sha512-kNcubvJjOL9yUOfwtZF3HfDhuhp+kVD+FM2A6Tyua1eI/xfmY4r/8ZS913MMz+oWKDlbps/dQOWdDricuIkXLw==",
      "license": "MIT",
      "dependencies": {
        "@next/env": "15.4.4",
        "@swc/helpers": "0.5.15",
        "caniuse-lite": "^1.0.30001579",
        "postcss": "8.4.31",
        "styled-jsx": "5.1.6"
      },
      "bin": {
        "next": "dist/bin/next"
      },
      "engines": {
        "node": "^18.18.0 || ^19.8.0 || >= 20.0.0"
      },
      "optionalDependencies": {
        "@next/swc-darwin-arm64": "15.4.4",
        "@next/swc-darwin-x64": "15.4.4",
        "@next/swc-linux-arm64-gnu": "15.4.4",
        "@next/swc-linux-arm64-musl": "15.4.4",
        "@next/swc-linux-x64-gnu": "15.4.4",
        "@next/swc-linux-x64-musl": "15.4.4",
        "@next/swc-win32-arm64-msvc": "15.4.4",
        "@next/swc-win32-x64-msvc": "15.4.4",
        "sharp": "^0.34.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.1.0",
        "@playwright/test": "^1.51.1",
        "babel-plugin-react-compiler": "*",
        "react": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
        "react-dom": "^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0",
        "sass": "^1.3.0"
      },
      "peerDependenciesMeta": {
        "@opentelemetry/api": {
          "optional": true
        },
        "@playwright/test": {
          "optional": true
        },
        "babel-plugin-react-compiler": {
          "optional": true
        },
        "sass": {
          "optional": true
        }
      }
    },
    "node_modules/next-connect": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/next-connect/-/next-connect-1.0.0.tgz",
      "integrity": "sha512-FeLURm9MdvzY1SDUGE74tk66mukSqL6MAzxajW7Gqh6DZKBZLrXmXnGWtHJZXkfvoi+V/DUe9Hhtfkl4+nTlYA==",
      "license": "MIT",
      "dependencies": {
        "@tsconfig/node16": "^1.0.3",
        "regexparam": "^2.0.1"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/next/node_modules/postcss": {
      "version": "8.4.31",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.31.tgz",
      "integrity": "sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.6",
        "picocolors": "^1.0.0",
        "source-map-js": "^1.0.2"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/node-fetch": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
      "license": "MIT",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/node-forge": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-1.3.1.tgz",
      "integrity": "sha512-dPEtOeMvF9VMcYV/1Wb8CPoVAXtp6MKMlcbAt4ddqmGqUJ6fQZFXkNZNkNlfevtNkGtaSoXf/vNNNSvgrdXwtA==",
      "license": "(BSD-3-Clause OR GPL-2.0)",
      "engines": {
        "node": ">= 6.13.0"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/nodemailer": {
      "version": "7.0.5",
      "resolved": "https://registry.npmjs.org/nodemailer/-/nodemailer-7.0.5.tgz",
      "integrity": "sha512-nsrh2lO3j4GkLLXoeEksAMgAOqxOv6QumNRVQTJwKH4nuiww6iC2y7GyANs9kRAxCexg3+lTWM3PZ91iLlVjfg==",
      "license": "MIT-0",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/object-inspect": {
      "version": "1.13.4",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.assign": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz",
      "integrity": "sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0",
        "has-symbols": "^1.1.0",
        "object-keys": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.entries": {
      "version": "1.1.9",
      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.9.tgz",
      "integrity": "sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.fromentries": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/object.groupby": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/object.groupby/-/object.groupby-1.0.3.tgz",
      "integrity": "sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/object.values": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.1.tgz",
      "integrity": "sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "license": "ISC",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/one-time": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/one-time/-/one-time-1.0.0.tgz",
      "integrity": "sha512-5DXOiRKwuSEcQ/l0kGCF6Q3jcADFv5tSmRaJck/OqkVFcOzutB134KRSfF0xDrL39MNnqxbHBbUUcjZIhTgb2g==",
      "license": "MIT",
      "dependencies": {
        "fn.name": "1.x.x"
      }
    },
    "node_modules/openai": {
      "version": "5.12.0",
      "resolved": "https://registry.npmjs.org/openai/-/openai-5.12.0.tgz",
      "integrity": "sha512-vUdt02xiWgOHiYUmW0Hj1Qu9OKAiVQu5Bd547ktVCiMKC1BkB5L3ImeEnCyq3WpRKR6ZTaPgekzqdozwdPs7Lg==",
      "license": "Apache-2.0",
      "bin": {
        "openai": "bin/cli"
      },
      "peerDependencies": {
        "ws": "^8.18.0",
        "zod": "^3.23.8"
      },
      "peerDependenciesMeta": {
        "ws": {
          "optional": true
        },
        "zod": {
          "optional": true
        }
      }
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/own-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/own-keys/-/own-keys-1.0.1.tgz",
      "integrity": "sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "get-intrinsic": "^1.2.6",
        "object-keys": "^1.1.1",
        "safe-push-apply": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "license": "BlueOak-1.0.0"
    },
    "node_modules/pako": {
      "version": "0.2.9",
      "resolved": "https://registry.npmjs.org/pako/-/pako-0.2.9.tgz",
      "integrity": "sha512-NUcwaKxUxWrZLpDG+z/xZaCgQITkA/Dv4V/T6bw7VON6l1Xz/VnrBqrYjZQ12TamKHzITTfOEIYUj48y2KXImA==",
      "license": "MIT"
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "license": "MIT"
    },
    "node_modules/path-scurry": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "lru-cache": "^10.2.0",
        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
      },
      "engines": {
        "node": ">=16 || 14 >=14.18"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/path-scurry/node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "license": "ISC"
    },
    "node_modules/pdfkit": {
      "version": "0.17.1",
      "resolved": "https://registry.npmjs.org/pdfkit/-/pdfkit-0.17.1.tgz",
      "integrity": "sha512-Kkf1I9no14O/uo593DYph5u3QwiMfby7JsBSErN1WqeyTgCBNJE3K4pXBn3TgkdKUIVu+buSl4bYUNC+8Up4xg==",
      "license": "MIT",
      "dependencies": {
        "crypto-js": "^4.2.0",
        "fontkit": "^2.0.4",
        "jpeg-exif": "^1.1.4",
        "linebreak": "^1.1.0",
        "png-js": "^1.0.0"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pirates": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/plivo": {
      "version": "4.75.1",
      "resolved": "https://registry.npmjs.org/plivo/-/plivo-4.75.1.tgz",
      "integrity": "sha512-u6SOF1s3ccdp5v7yl8RYmZUHmnUfsNHsE5DRe4XLozaJlObsKG45kEYliMNTHTHZ6GEdc6Wm8hsD0ZcfIhkn7g==",
      "license": "MIT",
      "dependencies": {
        "@types/node": "^14.14.14",
        "axios": "^1.8.3",
        "base-64": "^0.1.0",
        "build-url": "^1.0.10",
        "form-data": "^4.0.0",
        "https-proxy-agent": "^5.0.0",
        "joi": "^17.9.2",
        "jsonwebtoken": "^9.0.0",
        "lodash": "^4.17.4",
        "querystring": "^0.2.0",
        "uri-parser": "^1.0.0",
        "utf8": "^2.1.2",
        "xml2js": "^0.5.0",
        "xmlbuilder": "^9.0.1"
      }
    },
    "node_modules/plivo/node_modules/@types/node": {
      "version": "14.18.63",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-14.18.63.tgz",
      "integrity": "sha512-fAtCfv4jJg+ExtXhvCkCqUKZ+4ok/JQk01qDKhL5BDDoS3AxKXhV5/MAVUZyQnSEd2GT92fkgZl0pz0Q0AzcIQ==",
      "license": "MIT"
    },
    "node_modules/plivo/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/plivo/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/png-js": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/png-js/-/png-js-1.0.0.tgz",
      "integrity": "sha512-k+YsbhpA9e+EFfKjTCH3VW6aoKlyNYI6NYdTfDL4CIvFnvsuO84ttonmZE7rc+v23SLTH8XX+5w/Ak9v0xGY4g=="
    },
    "node_modules/possible-typed-array-names": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz",
      "integrity": "sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.6",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.11",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "15.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
      "license": "MIT",
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
      "license": "MIT",
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.4.21"
      }
    },
    "node_modules/postcss-nested": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "postcss-selector-parser": "^6.1.1"
      },
      "engines": {
        "node": ">=12.0"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-nested/node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.0.10",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
      "integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "license": "MIT"
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/prop-types": {
      "version": "15.8.1",
      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.4.0",
        "object-assign": "^4.1.1",
        "react-is": "^16.13.1"
      }
    },
    "node_modules/prop-types/node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/proto3-json-serializer": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/proto3-json-serializer/-/proto3-json-serializer-2.0.2.tgz",
      "integrity": "sha512-SAzp/O4Yh02jGdRc+uIrGoe87dkN/XtwxfZ4ZyafJHymd79ozp5VG5nyZ7ygqPM5+cpLDjjGnYFUkngonyDPOQ==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "protobufjs": "^7.2.5"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/protobufjs": {
      "version": "7.5.3",
      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-7.5.3.tgz",
      "integrity": "sha512-sildjKwVqOI2kmFDiXQ6aEB0fjYTafpEvIBs8tOR8qI4spuL9OPROLVu2qZqi/xgCfsHIwVqlaF8JBjWFHnKbw==",
      "hasInstallScript": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "@protobufjs/aspromise": "^1.1.2",
        "@protobufjs/base64": "^1.1.2",
        "@protobufjs/codegen": "^2.0.4",
        "@protobufjs/eventemitter": "^1.1.0",
        "@protobufjs/fetch": "^1.1.0",
        "@protobufjs/float": "^1.0.2",
        "@protobufjs/inquire": "^1.1.0",
        "@protobufjs/path": "^1.1.2",
        "@protobufjs/pool": "^1.1.0",
        "@protobufjs/utf8": "^1.1.0",
        "@types/node": ">=13.7.0",
        "long": "^5.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      }
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==",
      "license": "MIT"
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/qs": {
      "version": "6.14.0",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.14.0.tgz",
      "integrity": "sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">=0.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/querystring": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.1.tgz",
      "integrity": "sha512-wkvS7mL/JMugcup3/rMitHmd9ecIGd2lhFhK9N3UUQ450h66d1r3Y9nvXzQAW1Lq+wyx61k/1pfKS5KuKiyEbg==",
      "deprecated": "The querystring API is considered Legacy. new code should use the URLSearchParams API instead.",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.x"
      }
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/react": {
      "version": "19.1.0",
      "resolved": "https://registry.npmjs.org/react/-/react-19.1.0.tgz",
      "integrity": "sha512-FS+XFBNvn3GTAWq26joslQgWNoFu08F4kl0J4CgdNKADkdSGXQyTCnKteIAJy96Br6YbpEU1LSzV5dYtjMkMDg==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "19.1.0",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.0.tgz",
      "integrity": "sha512-Xs1hdnE+DyKgeHJeJznQmYMIBG3TKIHJJT95Q58nHLSrElKlGQqDTR2HQ9fx5CN/Gk6Vh/kupBTDLU11/nDk/g==",
      "license": "MIT",
      "dependencies": {
        "scheduler": "^0.26.0"
      },
      "peerDependencies": {
        "react": "^19.1.0"
      }
    },
    "node_modules/react-icons": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.5.0.tgz",
      "integrity": "sha512-MEFcXdkP3dLo8uumGI5xN3lDFNsRtrjbOEKDLD7yv76v4wpnEq2Lt2qeHaQOr34I/wPN3s3+N08WkQ+CW37Xiw==",
      "license": "MIT",
      "peerDependencies": {
        "react": "*"
      }
    },
    "node_modules/react-intersection-observer": {
      "version": "9.16.0",
      "resolved": "https://registry.npmjs.org/react-intersection-observer/-/react-intersection-observer-9.16.0.tgz",
      "integrity": "sha512-w9nJSEp+DrW9KmQmeWHQyfaP6b03v+TdXynaoA964Wxt7mdR3An11z4NNCQgL4gKSK7y1ver2Fq+JKH6CWEzUA==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/react-is": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-19.1.1.tgz",
      "integrity": "sha512-tr41fA15Vn8p4X9ntI+yCyeGSf1TlYaY5vlTZfQmeLBrFo3psOPX6HhTDnFNL9uj3EhP0KAQ80cugCl4b4BERA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/react-redux": {
      "version": "9.2.0",
      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-9.2.0.tgz",
      "integrity": "sha512-ROY9fvHhwOD9ySfrF0wmvu//bKCQ6AeZZq1nJNtbDC+kk5DuSuNX/n6YWYF/SYy7bSba4D4FSz8DJeKY/S/r+g==",
      "license": "MIT",
      "dependencies": {
        "@types/use-sync-external-store": "^0.0.6",
        "use-sync-external-store": "^1.4.0"
      },
      "peerDependencies": {
        "@types/react": "^18.2.25 || ^19",
        "react": "^18.0 || ^19",
        "redux": "^5.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "redux": {
          "optional": true
        }
      }
    },
    "node_modules/react-remove-scroll": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/react-remove-scroll/-/react-remove-scroll-2.7.1.tgz",
      "integrity": "sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==",
      "license": "MIT",
      "dependencies": {
        "react-remove-scroll-bar": "^2.3.7",
        "react-style-singleton": "^2.2.3",
        "tslib": "^2.1.0",
        "use-callback-ref": "^1.3.3",
        "use-sidecar": "^1.1.3"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-remove-scroll-bar": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.8.tgz",
      "integrity": "sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==",
      "license": "MIT",
      "dependencies": {
        "react-style-singleton": "^2.2.2",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/react-style-singleton": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/react-style-singleton/-/react-style-singleton-2.2.3.tgz",
      "integrity": "sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==",
      "license": "MIT",
      "dependencies": {
        "get-nonce": "^1.0.0",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "license": "MIT",
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readable-stream": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
      "license": "MIT",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/recharts": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/recharts/-/recharts-3.1.2.tgz",
      "integrity": "sha512-vhNbYwaxNbk/IATK0Ki29k3qvTkGqwvCgyQAQ9MavvvBwjvKnMTswdbklJpcOAoMPN/qxF3Lyqob0zO+ZXkZ4g==",
      "license": "MIT",
      "dependencies": {
        "@reduxjs/toolkit": "1.x.x || 2.x.x",
        "clsx": "^2.1.1",
        "decimal.js-light": "^2.5.1",
        "es-toolkit": "^1.39.3",
        "eventemitter3": "^5.0.1",
        "immer": "^10.1.1",
        "react-redux": "8.x.x || 9.x.x",
        "reselect": "5.1.1",
        "tiny-invariant": "^1.3.3",
        "use-sync-external-store": "^1.2.2",
        "victory-vendor": "^37.0.2"
      },
      "engines": {
        "node": ">=18"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-is": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/redux": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/redux/-/redux-5.0.1.tgz",
      "integrity": "sha512-M9/ELqF6fy8FwmkpnF0S3YKOqMyoWJ4+CS5Efg2ct3oY9daQvd/Pc71FpGZsVsbl3Cpb+IIcjBDUnnyBdQbq4w==",
      "license": "MIT"
    },
    "node_modules/redux-thunk": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/redux-thunk/-/redux-thunk-3.1.0.tgz",
      "integrity": "sha512-NW2r5T6ksUKXCabzhL9z+h206HQw/NJkcLm1GPImRQ8IzfXwRGqjVhKJGauHirT0DAuyy6hjdnMZaRoAcy0Klw==",
      "license": "MIT",
      "peerDependencies": {
        "redux": "^5.0.0"
      }
    },
    "node_modules/reflect.getprototypeof": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
      "integrity": "sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.9",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.7",
        "get-proto": "^1.0.1",
        "which-builtin-type": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regexp.prototype.flags": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz",
      "integrity": "sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "define-properties": "^1.2.1",
        "es-errors": "^1.3.0",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "set-function-name": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/regexparam": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/regexparam/-/regexparam-2.0.2.tgz",
      "integrity": "sha512-A1PeDEYMrkLrfyOwv2jwihXbo9qxdGD3atBYQA9JJgreAx8/7rC6IUkWOw2NQlOxLp2wL0ifQbh1HuidDfYA6w==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/reselect": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/reselect/-/reselect-5.1.1.tgz",
      "integrity": "sha512-K/BG6eIky/SBpzfHZv/dd+9JBFiS4SWV7FIujVyJRux6e45+73RaUHXLmIR1f7WOMaQ0U1km6qwklRQxpJJY0w==",
      "license": "MIT"
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/resolve-pkg-maps": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgz",
      "integrity": "sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==",
      "dev": true,
      "license": "MIT",
      "funding": {
        "url": "https://github.com/privatenumber/resolve-pkg-maps?sponsor=1"
      }
    },
    "node_modules/restructure": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/restructure/-/restructure-3.0.2.tgz",
      "integrity": "sha512-gSfoiOEA0VPE6Tukkrr7I0RBdE0s7H1eFCDBk05l1KIQT1UIKNc5JZy6jdyW6eYH3aR3g5b3PuL77rq0hvwtAw==",
      "license": "MIT"
    },
    "node_modules/retry": {
      "version": "0.13.1",
      "resolved": "https://registry.npmjs.org/retry/-/retry-0.13.1.tgz",
      "integrity": "sha512-XQBQ3I8W1Cge0Seh+6gjj03LbmRFWuoszgK9ooCpwYIrhhoO80pfq4cUkU5DkknwfOfFteRwlZ56PYOGYyFWdg==",
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/retry-request": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/retry-request/-/retry-request-7.0.2.tgz",
      "integrity": "sha512-dUOvLMJ0/JJYEn8NrpOaGNE7X3vpI5XlZS/u0ANjqtcZVKnIxP7IgCFwrKTxENw29emmwug53awKtaMm4i9g5w==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@types/request": "^2.48.8",
        "extend": "^3.0.2",
        "teeny-request": "^9.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/safe-array-concat": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.3.tgz",
      "integrity": "sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "get-intrinsic": "^1.2.6",
        "has-symbols": "^1.1.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">=0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/safe-push-apply": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
      "integrity": "sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "isarray": "^2.0.5"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-regex-test": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz",
      "integrity": "sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "is-regex": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/safe-stable-stringify": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz",
      "integrity": "sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/sax": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.4.1.tgz",
      "integrity": "sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg==",
      "license": "ISC"
    },
    "node_modules/scheduler": {
      "version": "0.26.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
      "integrity": "sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==",
      "license": "MIT"
    },
    "node_modules/scmp": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/scmp/-/scmp-2.1.0.tgz",
      "integrity": "sha512-o/mRQGk9Rcer/jEEw/yw4mwo3EU/NvYvp577/Btqrym9Qy5/MdWGBqipbALgd2lrdWTJ5/gqDusxfnQBxOxT2Q==",
      "license": "BSD-3-Clause"
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/set-function-length": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2",
        "get-intrinsic": "^1.2.4",
        "gopd": "^1.0.1",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-function-name": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-data-property": "^1.1.4",
        "es-errors": "^1.3.0",
        "functions-have-names": "^1.2.3",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/set-proto": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/set-proto/-/set-proto-1.0.0.tgz",
      "integrity": "sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/sharp": {
      "version": "0.34.3",
      "resolved": "https://registry.npmjs.org/sharp/-/sharp-0.34.3.tgz",
      "integrity": "sha512-eX2IQ6nFohW4DbvHIOLRB3MHFpYqaqvXd3Tp5e/T/dSH83fxaNJQRvDMhASmkNTsNTVF2/OOopzRCt7xokgPfg==",
      "hasInstallScript": true,
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "color": "^4.2.3",
        "detect-libc": "^2.0.4",
        "semver": "^7.7.2"
      },
      "engines": {
        "node": "^18.17.0 || ^20.3.0 || >=21.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/libvips"
      },
      "optionalDependencies": {
        "@img/sharp-darwin-arm64": "0.34.3",
        "@img/sharp-darwin-x64": "0.34.3",
        "@img/sharp-libvips-darwin-arm64": "1.2.0",
        "@img/sharp-libvips-darwin-x64": "1.2.0",
        "@img/sharp-libvips-linux-arm": "1.2.0",
        "@img/sharp-libvips-linux-arm64": "1.2.0",
        "@img/sharp-libvips-linux-ppc64": "1.2.0",
        "@img/sharp-libvips-linux-s390x": "1.2.0",
        "@img/sharp-libvips-linux-x64": "1.2.0",
        "@img/sharp-libvips-linuxmusl-arm64": "1.2.0",
        "@img/sharp-libvips-linuxmusl-x64": "1.2.0",
        "@img/sharp-linux-arm": "0.34.3",
        "@img/sharp-linux-arm64": "0.34.3",
        "@img/sharp-linux-ppc64": "0.34.3",
        "@img/sharp-linux-s390x": "0.34.3",
        "@img/sharp-linux-x64": "0.34.3",
        "@img/sharp-linuxmusl-arm64": "0.34.3",
        "@img/sharp-linuxmusl-x64": "0.34.3",
        "@img/sharp-wasm32": "0.34.3",
        "@img/sharp-win32-arm64": "0.34.3",
        "@img/sharp-win32-ia32": "0.34.3",
        "@img/sharp-win32-x64": "0.34.3"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/side-channel": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3",
        "side-channel-list": "^1.0.0",
        "side-channel-map": "^1.0.1",
        "side-channel-weakmap": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-list": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-map": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/side-channel-weakmap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.5",
        "object-inspect": "^1.13.3",
        "side-channel-map": "^1.0.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/simple-swizzle": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
      "integrity": "sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==",
      "license": "MIT",
      "dependencies": {
        "is-arrayish": "^0.3.1"
      }
    },
    "node_modules/sonner": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/sonner/-/sonner-2.0.7.tgz",
      "integrity": "sha512-W6ZN4p58k8aDKA4XPcx2hpIQXBRAgyiWVkYhT7CvK6D3iAu7xjvVyhQHg2/iaKJZ1XVJ4r7XuwGL+WGEK37i9w==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^18.0.0 || ^19.0.0 || ^19.0.0-rc",
        "react-dom": "^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/stable-hash": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/stable-hash/-/stable-hash-0.0.5.tgz",
      "integrity": "sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/stack-trace": {
      "version": "0.0.10",
      "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",
      "integrity": "sha512-KGzahc7puUKkzyMt+IqAep+TVNbKP+k2Lmwhub39m1AsTSkaDutx56aDCo+HLDzf/D26BIHTJWNiTG1KAJiQCg==",
      "license": "MIT",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/stop-iteration-iterator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz",
      "integrity": "sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "internal-slot": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/stream-events": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/stream-events/-/stream-events-1.0.5.tgz",
      "integrity": "sha512-E1GUzBSgvct8Jsb3v2X15pjzN1tYebtbLaMg+eBOUOAxgbLoSbT2NS91ckc5lJD1KfLjId+jXJRgo0qnV5Nerg==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "stubs": "^3.0.0"
      }
    },
    "node_modules/stream-shift": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.3.tgz",
      "integrity": "sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/streamsearch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
      "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==",
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "license": "MIT",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "license": "MIT",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/string-width-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string.prototype.includes": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
      "integrity": "sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.3"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/string.prototype.matchall": {
      "version": "4.0.12",
      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.12.tgz",
      "integrity": "sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.3",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.6",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.0.0",
        "get-intrinsic": "^1.2.6",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "internal-slot": "^1.1.0",
        "regexp.prototype.flags": "^1.5.3",
        "set-function-name": "^2.0.2",
        "side-channel": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.repeat": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.5"
      }
    },
    "node_modules/string.prototype.trim": {
      "version": "1.2.10",
      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.10.tgz",
      "integrity": "sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-data-property": "^1.1.4",
        "define-properties": "^1.2.1",
        "es-abstract": "^1.23.5",
        "es-object-atoms": "^1.0.0",
        "has-property-descriptors": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimend": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.9.tgz",
      "integrity": "sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.2",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/string.prototype.trimstart": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "define-properties": "^1.2.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/strnum": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/strnum/-/strnum-1.1.2.tgz",
      "integrity": "sha512-vrN+B7DBIoTTZjnPNewwhx6cBA/H+IS7rfW68n7XxC1y7uoiGQBxaKzqucGUgavX15dJgiGztLJ8vxuEzwqBdA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/NaturalIntelligence"
        }
      ],
      "license": "MIT",
      "optional": true
    },
    "node_modules/stubs": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/stubs/-/stubs-3.0.0.tgz",
      "integrity": "sha512-PdHt7hHUJKxvTCgbKX9C1V/ftOcjJQgz8BZwNfV5c4B6dcGqlpelTbJ999jBGZ2jYiPAwcX5dP6oBwVlBlUbxw==",
      "license": "MIT",
      "optional": true
    },
    "node_modules/styled-jsx": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/styled-jsx/-/styled-jsx-5.1.6.tgz",
      "integrity": "sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==",
      "license": "MIT",
      "dependencies": {
        "client-only": "0.0.1"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "peerDependencies": {
        "react": ">= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0"
      },
      "peerDependenciesMeta": {
        "@babel/core": {
          "optional": true
        },
        "babel-plugin-macros": {
          "optional": true
        }
      }
    },
    "node_modules/sucrase": {
      "version": "3.35.0",
      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.2",
        "commander": "^4.0.0",
        "glob": "^10.3.10",
        "lines-and-columns": "^1.1.6",
        "mz": "^2.7.0",
        "pirates": "^4.0.1",
        "ts-interface-checker": "^0.1.9"
      },
      "bin": {
        "sucrase": "bin/sucrase",
        "sucrase-node": "bin/sucrase-node"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tailwind-merge": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/tailwind-merge/-/tailwind-merge-3.3.1.tgz",
      "integrity": "sha512-gBXpgUm/3rp1lMZZrM/w7D8GKqshif0zAymAhbCyIt8KMe+0v9DQ7cdYLR4FHH/cKpdTXb+A/tKKU3eolfsI+g==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/dcastil"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.4.17",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
      "license": "MIT",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "arg": "^5.0.2",
        "chokidar": "^3.6.0",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.3.2",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "jiti": "^1.21.6",
        "lilconfig": "^3.1.3",
        "micromatch": "^4.0.8",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.1.1",
        "postcss": "^8.4.47",
        "postcss-import": "^15.1.0",
        "postcss-js": "^4.0.1",
        "postcss-load-config": "^4.0.2",
        "postcss-nested": "^6.2.0",
        "postcss-selector-parser": "^6.1.2",
        "resolve": "^1.22.8",
        "sucrase": "^3.35.0"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/tailwindcss-animate": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/tailwindcss-animate/-/tailwindcss-animate-1.0.7.tgz",
      "integrity": "sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==",
      "license": "MIT",
      "peerDependencies": {
        "tailwindcss": ">=3.0.0 || insiders"
      }
    },
    "node_modules/tailwindcss/node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/tailwindcss/node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/tailwindcss/node_modules/jiti": {
      "version": "1.21.7",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
      "license": "MIT",
      "bin": {
        "jiti": "bin/jiti.js"
      }
    },
    "node_modules/tailwindcss/node_modules/postcss-load-config": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "lilconfig": "^3.0.0",
        "yaml": "^2.3.4"
      },
      "engines": {
        "node": ">= 14"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/tailwindcss/node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/teeny-request": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/teeny-request/-/teeny-request-9.0.0.tgz",
      "integrity": "sha512-resvxdc6Mgb7YEThw6G6bExlXKkv6+YbuzGg9xuXxSgxJF7Ozs+o8Y9+2R3sArdWdW8nOokoQb1yrpFB0pQK2g==",
      "license": "Apache-2.0",
      "optional": true,
      "dependencies": {
        "http-proxy-agent": "^5.0.0",
        "https-proxy-agent": "^5.0.0",
        "node-fetch": "^2.6.9",
        "stream-events": "^1.0.5",
        "uuid": "^9.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/teeny-request/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/teeny-request/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/teeny-request/node_modules/uuid": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-9.0.1.tgz",
      "integrity": "sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "optional": true,
      "bin": {
        "uuid": "dist/bin/uuid"
      }
    },
    "node_modules/text-hex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/text-hex/-/text-hex-1.0.0.tgz",
      "integrity": "sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==",
      "license": "MIT"
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "license": "MIT",
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/tiny-inflate": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tiny-inflate/-/tiny-inflate-1.0.3.tgz",
      "integrity": "sha512-pkY1fj1cKHb2seWDy0B16HeWyczlJA9/WW3u3c4z/NiWDsO3DOU5D7nhTLE9CF0yXv/QZFY7sEJmj24dK+Rrqw==",
      "license": "MIT"
    },
    "node_modules/tiny-invariant": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
      "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==",
      "license": "MIT"
    },
    "node_modules/tinyglobby": {
      "version": "0.2.14",
      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fdir": "^6.4.4",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/SuperchupuDev"
      }
    },
    "node_modules/tinyglobby/node_modules/fdir": {
      "version": "6.4.6",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/tinyglobby/node_modules/picomatch": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
      "license": "MIT"
    },
    "node_modules/triple-beam": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/triple-beam/-/triple-beam-1.4.1.tgz",
      "integrity": "sha512-aZbgViZrg1QNcG+LULa7nhZpJTZSLm/mXnHXnbAbjmN5aSa0y7V+wvv6+4WaBtpISJzThKy+PIPxc1Nq1EJ9mg==",
      "license": "MIT",
      "engines": {
        "node": ">= 14.0.0"
      }
    },
    "node_modules/ts-api-utils": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
      "integrity": "sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18.12"
      },
      "peerDependencies": {
        "typescript": ">=4.8.4"
      }
    },
    "node_modules/ts-interface-checker": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
      "license": "Apache-2.0"
    },
    "node_modules/tsconfig-paths": {
      "version": "3.15.0",
      "resolved": "https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz",
      "integrity": "sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/json5": "^0.0.29",
        "json5": "^1.0.2",
        "minimist": "^1.2.6",
        "strip-bom": "^3.0.0"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/tsx": {
      "version": "4.20.3",
      "resolved": "https://registry.npmjs.org/tsx/-/tsx-4.20.3.tgz",
      "integrity": "sha512-qjbnuR9Tr+FJOMBqJCW5ehvIo/buZq7vH7qD7JziU98h6l3qGy0a/yPFjwO+y0/T7GFpNgNAvEcPPVfyT8rrPQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "~0.25.0",
        "get-tsconfig": "^4.7.5"
      },
      "bin": {
        "tsx": "dist/cli.mjs"
      },
      "engines": {
        "node": ">=18.0.0"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      }
    },
    "node_modules/twilio": {
      "version": "5.8.0",
      "resolved": "https://registry.npmjs.org/twilio/-/twilio-5.8.0.tgz",
      "integrity": "sha512-aJLBvI7ODLmFHI7ZYLBiMZKIdHuF9PrPeRM/GBMDg/AAzGXs4V8gEnNPHyTVThK0/8J48YHSqXMlQ+WJR5nxoQ==",
      "license": "MIT",
      "dependencies": {
        "axios": "^1.11.0",
        "dayjs": "^1.11.9",
        "https-proxy-agent": "^5.0.0",
        "jsonwebtoken": "^9.0.2",
        "qs": "^6.9.4",
        "scmp": "^2.1.0",
        "xmlbuilder": "^13.0.2"
      },
      "engines": {
        "node": ">=14.0"
      }
    },
    "node_modules/twilio/node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "license": "MIT",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/twilio/node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "license": "MIT",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/twilio/node_modules/xmlbuilder": {
      "version": "13.0.2",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-13.0.2.tgz",
      "integrity": "sha512-Eux0i2QdDYKbdbA6AM6xE4m6ZTZr4G4xF9kahI2ukSEMCzwce2eX9WlTI5J3s+NU7hpasFsr8hWIONae7LluAQ==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0"
      }
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "license": "MIT",
      "dependencies": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/typed-array-buffer": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.3.tgz",
      "integrity": "sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "es-errors": "^1.3.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/typed-array-byte-length": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.3.tgz",
      "integrity": "sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.14"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-byte-offset": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.4.tgz",
      "integrity": "sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "for-each": "^0.3.3",
        "gopd": "^1.2.0",
        "has-proto": "^1.2.0",
        "is-typed-array": "^1.1.15",
        "reflect.getprototypeof": "^1.0.9"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typed-array-length": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.7.tgz",
      "integrity": "sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bind": "^1.0.7",
        "for-each": "^0.3.3",
        "gopd": "^1.0.1",
        "is-typed-array": "^1.1.13",
        "possible-typed-array-names": "^1.0.0",
        "reflect.getprototypeof": "^1.0.6"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==",
      "license": "MIT"
    },
    "node_modules/typescript": {
      "version": "5.9.2",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
      "integrity": "sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==",
      "dev": true,
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/unbox-primitive": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.1.0.tgz",
      "integrity": "sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.3",
        "has-bigints": "^1.0.2",
        "has-symbols": "^1.1.0",
        "which-boxed-primitive": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/undici-types": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
      "license": "MIT"
    },
    "node_modules/unicode-properties": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/unicode-properties/-/unicode-properties-1.4.1.tgz",
      "integrity": "sha512-CLjCCLQ6UuMxWnbIylkisbRj31qxHPAurvena/0iwSVbQ2G1VY5/HjV0IRabOEbDHlzZlRdCrD4NhB0JtU40Pg==",
      "license": "MIT",
      "dependencies": {
        "base64-js": "^1.3.0",
        "unicode-trie": "^2.0.0"
      }
    },
    "node_modules/unicode-trie": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-trie/-/unicode-trie-2.0.0.tgz",
      "integrity": "sha512-x7bc76x0bm4prf1VLg79uhAzKw8DVboClSN5VxJuQ+LKDOVEW9CdH+VY7SP+vX7xCYQqzzgQpFqz15zeLvAtZQ==",
      "license": "MIT",
      "dependencies": {
        "pako": "^0.2.5",
        "tiny-inflate": "^1.0.0"
      }
    },
    "node_modules/unrs-resolver": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/unrs-resolver/-/unrs-resolver-1.11.1.tgz",
      "integrity": "sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "napi-postinstall": "^0.3.0"
      },
      "funding": {
        "url": "https://opencollective.com/unrs-resolver"
      },
      "optionalDependencies": {
        "@unrs/resolver-binding-android-arm-eabi": "1.11.1",
        "@unrs/resolver-binding-android-arm64": "1.11.1",
        "@unrs/resolver-binding-darwin-arm64": "1.11.1",
        "@unrs/resolver-binding-darwin-x64": "1.11.1",
        "@unrs/resolver-binding-freebsd-x64": "1.11.1",
        "@unrs/resolver-binding-linux-arm-gnueabihf": "1.11.1",
        "@unrs/resolver-binding-linux-arm-musleabihf": "1.11.1",
        "@unrs/resolver-binding-linux-arm64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-arm64-musl": "1.11.1",
        "@unrs/resolver-binding-linux-ppc64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-riscv64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-riscv64-musl": "1.11.1",
        "@unrs/resolver-binding-linux-s390x-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-x64-gnu": "1.11.1",
        "@unrs/resolver-binding-linux-x64-musl": "1.11.1",
        "@unrs/resolver-binding-wasm32-wasi": "1.11.1",
        "@unrs/resolver-binding-win32-arm64-msvc": "1.11.1",
        "@unrs/resolver-binding-win32-ia32-msvc": "1.11.1",
        "@unrs/resolver-binding-win32-x64-msvc": "1.11.1"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/uri-parser": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/uri-parser/-/uri-parser-1.0.1.tgz",
      "integrity": "sha512-TRjjM2M83RD9jIIYttNj7ghUQTKSov+WXZbQIMM8DxY1R1QdJEGWNKKMYCxyeOw1p9re2nQ85usM6dPTVtox1g==",
      "engines": {
        "node": "*"
      }
    },
    "node_modules/use-callback-ref": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/use-callback-ref/-/use-callback-ref-1.3.3.tgz",
      "integrity": "sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==",
      "license": "MIT",
      "dependencies": {
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/use-sidecar": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/use-sidecar/-/use-sidecar-1.1.3.tgz",
      "integrity": "sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==",
      "license": "MIT",
      "dependencies": {
        "detect-node-es": "^1.1.0",
        "tslib": "^2.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "@types/react": "*",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        }
      }
    },
    "node_modules/use-sync-external-store": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
      "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/utf8": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/utf8/-/utf8-2.1.2.tgz",
      "integrity": "sha512-QXo+O/QkLP/x1nyi54uQiG0XrODxdysuQvE5dtVqv7F5K2Qb6FsN+qbr6KhF5wQ20tfcV3VQp0/2x1e1MRSPWg==",
      "license": "MIT"
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "license": "MIT"
    },
    "node_modules/uuid": {
      "version": "11.1.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-11.1.0.tgz",
      "integrity": "sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==",
      "funding": [
        "https://github.com/sponsors/broofa",
        "https://github.com/sponsors/ctavan"
      ],
      "license": "MIT",
      "bin": {
        "uuid": "dist/esm/bin/uuid"
      }
    },
    "node_modules/victory-vendor": {
      "version": "37.3.6",
      "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-37.3.6.tgz",
      "integrity": "sha512-SbPDPdDBYp+5MJHhBCAyI7wKM3d5ivekigc2Dk2s7pgbZ9wIgIBYGVw4zGHBml/qTFbexrofXW6Gu4noGxrOwQ==",
      "license": "MIT AND ISC",
      "dependencies": {
        "@types/d3-array": "^3.0.3",
        "@types/d3-ease": "^3.0.0",
        "@types/d3-interpolate": "^3.0.1",
        "@types/d3-scale": "^4.0.2",
        "@types/d3-shape": "^3.1.0",
        "@types/d3-time": "^3.0.0",
        "@types/d3-timer": "^3.0.0",
        "d3-array": "^3.1.6",
        "d3-ease": "^3.0.1",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-shape": "^3.1.0",
        "d3-time": "^3.0.0",
        "d3-timer": "^3.0.1"
      }
    },
    "node_modules/victory-vendor/node_modules/@types/d3-shape": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz",
      "integrity": "sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-path": "*"
      }
    },
    "node_modules/web-vitals": {
      "version": "4.2.4",
      "resolved": "https://registry.npmjs.org/web-vitals/-/web-vitals-4.2.4.tgz",
      "integrity": "sha512-r4DIlprAGwJ7YM11VZp4R884m0Vmgr6EAKe3P+kO0PPj3Unqyvv59rczf6UiGcb9Z8QxZVcqKNwv/g0WNdWwsw==",
      "license": "Apache-2.0"
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
      "license": "BSD-2-Clause"
    },
    "node_modules/websocket-driver": {
      "version": "0.7.4",
      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.4.tgz",
      "integrity": "sha512-b17KeDIQVjvb0ssuSDF2cYXSg2iztliJ4B9WdsuB6J952qCPKmnVq4DyW5motImXHDC1cBT/1UezrJVsKw5zjg==",
      "license": "Apache-2.0",
      "dependencies": {
        "http-parser-js": ">=0.5.1",
        "safe-buffer": ">=5.1.0",
        "websocket-extensions": ">=0.1.1"
      },
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/websocket-extensions": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.4.tgz",
      "integrity": "sha512-OqedPIGOfsDlo31UNwYbCFMSaO9m9G/0faIHj5/dZFDMFqPTcx6UwqyOy3COEaEOg/9VsGIpdqn62W5KhoKSpg==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=0.8.0"
      }
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "license": "MIT",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/which-boxed-primitive": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz",
      "integrity": "sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-bigint": "^1.1.0",
        "is-boolean-object": "^1.2.1",
        "is-number-object": "^1.1.1",
        "is-string": "^1.1.1",
        "is-symbol": "^1.1.1"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-builtin-type": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.2.1.tgz",
      "integrity": "sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "call-bound": "^1.0.2",
        "function.prototype.name": "^1.1.6",
        "has-tostringtag": "^1.0.2",
        "is-async-function": "^2.0.0",
        "is-date-object": "^1.1.0",
        "is-finalizationregistry": "^1.1.0",
        "is-generator-function": "^1.0.10",
        "is-regex": "^1.2.1",
        "is-weakref": "^1.0.2",
        "isarray": "^2.0.5",
        "which-boxed-primitive": "^1.1.0",
        "which-collection": "^1.0.2",
        "which-typed-array": "^1.1.16"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-collection": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-map": "^2.0.3",
        "is-set": "^2.0.3",
        "is-weakmap": "^2.0.2",
        "is-weakset": "^2.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/which-typed-array": {
      "version": "1.1.19",
      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz",
      "integrity": "sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "available-typed-arrays": "^1.0.7",
        "call-bind": "^1.0.8",
        "call-bound": "^1.0.4",
        "for-each": "^0.3.5",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-tostringtag": "^1.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/winston": {
      "version": "3.17.0",
      "resolved": "https://registry.npmjs.org/winston/-/winston-3.17.0.tgz",
      "integrity": "sha512-DLiFIXYC5fMPxaRg832S6F5mJYvePtmO5G9v9IgUFPhXm9/GkXarH/TUrBAVzhTCzAj9anE/+GjrgXp/54nOgw==",
      "license": "MIT",
      "dependencies": {
        "@colors/colors": "^1.6.0",
        "@dabh/diagnostics": "^2.0.2",
        "async": "^3.2.3",
        "is-stream": "^2.0.0",
        "logform": "^2.7.0",
        "one-time": "^1.0.0",
        "readable-stream": "^3.4.0",
        "safe-stable-stringify": "^2.3.1",
        "stack-trace": "0.0.x",
        "triple-beam": "^1.3.0",
        "winston-transport": "^4.9.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      }
    },
    "node_modules/winston-transport": {
      "version": "4.9.0",
      "resolved": "https://registry.npmjs.org/winston-transport/-/winston-transport-4.9.0.tgz",
      "integrity": "sha512-8drMJ4rkgaPo1Me4zD/3WLfI/zPdA9o2IipKODunnGDcuqbHwjsbB79ylv04LCGGzU0xQ6vTznOMpQGaLhhm6A==",
      "license": "MIT",
      "dependencies": {
        "logform": "^2.7.0",
        "readable-stream": "^3.6.2",
        "triple-beam": "^1.3.0"
      },
      "engines": {
        "node": ">= 12.0.0"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi/node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "license": "ISC"
    },
    "node_modules/ws": {
      "version": "8.18.3",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.3.tgz",
      "integrity": "sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==",
      "license": "MIT",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xml2js": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.5.0.tgz",
      "integrity": "sha512-drPFnkQJik/O+uPKpqSgr22mpuFHqKdbS835iAQrUC73L2F5WkboIRd63ai/2Yg6I1jzifPFKH2NTK+cfglkIA==",
      "license": "MIT",
      "dependencies": {
        "sax": ">=0.6.0",
        "xmlbuilder": "~11.0.0"
      },
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/xml2js/node_modules/xmlbuilder": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
      "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/xmlbuilder": {
      "version": "9.0.7",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-9.0.7.tgz",
      "integrity": "sha512-7YXTQc3P2l9+0rjaUbLwMKRhtmwg1M1eDf6nag7urC7pIPYLD9W/jmzQ4ptRSUbodw5S0jfoGTflLemQibSpeQ==",
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/y18n": {
      "version": "5.0.8",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
      "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
      "license": "ISC",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "license": "ISC"
    },
    "node_modules/yaml": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.1.tgz",
      "integrity": "sha512-lcYcMxX2PO9XMGvAJkJ3OsNMw+/7FKes7/hgerGUYWIoWu5j/+YQqcZr5JnPZWzOsEBgMbSbiSTn/dv/69Mkpw==",
      "license": "ISC",
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14.6"
      }
    },
    "node_modules/yargs": {
      "version": "17.7.2",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz",
      "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
      "license": "MIT",
      "dependencies": {
        "cliui": "^8.0.1",
        "escalade": "^3.1.1",
        "get-caller-file": "^2.0.5",
        "require-directory": "^2.1.1",
        "string-width": "^4.2.3",
        "y18n": "^5.0.5",
        "yargs-parser": "^21.1.1"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs-parser": {
      "version": "21.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz",
      "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/yargs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "license": "MIT"
    },
    "node_modules/yargs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yargs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "devOptional": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/zod": {
      "version": "3.25.76",
      "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.76.tgz",
      "integrity": "sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/colinhacks"
      }
    }
  }
}
====[ END FILE: package-lock.json ]=================================================================

====[ START FILE: package.json (2.2 KB) ]===========================================================
{
  "name": "theqah",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@fontsource/cairo": "^5.2.6",
    "@fontsource/tajawal": "^5.2.6",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@types/multer": "^2.0.0",
    "@uploadcare/react-uploader": "^1.10.2",
    "axios": "^1.11.0",
    "bad-words": "^4.0.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cookie": "^1.0.2",
    "csv-parse": "^6.1.0",
    "date-fns": "^4.1.0",
    "firebase": "^12.0.0",
    "firebase-admin": "^13.4.0",
    "formidable": "^3.5.4",
    "framer-motion": "^12.23.12",
    "js-cookie": "^3.0.5",
    "lottie-react": "^2.4.1",
    "lucide-react": "^0.535.0",
    "multer": "^2.0.2",
    "next": "15.4.4",
    "next-connect": "^1.0.0",
    "nodemailer": "^7.0.5",
    "openai": "^5.10.2",
    "pdfkit": "^0.17.1",
    "plivo": "^4.75.1",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "react-icons": "^5.5.0",
    "react-intersection-observer": "^9.16.0",
    "recharts": "^3.1.0",
    "sonner": "^2.0.6",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "twilio": "^5.8.0",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@types/bad-words": "^3.0.3",
    "@types/formidable": "^3.4.5",
    "@types/js-cookie": "^3.0.6",
    "@types/node": "^20",
    "@types/node-fetch": "^2.6.13",
    "@types/nodemailer": "^6.4.17",
    "@types/pdfkit": "^0.17.2",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/recharts": "^1.8.29",
    "@types/winston": "^2.4.4",
    "autoprefixer": "^10.4.15",
    "dotenv": "^17.2.1",
    "eslint": "^9",
    "eslint-config-next": "15.4.4",
    "postcss": "^8.4.31",
    "tailwindcss": "^3.4.1",
    "tsx": "^4.20.3",
    "typescript": "^5"
  }
}
====[ END FILE: package.json ]======================================================================

====[ START FILE: postcss.config.js (93 B) ]========================================================
// postcss.config.js
module.exports = {
  plugins: { tailwindcss: {}, autoprefixer: {} },
};
====[ END FILE: postcss.config.js ]=================================================================

====[ SKIP (binary): public/android-chrome-192x192.png ]============================================
Size: 27.5 KB

====[ SKIP (binary): public/android-chrome-512x512.png ]============================================
Size: 151.3 KB

====[ SKIP (binary): public/apple-touch-icon.png ]==================================================
Size: 24.8 KB

====[ SKIP (binary): public/favicon-16x16.png ]=====================================================
Size: 637 B

====[ SKIP (binary): public/favicon-32x32.png ]=====================================================
Size: 1.5 KB

====[ SKIP (binary): public/favicon.ico ]===========================================================
Size: 15.0 KB

====[ SKIP (binary): public/file.svg ]==============================================================
Size: 391 B

====[ SKIP (binary): public/globe.svg ]=============================================================
Size: 1.0 KB

====[ SKIP (binary): public/logo.png ]==============================================================
Size: 58.5 KB

====[ SKIP (binary): public/next.svg ]==============================================================
Size: 1.3 KB

====[ START FILE: public/site.webmanifest (263 B) ]=================================================
{"name":"","short_name":"","icons":[{"src":"/android-chrome-192x192.png","sizes":"192x192","type":"image/png"},{"src":"/android-chrome-512x512.png","sizes":"512x512","type":"image/png"}],"theme_color":"#ffffff","background_color":"#ffffff","display":"standalone"}
====[ END FILE: public/site.webmanifest ]===========================================================

====[ START FILE: public/test-widget.html (560 B) ]=================================================
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8" />
  <title>اختبار ويدجت ثقة</title>
  <style>
    body { font-family: sans-serif; margin: 2rem; }
    #theqah-reviews { border: 1px solid #ccc; padding: 1rem; }
  </style>
</head>
<body>

  <!-- هنا الودجت -->
  <div id="theqah-reviews"
       data-store="demo-store-uid"
       data-product="demo-product-id">
  </div>

  <!-- استدعاء سكربت الودجت -->
  <script src="./widgets/theqah-widget.js"></script>
</body>
</html>
====[ END FILE: public/test-widget.html ]===========================================================

====[ SKIP (binary): public/vercel.svg ]============================================================
Size: 128 B

====[ SKIP (binary): public/widgets/logo.png ]======================================================
Size: 58.5 KB

====[ START FILE: public/widgets/theqah-widget.js (26.0 KB) ]=======================================

(() => {
  const SCRIPT_VERSION = "1.3.12";

  // ——— تحديد السكربت والمصدر ———
  const CURRENT_SCRIPT = document.currentScript;
  const SCRIPT_ORIGIN = (() => {
    try { return new URL(CURRENT_SCRIPT?.src || location.href).origin; }
    catch { return location.origin; }
  })();

  const API_BASE = `${SCRIPT_ORIGIN}/api/public/reviews`;
  const LOGO_URL = `${SCRIPT_ORIGIN}/widgets/logo.png?v=3`; // تفادي الكاش

  // ——— Helpers ———
  const h = (tag, attrs = {}, children = []) => {
    const el = document.createElement(tag);
    for (const [k, v] of Object.entries(attrs || {})) {
      if (k === "class") el.className = v;
      else if (k === "html") el.innerHTML = v;
      else el.setAttribute(k, v);
    }
    (Array.isArray(children) ? children : [children])
      .filter(Boolean)
      .forEach((c) => (typeof c === "string" ? el.appendChild(document.createTextNode(c)) : el.appendChild(c)));
    return el;
  };

  const Stars = (n = 0) => {
    const wrap = h("div", { class: "stars", role: "img", "aria-label": `${n} stars` });
    for (let i = 1; i <= 5; i++) wrap.appendChild(h("span", { class: "star" + (i <= n ? " filled" : "") }, "★"));
    return wrap;
  };

  // ——— Cache/Single-flight لنتيجة resolveStore ———
  const G = (window.__THEQAH__ = window.__THEQAH__ || {});
  const TTL_MS = 10 * 60 * 1000; // 10 دقائق

  function cacheKey(host){ return `theqah:storeUid:${host}`; }
  function getCached(host){
    try {
      const o = JSON.parse(localStorage.getItem(cacheKey(host)) || '{}');
      if (o.uid && (Date.now() - (o.t || 0) < TTL_MS)) return o.uid;
    } catch {}
    return null;
  }
  function setCached(host, uid){
    try { localStorage.setItem(cacheKey(host), JSON.stringify({ uid, t: Date.now() })); } catch {}
  }

  async function resolveStore() {
    const host = location.host.replace(/^www\./, '').toLowerCase();

    // ذاكرة + localStorage
    if (G.storeUid) return G.storeUid;
    const cached = getCached(host);
    if (cached) { G.storeUid = cached; return cached; }

    // single-flight
    if (G.resolvePromise) return G.resolvePromise;

    const url = `${API_BASE}/resolve?host=${encodeURIComponent(host)}&href=${encodeURIComponent(location.href)}&v=${encodeURIComponent(SCRIPT_VERSION)}`;
    G.resolvePromise = fetch(url, { cache: 'no-store' }) // طلب بسيط بدون هيدر مخصّص لتفادي OPTIONS
      .then(r => r.ok ? r.json() : null)
      .then(j => {
        const uid = j?.storeUid || null;
        if (uid) { G.storeUid = uid; setCached(host, uid); }
        return uid;
      })
      .finally(() => { G.resolvePromise = null; });

    return G.resolvePromise;
  }

  // ——— اكتشاف Product ID (سلة) ———
  function detectProductId() {
    const host = document.querySelector("#theqah-reviews, .theqah-reviews");
    const hostPid = host?.getAttribute("data-product") || host?.dataset?.product;
    if (hostPid && /\S/.test(hostPid) && hostPid !== "auto") return String(hostPid).trim();

    // JSON-LD
    try {
      const scripts = Array.from(document.querySelectorAll('script[type="application/ld+json"]'));
      for (const s of scripts) {
        try {
          const json = JSON.parse(s.textContent || "null");
          const arr = Array.isArray(json) ? json : [json];
          for (const node of arr) {
            if (!node) continue;
            if (node["@type"] === "Product" || (Array.isArray(node["@type"]) && node["@type"].includes("Product"))) {
              const pid = node.productID || node.productId || node.sku || null;
              if (pid) return String(pid);
              if (node.url) {
                const m = String(node.url).match(/(\d{5,})/);
                if (m) return m[1];
              }
            }
          }
        } catch {}
      }
    } catch {}

    // DOM hints
    const domHints = [
      "[data-product-id]","[data-productid]",
      '[itemtype*="Product"] [itemprop="sku"]','[itemtype*="Product"] [itemprop="productID"]',
      ".product-id","#product-id"
    ];
    for (const sel of domHints) {
      const el = document.querySelector(sel);
      const v = el?.getAttribute?.("data-product-id")
        || el?.getAttribute?.("data-productid")
        || el?.textContent
        || el?.getAttribute?.("content");
      if (v && /\S/.test(v)) return String(v).trim();
    }

    // URL Heuristics لسلة
    const url = location.pathname;
    const matchers = [
      /\/p(\d{8,})(?:\/|$)/,  // /p1927638714
      /-(\d{8,})$/,           // ...-1927638714
      /\/products\/(\d{8,})/  // /products/1927638714
    ];
    for (const rgx of matchers) {
      const m = url.match(rgx);
      if (m) return m[1];
    }
    return null;
  }

  // ——— إدراج الحاوية أسفل سكشن المنتج ———
  function findProductAnchor() {
    const fromData = document.querySelector("[data-product-id], [data-productid]");
    if (fromData) {
      const sec = fromData.closest("section, .product, .product-page, .product__details, .product-single, .product-show");
      if (sec) return sec;
    }
    const candidates = [
      ".product__details",".product-show",".product-single",".product-details",
      ".product-info",".product-main","#product-show","#product","main .container"
    ];
    for (const sel of candidates) {
      const el = document.querySelector(sel);
      if (el) return el;
    }
    return document.body;
  }

  function ensureHostUnderProduct() {
    let host = document.querySelector("#theqah-reviews, .theqah-reviews");
    if (host) return host;

    const anchor = findProductAnchor();
    host = document.createElement("div");
    host.className = "theqah-reviews";
    host.style.marginTop = "24px";
    if (anchor && anchor.parentNode) {
      anchor.parentNode.insertBefore(host, anchor.nextSibling);
    } else {
      document.body.appendChild(host);
    }
    return host;
  }

  // ——— تركيب وrender ———
  async function mountOne(hostEl, store, productId, limit, lang, theme) {
    // حراسة ضد التكرار
    if (hostEl.getAttribute("data-state") === "done") return;
    if (hostEl.getAttribute("data-state") === "mounting") return;
    hostEl.setAttribute("data-state", "mounting");

    const root = hostEl.attachShadow ? hostEl.attachShadow({ mode: "open" }) : hostEl;
    const style = h("style", {
      html: `
        :host { all: initial; }
        * { box-sizing: border-box; }
        
        .wrap { 
          font-family: system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Noto Sans,Liberation Sans,Arial,sans-serif; 
          direction: ${lang === "ar" ? "rtl" : "ltr"}; 
          line-height: 1.5;
          color: ${theme === "dark" ? "#f1f5f9" : "#1e293b"};
        }
        
        .section { 
          background: ${theme === "dark" 
            ? "linear-gradient(135deg, #0f1629 0%, #1e293b 100%)" 
            : "linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)"};
          color: ${theme === "dark" ? "#f1f5f9" : "#1e293b"};
          border: 1px solid ${theme === "dark" ? "rgba(71, 85, 105, 0.3)" : "rgba(226, 232, 240, 0.8)"};
          border-radius: 20px; 
          padding: 32px; 
          margin: 24px 0; 
          box-shadow: ${theme === "dark" 
            ? "0 25px 50px -12px rgba(0, 0, 0, 0.5), 0 0 0 1px rgba(255, 255, 255, 0.05)" 
            : "0 25px 50px -12px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.05)"};
          backdrop-filter: blur(12px);
          position: relative;
          overflow: hidden;
        }
        
        .section::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          height: 1px;
          background: linear-gradient(90deg, 
            transparent 0%, 
            ${theme === "dark" ? "rgba(148, 163, 184, 0.3)" : "rgba(59, 130, 246, 0.3)"} 50%, 
            transparent 100%);
        }
        
        .header { 
          display: flex; 
          align-items: center; 
          gap: 16px; 
          margin-bottom: 24px;
          padding-bottom: 20px;
          border-bottom: 1px solid ${theme === "dark" ? "rgba(71, 85, 105, 0.3)" : "rgba(226, 232, 240, 0.5)"};
        }
        
        /* ——— لوجو الهيدر: ثابت (لا تغيير إضافي) ——— */
        .logo { 
          width: 96px; 
          height: 96px; 
          border-radius: 10px;
          padding: 10px;
          background: ${theme === "dark" ? "rgba(59, 130, 246, 0.12)" : "rgba(59, 130, 246, 0.08)"};
          transition: all 0.25s ease;
        }
        .logo:hover { transform: scale(1.03); }
        
        .title { 
          font-weight: 700; 
          font-size: 22px; 
          margin: 0;
          background: ${theme === "dark" 
            ? "linear-gradient(135deg, #f1f5f9 0%, #cbd5e1 100%)" 
            : "linear-gradient(135deg, #1e293b 0%, #475569 100%)"};
          -webkit-background-clip: text;
          background-clip: text;
          -webkit-text-fill-color: transparent;
          letter-spacing: -0.025em;
        }
        
        .meta { 
          font-size: 14px; 
          opacity: 0.75; 
          margin: 0 0 24px 0;
          font-weight: 500;
          color: ${theme === "dark" ? "#94a3b8" : "#64748b"};
        }

        /* ——— النجوم (تكبير + 3D) ——— */
        .stars { 
          color: #f59e0b; 
          letter-spacing: 1px; 
          font-size: 40px;            /* ← تكبير النجوم */
          filter: drop-shadow(0 1px 2px rgba(245, 158, 11, 0.2));
          display: inline-flex;
          gap: 6px;
        }
        .star { 
          opacity: 0.5; 
          transition: transform 0.2s ease, text-shadow 0.2s ease, opacity .2s ease;
          color: #fcd34d; 
          text-shadow:
            0 2px 4px rgba(0,0,0,0.5),              /* ظل خارجي */
            0 -1px 2px rgba(255,255,255,0.6);       /* لمعة أعلى */
          transform: perspective(220px) translateZ(0);
        } 
        .star.filled { 
          opacity: 1;
          color: #fbbf24;
          text-shadow:
            0 3px 6px rgba(0,0,0,0.6),
            0 -1px 2px rgba(255,255,255,0.85),
            0 0 8px rgba(251,191,36,0.7);           /* لمعة ذهبية إضافية */
        }
        .star.filled:hover {
          transform: perspective(220px) translateZ(10px) scale(1.18);  /* يطلع لبرا */
          text-shadow:
            0 6px 12px rgba(0,0,0,0.7),
            0 -2px 3px rgba(255,255,255,0.9),
            0 0 14px rgba(251,191,36,0.95);
        }
        
        /* ——— البادج الكبير بجوار التقييم ——— */
        .badge { 
          display: inline-flex; 
          align-items: center; 
          gap: 14px; 
          background: ${theme === "dark" 
            ? "linear-gradient(135deg, #059669 0%, #10b981 100%)" 
            : "linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%)"};
          color: ${theme === "dark" ? "#ecfdf5" : "#065f46"};
          border: 2px solid ${theme === "dark" ? "rgba(16, 185, 129, 0.35)" : "#86efac"};
          font-size: 22px;        /* ← خط كبير */
          font-weight: 900;       /* Bold قوي */
          padding: 14px 22px;     /* بادج كبير */
          border-radius: 34px;
          box-shadow: ${theme === "dark" 
            ? "0 6px 12px -3px rgba(0,0,0,.35)" 
            : "0 6px 12px -3px rgba(0,0,0,.08)"};
          white-space: nowrap;
        }
        .badge-logo { 
          width: 70px !important;   /* ← اللوجو 70px */
          height: 70px !important; 
          display: block; 
          object-fit: contain;
          border-radius: 10px;
          background: rgba(255,255,255,0.25);
          padding: 4px;
          box-sizing: content-box;
        }
        .badge .label { letter-spacing: .2px; font-size: 22px; font-weight: 900; }
        
        .text { 
          white-space: pre-wrap; 
          line-height: 1.7; 
          font-size: 15px; 
          margin: 16px 0 0 0;
          color: ${theme === "dark" ? "#e2e8f0" : "#374151"};
          letter-spacing: -0.01em;
        }
        
        .empty { 
          padding: 32px; 
          border: 2px dashed ${theme === "dark" ? "#475569" : "#cbd5e1"}; 
          border-radius: 16px; 
          font-size: 15px; 
          opacity: 0.8;
          text-align: center;
          background: ${theme === "dark" ? "rgba(15, 23, 42, 0.3)" : "rgba(248, 250, 252, 0.5)"};
        }
        
        .row { 
          display: flex; 
          align-items: center; 
          gap: 12px; 
          justify-content: space-between;
          flex-wrap: wrap;
        }
        
        .left { 
          display: flex; 
          align-items: center; 
          gap: 12px;
          flex-wrap: wrap;
        }
        
        .item { 
          background: ${theme === "dark" 
            ? "linear-gradient(135deg, rgba(15, 23, 42, 0.8) 0%, rgba(30, 41, 59, 0.4) 100%)" 
            : "linear-gradient(135deg, #ffffff 0%, rgba(248, 250, 252, 0.8) 100%)"};
          color: inherit; 
          border: 1px solid ${theme === "dark" ? "rgba(71, 85, 105, 0.3)" : "rgba(226, 232, 240, 0.6)"};
          border-radius: 18px; 
          padding: 24px; 
          margin: 16px 0;
          box-shadow: ${theme === "dark" 
            ? "0 10px 25px -5px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.05)" 
            : "0 10px 25px -5px rgba(0, 0, 0, 0.04), 0 0 0 1px rgba(255, 255, 255, 0.1)"}; 
          backdrop-filter: blur(8px);
          transition: all 0.3s ease;
          position: relative;
          overflow: hidden;
          animation: slideInUp 0.5s ease-out forwards;
          opacity: 0;
          transform: translateY(20px);
        }
        
        .item::before {
          content: '';
          position: absolute;
          top: 0;
          left: -100%;
          width: 100%;
          height: 100%;
          background: linear-gradient(90deg, 
            transparent, 
            ${theme === "dark" ? "rgba(255, 255, 255, 0.03)" : "rgba(59, 130, 246, 0.03)"} , 
            transparent);
          transition: left 0.6s;
        }
        
        .item:hover::before { left: 100%; }
        
        .item:hover {
          transform: translateY(-2px);
          border-color: ${theme === "dark" ? "rgba(59, 130, 246, 0.3)" : "rgba(59, 130, 246, 0.2)"}; 
          box-shadow: ${theme === "dark" 
            ? "0 20px 40px -10px rgba(0, 0, 0, 0.4), 0 0 0 1px rgba(59, 130, 246, 0.1)" 
            : "0 20px 40px -10px rgba(0, 0, 0, 0.08), 0 0 0 1px rgba(59, 130, 246, 0.1)"}; 
        }
        
        .filter { 
          display: flex; 
          align-items: center; 
          gap: 12px; 
          margin: 24px 0 0; 
          font-size: 14px; 
          font-weight: 500;
          flex-wrap: wrap;
        }
        
        .filter span { color: ${theme === "dark" ? "#94a3b8" : "#64748b"}; }
        
        .filter button { 
          padding: 10px 20px; 
          border-radius: 12px; 
          border: 1px solid ${theme === "dark" ? "rgba(71, 85, 105, 0.4)" : "rgba(203, 213, 225, 0.8)"}; 
          background: ${theme === "dark" ? "rgba(15, 23, 42, 0.6)" : "rgba(255, 255, 255, 0.8)"}; 
          color: inherit; 
          cursor: pointer;
          font-weight: 500;
          font-size: 13px;
          transition: all 0.2s ease;
          backdrop-filter: blur(8px);
        }
        
        .filter button:hover {
          transform: translateY(-1px);
          border-color: ${theme === "dark" ? "rgba(59, 130, 246, 0.4)" : "rgba(59, 130, 246, 0.3)"}; 
          background: ${theme === "dark" ? "rgba(30, 41, 59, 0.8)" : "rgba(248, 250, 252, 0.9)"}; 
          box-shadow: ${theme === "dark" 
            ? "0 4px 12px -2px rgba(0, 0, 0, 0.3)" 
            : "0 4px 12px -2px rgba(0, 0, 0, 0.05)"}; 
        }
        
        .filter button.active { 
          background: ${theme === "dark" 
            ? "linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)" 
            : "linear-gradient(135deg, #3b82f6 0%, #2563eb 100%)"}; 
          color: white;
          border-color: ${theme === "dark" ? "#1d4ed8" : "#2563eb"}; 
          box-shadow: ${theme === "dark" 
            ? "0 8px 20px -4px rgba(59, 130, 246, 0.4), 0 0 0 1px rgba(59, 130, 246, 0.2)" 
            : "0 8px 20px -4px rgba(59, 130, 246, 0.3), 0 0 0 1px rgba(59, 130, 246, 0.1)"}; 
        }
        
        .filter button.active:hover {
          transform: translateY(-2px);
          box-shadow: ${theme === "dark" 
            ? "0 12px 24px -6px rgba(59, 130, 246, 0.5), 0 0 0 1px rgba(59, 130, 246, 0.3)" 
            : "0 12px 24px -6px rgba(59, 130, 246, 0.4), 0 0 0 1px rgba(59, 130, 246, 0.2)"}; 
        }
        
        .loading { 
          text-align: center; 
          padding: 48px 20px; 
          opacity: 0.7;
          font-size: 16px;
          color: ${theme === "dark" ? "#94a3b8" : "#64748b"};
        }
        
        .loading::after {
          content: '';
          display: inline-block;
          width: 20px;
          height: 20px;
          margin-left: 12px;
          border: 2px solid ${theme === "dark" ? "#475569" : "#cbd5e1"};
          border-radius: 50%;
          border-top-color: ${theme === "dark" ? "#3b82f6" : "#3b82f6"};
          animation: spin 1s linear infinite;
          vertical-align: middle;
        }
        
        @keyframes spin {
          to { transform: rotate(360deg); }
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
          .section { padding: 20px; border-radius: 16px; margin: 16px 0; }
          .title { font-size: 18px; }
          .item { padding: 18px; border-radius: 14px; }
          .filter { gap: 8px; }
          .filter button { padding: 8px 14px; font-size: 12px; }
          .row { flex-direction: column; align-items: flex-start; gap: 8px; }
        }
        
        /* Animation for new items */
        @keyframes slideInUp { to { opacity: 1; transform: translateY(0); } }
        .item:nth-child(1) { animation-delay: 0.1s; }
        .item:nth-child(2) { animation-delay: 0.2s; }
        .item:nth-child(3) { animation-delay: 0.3s; }
        .item:nth-child(4) { animation-delay: 0.4s; }
        .item:nth-child(5) { animation-delay: 0.5s; }
      `,
    });

    const titleText = productId
      ? (lang === "ar" ? "آراء المشترين" : "Customer Reviews")
      : (lang === "ar" ? "تقييمات المتجر" : "Store Reviews");

    const container = h("div", { class: "wrap" });
    const section = h("div", { class: "section" }, [
      h("div", { class: "header" }, [
        h("img", { class: "logo", src: LOGO_URL, alt: "Theqah" }),
        h("p", { class: "title" }, titleText),
      ]),
      productId ? h("p", { class: "meta" }, `${lang === "ar" ? "رقم المنتج" : "Product"}: ${productId}`) : null,
      h("div", { class: "list loading" }, lang === "ar" ? "…جاري التحميل" : "Loading…"),
      h("div", { class: "filter" }, [
        h("span", {}, lang === "ar" ? "الترتيب:" : "Sort:"),
        h("button", { "data-sort": "desc", class: "active" }, lang === "ar" ? "الأحدث" : "Newest"),
        h("button", { "data-sort": "asc" }, lang === "ar" ? "الأقدم" : "Oldest"),
      ]),
    ]);

    container.appendChild(section);
    root.appendChild(style);
    root.appendChild(container);

    const filterEl = section.querySelector(".filter");
    const list = section.querySelector(".list");
    let currentSort = "desc";
    let lastData = null;

    filterEl.addEventListener("click", (e) => {
      const btn = e.target.closest("button");
      if (!btn) return;
      currentSort = btn.getAttribute("data-sort") || "desc";
      filterEl.querySelectorAll("button").forEach((b) => b.classList.remove("active"));
      btn.classList.add("active");
      renderList(lastData);
    });

    const base = `${API_BASE}?storeUid=${encodeURIComponent(store)}&limit=${encodeURIComponent(String(limit))}&sinceDays=365`;
    const endpoint = productId ? `${base}&productId=${encodeURIComponent(productId)}` : base;

    const fetchData = async () => {
      try {
        const url = `${endpoint}&sort=${currentSort}&v=${encodeURIComponent(SCRIPT_VERSION)}&_=${Date.now()}`;
        const res = await fetch(url, { cache: 'no-store' }); // طلب بسيط => بدون preflight
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        lastData = await res.json();
        renderList(lastData);
        hostEl.setAttribute("data-state", "done"); // نجاح
      } catch (e) {
        console.error('Failed to fetch reviews:', e);
        list.innerHTML = "";
        list.appendChild(h("div", { class: "empty" }, lang === "ar" ? "تعذّر التحميل" : "Failed to load"));
        hostEl.removeAttribute("data-state"); // تسمح بإعادة المحاولة لاحقًا
      }
    };

    const renderList = (data) => {
      list.innerHTML = "";
      list.classList.remove("loading");
      const items = Array.isArray(data?.items) ? data.items : [];
      if (!items.length) {
        list.appendChild(h("div", { class: "empty" }, lang === "ar" ? "لا توجد تقييمات بعد — كن أول من يقيّم!" : "No reviews yet — be the first!"));
        return;
      }
      items.sort((a, b) =>
        currentSort === "asc"
          ? Number(a.publishedAt || 0) - Number(b.publishedAt || 0)
          : Number(b.publishedAt || 0) - Number(a.publishedAt || 0)
      );
      for (const r of items) {
        const when = r.publishedAt ? new Date(r.publishedAt).toLocaleDateString(lang === "ar" ? "ar" : "en") : "";
        const trusted = !!r.trustedBuyer;

        const rowLeftChildren = [
          Stars(Number(r.stars || 0)),
          trusted
            ? h("span", { class: "badge", title: (lang === "ar" ? "مشتري موثّق" : "Verified Buyer") }, [
                h("img", {
                  class: "badge-logo",
                  src: LOGO_URL,
                  alt: (lang === "ar" ? "مشتري موثّق" : "Verified Buyer"),
                  loading: "lazy"
                }),
                h("span", { class: "label" }, "مشتري موثق")
              ])
            : null,
        ];

        const row = h("div", { class: "row" }, [
          h("div", { class: "left" }, rowLeftChildren),
          h("small", { class: "meta" }, when),
        ]);

        const text = h("p", { class: "text" }, String(r.text || "").trim());
        list.appendChild(h("div", { class: "item" }, [row, text]));
      }
    };

    await fetchData();
  }

  // ——— Main mounting مع حراسة و Debounce للـ SPA ———
  function debounce(fn, ms){ let t; return (...a)=>{ clearTimeout(t); t=setTimeout(()=>fn(...a), ms); }; }

  let mountedOnce = false;
  let lastHref = location.href;

  const safeMount = async () => {
    // ما تعيدش التركيب على نفس الـ URL
    if (mountedOnce && lastHref === location.href) return;
    lastHref = location.href;

    const existingHost = document.querySelector("#theqah-reviews, .theqah-reviews");

    // قراءة الإعدادات
    let store =
      existingHost?.getAttribute("data-store") ||
      existingHost?.dataset?.store ||
      CURRENT_SCRIPT?.dataset?.store ||
      "";

    const lang =
      existingHost?.getAttribute?.("data-lang") ||
      existingHost?.dataset?.lang ||
      CURRENT_SCRIPT?.dataset?.lang ||
      "ar";

    const theme =
      existingHost?.getAttribute?.("data-theme") ||
      existingHost?.dataset?.theme ||
      CURRENT_SCRIPT?.dataset?.theme ||
      "light";

    const limit = Number(
      existingHost?.getAttribute?.("data-limit") ||
      existingHost?.dataset?.limit ||
      CURRENT_SCRIPT?.dataset?.limit ||
      10
    ) || 10;

    // تنظيف placeholder
    if (store && (store.includes('{') || /STORE_ID/i.test(store))) {
      console.warn('Clearing placeholder store:', store);
      store = '';
    }

    // محاولة auto-resolve
    if (!store) {
      try { store = await resolveStore(); }
      catch (err) { console.error('Error during store auto-resolution:', err); }
    }

    // لو لسه مفيش — اعرض رسالة تشخيصية
    const host = existingHost || ensureHostUnderProduct();
    if (!store) {
      if (host && host.getAttribute("data-mounted") !== "1") {
        const msg = document.createElement("div");
        msg.className = "theqah-widget-empty";
        msg.style.cssText = "padding:12px;border:1px dashed #94a3b8;border-radius:12px;opacity:.8;font:13px system-ui;";
        msg.textContent = (String(lang).toLowerCase() === 'ar')
          ? "لم يتم العثور على معرف المتجر. تأكد من تثبيت التطبيق في متجر سلة."
          : "Store ID not found. Make sure the app is installed in your Salla store.";
        host.appendChild(msg);
        host.setAttribute("data-mounted", "1");
      }
      return;
    }

    // product id
    const pidFromHost = host?.getAttribute("data-product") || host?.dataset?.product || null;
    const pid = (pidFromHost && pidFromHost !== "auto") ? pidFromHost : detectProductId();

    await mountOne(host, store, pid, limit, String(lang).toLowerCase(), String(theme).toLowerCase());
    mountedOnce = true;
  };

  if (document.readyState === "loading") document.addEventListener("DOMContentLoaded", () => safeMount());
  else safeMount();

  // دعم SPA (مرة واحدة)
  if (!window.__THEQAH_OBS__) {
    window.__THEQAH_OBS__ = true;
    const deb = debounce(() => safeMount(), 700);
    const obs = new MutationObserver(() => deb());
    obs.observe(document.documentElement || document.body, { childList: true, subtree: true });
  }
})();

====[ END FILE: public/widgets/theqah-widget.js ]===================================================

====[ SKIP (binary): public/window.svg ]============================================================
Size: 385 B

====[ START FILE: quick-smtp-check.mjs (409 B) ]====================================================
// quick-smtp-check.mjs
import nodemailer from 'nodemailer';

const t = nodemailer.createTransport({
  host: process.env.DMAIL_SMTP_HOST,
  port: Number(process.env.DMAIL_SMTP_PORT || 465),
  secure: true, // 465 = SSL/TLS
  auth: {
    user: process.env.DMAIL_SMTP_USER,
    pass: process.env.DMAIL_SMTP_PASS
  }
});

t.verify()
  .then(() => console.log('SMTP OK'))
  .catch(console.error);
====[ END FILE: quick-smtp-check.mjs ]==============================================================

====[ START FILE: README.md (1.4 KB) ]==============================================================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.
====[ END FILE: README.md ]=========================================================================

====[ START FILE: src/components/admin/AdminAnalytics.tsx (12.4 KB) ]===============================
'use client';

import { useCallback, useEffect, useMemo, useRef, useState } from 'react';
import { getAuth, onAuthStateChanged, User } from 'firebase/auth';
import { app } from '@/lib/firebase';
import axios from '@/lib/axiosInstance';
import { isAxiosError } from 'axios';
import {
  PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip,
  ResponsiveContainer, LineChart, Line
} from 'recharts';

interface Stats {
  totalStores: number;
  totalReviews: number;
  totalAlerts: number;
  publishedReviews: number;
  pendingReviews: number;
}

interface FetchError {
  message: string;
  code?: number;
}

const STAT_CARDS: Array<{
  key: keyof Stats;
  title: string;
  icon: string;
  gradient: string;
  bg: string;
  text: string;
}> = [
  { key: 'totalStores', title: 'إجمالي المتاجر', icon: '🏪', gradient: 'from-blue-400 to-blue-600', bg: 'bg-blue-50', text: 'text-blue-600' },
  { key: 'totalReviews', title: 'إجمالي التقييمات', icon: '⭐', gradient: 'from-purple-400 to-purple-600', bg: 'bg-purple-50', text: 'text-purple-600' },
  { key: 'publishedReviews', title: 'التقييمات المنشورة', icon: '✅', gradient: 'from-green-400 to-green-600', bg: 'bg-green-50', text: 'text-green-600' },
  { key: 'totalAlerts', title: 'البلاغات', icon: '🚨', gradient: 'from-red-400 to-red-600', bg: 'bg-red-50', text: 'text-red-600' },
];

const AuthLoadingState = () => (
  <div className="flex items-center justify-center min-h-[400px]">
    <div className="text-center">
      <div className="animate-spin rounded-full h-16 w-16 border-b-4 border-green-600 mx-auto mb-4"></div>
      <p className="text-lg text-gray-600">جاري التحقق من الهوية...</p>
    </div>
  </div>
);

const UnauthorizedState = () => (
  <div className="text-center p-8">
    <div className="bg-red-50 border border-red-200 rounded-lg p-6">
      <div className="text-red-500 text-6xl mb-4">🔒</div>
      <p className="text-red-600 text-lg font-medium">يرجى تسجيل الدخول للوصول لهذه الصفحة</p>
    </div>
  </div>
);

const LoadingSkeleton = () => (
  <div className="space-y-6">
    <div className="bg-gradient-to-r from-green-50 to-blue-50 rounded-lg p-6">
      <h2 className="text-2xl font-bold text-green-800 mb-6 flex items-center">
        <span className="animate-pulse">📊</span>
        <span className="mr-3">إحصائيات النظام</span>
      </h2>
    </div>
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      {[...Array(4)].map((_, i) => (
        <div key={i} className="bg-white rounded-xl p-6 shadow-lg border animate-pulse">
          <div className="flex items-center justify-between">
            <div className="space-y-3">
              <div className="h-4 bg-gray-200 rounded w-20"></div>
              <div className="h-8 bg-gray-300 rounded w-16"></div>
            </div>
            <div className="w-12 h-12 bg-gray-200 rounded-full"></div>
          </div>
        </div>
      ))}
    </div>
    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
      {[...Array(2)].map((_, i) => (
        <div key={i} className="bg-white rounded-xl p-6 shadow-lg animate-pulse">
          <div className="h-6 bg-gray-200 rounded w-32 mb-4"></div>
          <div className="h-64 bg-gray-100 rounded"></div>
        </div>
      ))}
    </div>
  </div>
);

const ErrorState = ({ error, onRetry }: { error: FetchError; onRetry: () => void }) => (
  <div className="bg-red-50 border border-red-200 rounded-xl p-8 text-center">
    <div className="text-red-500 text-6xl mb-4">❌</div>
    <p className="text-red-600 mb-4 text-lg">{error.message}</p>
    <button
      onClick={onRetry}
      className="px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium"
    >
      إعادة المحاولة
    </button>
  </div>
);

const StatCard = ({ title, value, icon, gradient, bg, text }: { title: string; value: number; icon: string; gradient: string; bg: string; text: string }) => (
  <div className={`${bg} rounded-xl p-6 shadow-lg border-2 border-white hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1`}>
    <div className="flex items-center justify-between">
      <div className="space-y-2">
        <p className="text-sm font-medium text-gray-600">{title}</p>
        <p className={`text-3xl font-bold ${text} tabular-nums`}>
          {value.toLocaleString('ar-EG')}
        </p>
      </div>
      <div className={`w-16 h-16 bg-gradient-to-br ${gradient} rounded-full flex items-center justify-center text-white text-2xl shadow-lg`}>
        {icon}
      </div>
    </div>
  </div>
);

export default function AdminAnalytics() {
  const [stats, setStats] = useState<Stats | null>(null);
  const [animatedStats, setAnimatedStats] = useState<Stats>({
    totalStores: 0, totalReviews: 0, totalAlerts: 0, publishedReviews: 0, pendingReviews: 0
  });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<FetchError | null>(null);
  const [user, setUser] = useState<User | null>(null);
  const [authLoading, setAuthLoading] = useState(true);

  useEffect(() => {
    const auth = getAuth(app);
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      setUser(currentUser);
      setAuthLoading(false);
    });
    return unsubscribe;
  }, []);

  const fetchStats = useCallback(async () => {
    if (!user) return;
    try {
      setLoading(true);
      setError(null);
      const res = await axios.get<Stats>('/api/admin/dashboard');
      setStats(res.data);
    } catch (err: unknown) {
      if (isAxiosError(err)) {
        setError({
          message: err.response?.status === 401
            ? 'غير مخول للوصول. يرجى التأكد من صلاحيات المشرف.'
            : 'حدث خطأ أثناء تحميل الإحصائيات',
          code: err.response?.status,
        });
      } else {
        setError({ message: 'حدث خطأ غير متوقع أثناء التحميل' });
      }
    } finally {
      setLoading(false);
    }
  }, [user]);

  useEffect(() => {
    if (!authLoading && user) fetchStats();
  }, [authLoading, user, fetchStats]);

  const frameRef = useRef<number | null>(null);
  useEffect(() => {
    if (!stats) return;
    const duration = 2000;
    const start = performance.now();

    const animate = (time: number) => {
      const progress = Math.min((time - start) / duration, 1);
      setAnimatedStats({
        totalStores: Math.floor(progress * stats.totalStores),
        totalReviews: Math.floor(progress * stats.totalReviews),
        totalAlerts: Math.floor(progress * stats.totalAlerts),
        publishedReviews: Math.floor(progress * stats.publishedReviews),
        pendingReviews: Math.floor(progress * stats.pendingReviews),
      });
      if (progress < 1) {
        frameRef.current = requestAnimationFrame(animate);
      }
    };

    frameRef.current = requestAnimationFrame(animate);
    return () => {
      if (frameRef.current !== null) cancelAnimationFrame(frameRef.current);
    };
  }, [stats]);

  /** ----------------------------------------------------------------
   *  Hooks that derive view-data (MUST be before any early returns)
   *  ---------------------------------------------------------------- */
  const reviewStatusData = useMemo(
    () => ([
      { name: 'منشورة', value: animatedStats.publishedReviews, color: '#10B981' },
      { name: 'معلقة',  value: animatedStats.pendingReviews,    color: '#F59E0B' },
    ]),
    [animatedStats.publishedReviews, animatedStats.pendingReviews]
  );

  const overviewData = useMemo(
    () => ([
      { name: 'المتاجر',   value: animatedStats.totalStores,   color: '#3B82F6' },
      { name: 'التقييمات', value: animatedStats.totalReviews,  color: '#8B5CF6' },
      { name: 'البلاغات',  value: animatedStats.totalAlerts,   color: '#EF4444' },
    ]),
    [animatedStats.totalStores, animatedStats.totalReviews, animatedStats.totalAlerts]
  );

  const trendData = useMemo(
    () => ([
      { name: 'المتاجر',            value: animatedStats.totalStores },
      { name: 'التقييمات المنشورة', value: animatedStats.publishedReviews },
      { name: 'التقييمات المعلقة',  value: animatedStats.pendingReviews },
      { name: 'البلاغات',           value: animatedStats.totalAlerts },
    ]),
    [
      animatedStats.totalStores,
      animatedStats.publishedReviews,
      animatedStats.pendingReviews,
      animatedStats.totalAlerts
    ]
  );

  /** -----------------------
   *  Early returns (safe)
   *  ---------------------- */
  if (authLoading) return <AuthLoadingState />;
  if (!user) return <UnauthorizedState />;
  if (loading) return <LoadingSkeleton />;
  if (error) return <ErrorState error={error} onRetry={fetchStats} />;
  if (!stats) return null;

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-green-50 via-blue-50 to-purple-50 rounded-xl p-6 border">
        <h2 className="text-3xl font-bold text-green-800 flex items-center mb-2">
          <span className="animate-bounce mr-3">📊</span>
          إحصائيات النظام
        </h2>
        <p className="text-gray-600">نظرة شاملة على أداء المنصة</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {STAT_CARDS.map(({ key, title, icon, gradient, bg, text }) => (
          <StatCard
            key={key}
            title={title}
            value={animatedStats[key]}
            icon={icon}
            gradient={gradient}
            bg={bg}
            text={text}
          />
        ))}
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-xl p-6 shadow-lg border">
          <h3 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
            <span className="mr-2">📈</span>
            حالة التقييمات
          </h3>
          <ResponsiveContainer width="100%" height={300}>
            <PieChart>
              <Pie data={reviewStatusData} cx="50%" cy="50%" outerRadius={100} innerRadius={60} paddingAngle={5} dataKey="value">
                {reviewStatusData.map((entry, index) => <Cell key={index} fill={entry.color} />)}
              </Pie>
              <Tooltip formatter={(value: number) => [value.toLocaleString('ar-EG'), '']} />
            </PieChart>
          </ResponsiveContainer>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-lg border">
          <h3 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
            <span className="mr-2">📊</span>
            نظرة عامة
          </h3>
          <ResponsiveContainer width="100%" height={300}>
            <BarChart data={overviewData}>
              <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
              <XAxis dataKey="name" tick={{ fontSize: 12 }} stroke="#6B7280" />
              <YAxis tick={{ fontSize: 12 }} stroke="#6B7280" />
              <Tooltip formatter={(value: number) => [value.toLocaleString('ar-EG'), '']} />
              <Bar dataKey="value" radius={[4, 4, 0, 0]}>
                {overviewData.map((entry, index) => <Cell key={index} fill={entry.color} />)}
              </Bar>
            </BarChart>
          </ResponsiveContainer>
        </div>
      </div>

      <div className="bg-white rounded-xl p-6 shadow-lg border">
        <h3 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
          <span className="mr-2">📈</span>
          اتجاه البيانات
        </h3>
        <ResponsiveContainer width="100%" height={300}>
          <LineChart data={trendData}>
            <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
            <XAxis dataKey="name" tick={{ fontSize: 12 }} stroke="#6B7280" />
            <YAxis tick={{ fontSize: 12 }} stroke="#6B7280" />
            <Tooltip formatter={(value: number) => [value.toLocaleString('ar-EG'), '']} />
            <Line type="monotone" dataKey="value" stroke="#10B981" strokeWidth={3} dot={{ r: 6, fill: '#10B981' }} activeDot={{ r: 8, fill: '#059669' }} />
          </LineChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
}
====[ END FILE: src/components/admin/AdminAnalytics.tsx ]===========================================

====[ START FILE: src/components/admin/AdminReports.tsx (8.2 KB) ]==================================
'use client';

import { useCallback, useEffect, useRef, useState } from 'react';
import { getAuth, onAuthStateChanged, User } from 'firebase/auth';
import { app } from '@/lib/firebase';
import axios from '@/lib/axiosInstance';

interface Report {
  id: string;
  reason: string;
  reviewId: string;
  createdAt?: string | Date | number;
  email?: string;
  name?: string;
  resolved?: boolean;
  resolvedAt?: string | Date | number;
}

export default function AdminReports() {
  const [reports, setReports] = useState<Report[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [user, setUser] = useState<User | null>(null);
  const [authLoading, setAuthLoading] = useState(true);
  const [filter, setFilter] = useState<'all' | 'resolved' | 'unresolved'>('all');

  // avoid setState after unmount
  const mountedRef = useRef(true);
  useEffect(() => {
    mountedRef.current = true;
    return () => {
      mountedRef.current = false;
    };
  }, []);

  useEffect(() => {
    const auth = getAuth(app);
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      setUser(currentUser);
      setAuthLoading(false);
    });
    return () => unsubscribe();
  }, []);

  const fetchReports = useCallback(async () => {
    if (!user) return;

    try {
      if (mountedRef.current) {
        setLoading(true);
        setError('');
      }

      let url = '/api/admin/review-reports';
      if (filter === 'resolved') url += '?resolved=true';
      else if (filter === 'unresolved') url += '?resolved=false';

      const res = await axios.get<{ alerts: Report[] }>(url);
      if (mountedRef.current) {
        setReports(res.data.alerts || []);
      }
    } catch (error) {
      if (!mountedRef.current) return;
      const err = error as { response?: { status?: number } };
      if (err.response?.status === 401) {
        setError('غير مخول للوصول. يرجى التأكد من صلاحيات المشرف.');
      } else {
        setError('حدث خطأ أثناء تحميل البلاغات');
      }
    } finally {
      if (mountedRef.current) setLoading(false);
    }
  }, [user, filter]);

  useEffect(() => {
    if (!authLoading && user) {
      fetchReports();
    }
  }, [authLoading, user, fetchReports]);

  const resolveReport = async (reportId: string, action: 'resolve' | 'delete') => {
    if (!user) return;
    try {
      await axios.post('/api/admin/reports/resolve', { reportId, action });
      if (!mountedRef.current) return;

      if (action === 'delete') {
        setReports((prev) => prev.filter((r) => r.id !== reportId));
      } else {
        setReports((prev) =>
          prev.map((r) => (r.id === reportId ? { ...r, resolved: true, resolvedAt: Date.now() } : r))
        );
      }
    } catch (error) {
      const err = error as { response?: { data?: { message?: string } }; message?: string };
      alert('فشل في معالجة البلاغ: ' + (err.response?.data?.message || err.message || ''));
    }
  };

  if (authLoading) {
    return (
      <div className="flex items-center justify-center min-h-[200px]">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4"></div>
          <p>جاري التحقق من الهوية...</p>
        </div>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="text-center p-8">
        <p className="text-red-500">يرجى تسجيل الدخول للوصول لهذه الصفحة</p>
      </div>
    );
  }

  return (
    <div>
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-xl font-bold text-green-800">🚨 بلاغات التقييمات</h2>
        <div className="flex gap-2">
          <button
            onClick={() => setFilter('all')}
            className={`px-3 py-1 rounded text-sm ${filter === 'all' ? 'bg-green-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}
          >
            الكل ({reports.length})
          </button>
          <button
            onClick={() => setFilter('unresolved')}
            className={`px-3 py-1 rounded text-sm ${filter === 'unresolved' ? 'bg-red-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}
          >
            غير محلولة
          </button>
          <button
            onClick={() => setFilter('resolved')}
            className={`px-3 py-1 rounded text-sm ${filter === 'resolved' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}
          >
            محلولة
          </button>
        </div>
      </div>

      {loading ? (
        <div className="flex items-center justify-center min-h-[200px]">
          <div className="text-center">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto mb-2"></div>
            <p>جاري التحميل...</p>
          </div>
        </div>
      ) : error ? (
        <div className="bg-red-50 border border-red-200 rounded-lg p-4">
          <p className="text-red-600 mb-3">{error}</p>
          <button onClick={fetchReports} className="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 text-sm">
            إعادة المحاولة
          </button>
        </div>
      ) : reports.length === 0 ? (
        <div className="text-center p-8 bg-gray-50 rounded-lg">
          <p className="text-gray-500">
            {filter === 'all' ? 'لا توجد بلاغات حالياً' : filter === 'resolved' ? 'لا توجد بلاغات محلولة' : 'لا توجد بلاغات غير محلولة'}
          </p>
        </div>
      ) : (
        <div className="space-y-4">
          {reports.map((report) => (
            <div
              key={report.id}
              className={`border p-4 rounded-lg shadow-sm space-y-3 ${report.resolved ? 'bg-green-50 border-green-200' : 'bg-white'}`}
            >
              <div className="flex justify-between items-start">
                <div className="flex-1">
                  <h3 className="font-bold text-gray-800 mb-2">
                    📣 بلاغ على تقييم #{report.reviewId}
                    {report.resolved && (
                      <span className="ml-2 px-2 py-1 bg-green-100 text-green-800 text-xs rounded">محلول</span>
                    )}
                  </h3>

                  <p className="text-sm text-gray-700 mb-2">
                    <span className="font-medium">السبب:</span> {report.reason}
                  </p>

                  {report.email && (
                    <p className="text-xs text-gray-500 mb-2">
                      المبلغ: {report.name} ({report.email})
                    </p>
                  )}

                  {report.createdAt && (
                    <p className="text-xs text-gray-400">
                      تاريخ البلاغ: {new Date(report.createdAt).toLocaleDateString('ar-EG')}
                    </p>
                  )}

                  {report.resolved && report.resolvedAt && (
                    <p className="text-xs text-green-600">
                      تم الحل في: {new Date(report.resolvedAt).toLocaleDateString('ar-EG')}
                    </p>
                  )}
                </div>

                {!report.resolved && (
                  <div className="flex gap-2">
                    <button
                      onClick={() => resolveReport(report.id, 'resolve')}
                      className="px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700"
                    >
                      تم الحل
                    </button>
                    <button
                      onClick={() => resolveReport(report.id, 'delete')}
                      className="px-3 py-1 bg-red-600 text-white text-sm rounded hover:bg-red-700"
                    >
                      حذف
                    </button>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
====[ END FILE: src/components/admin/AdminReports.tsx ]=============================================

====[ START FILE: src/components/admin/AdminReviews.tsx (20.4 KB) ]=================================
'use client';

import { useEffect, useState, useCallback } from 'react';
import { getAuth, onAuthStateChanged, User } from 'firebase/auth';
import { app } from '@/lib/firebase';
import axios from '@/lib/axiosInstance';
import { useRouter } from 'next/navigation';

import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import {
  Select,
  SelectTrigger,
  SelectContent,
  SelectItem,
  SelectValue,
} from '@/components/ui/select';
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
} from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';

import {
  RefreshCw,
  Search,
  ChevronUp,
  ChevronDown,
  EyeOff,
  Megaphone,
  Trash2,
  Star,
  CalendarClock,
  Edit3,
  Lock,
} from 'lucide-react';

interface Review {
  id: string;
  name: string;
  comment: string;
  stars: number;
  storeName: string;
  published: boolean;
  createdAt?: string | Date;
  lastModified?: string;
}

interface ReviewsResponse {
  reviews: Review[];
  total: number;
  published: number;
  pending: number;
  averageRating: number;
  hasMore?: boolean;
  nextCursor?: string | null;
}

export default function AdminReviews() {
  const [reviews, setReviews] = useState<Review[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [user, setUser] = useState<User | null>(null);
  const [authLoading, setAuthLoading] = useState(true);
  const [actionLoading, setActionLoading] = useState<string | null>(null);

  const [searchTerm, setSearchTerm] = useState('');
  const [storeFilter, setStoreFilter] = useState('');
  const [starsFilter, setStarsFilter] = useState('all');
  const [publishedFilter, setPublishedFilter] = useState('all');
  const [sortBy, setSortBy] = useState<'createdAt' | 'stars' | 'name'>('createdAt');
  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');

  const [stats, setStats] = useState({
    total: 0,
    published: 0,
    pending: 0,
    averageRating: 0,
  });

  const router = useRouter();

  useEffect(() => {
    const auth = getAuth(app);
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      setUser(currentUser);
      setAuthLoading(false);
      if (!currentUser) router.push('/login');
    });
    return () => unsubscribe();
  }, [router]);

  const fetchReviews = useCallback(async () => {
    if (!user) {
      setError('يرجى تسجيل الدخول أولاً');
      return;
    }

    try {
      setLoading(true);
      setError('');

      const params = new URLSearchParams();
      if (storeFilter) params.append('storeName', storeFilter);
      if (starsFilter && starsFilter !== 'all') params.append('stars', starsFilter);
      if (publishedFilter !== 'all') params.append('published', publishedFilter);
      if (sortBy) params.append('sortBy', sortBy);
      if (sortOrder) params.append('sortOrder', sortOrder);
      if (searchTerm) params.append('search', searchTerm);

      const res = await axios.get<ReviewsResponse>(`/api/admin/reviews?${params.toString()}`);
      const data = res.data;

      setReviews(data.reviews || []);
      setStats({
        total: data.total ?? data.reviews.length,
        published: data.published ?? data.reviews.filter((r) => r.published).length,
        pending: data.pending ?? data.reviews.filter((r) => !r.published).length,
        averageRating:
          data.averageRating ??
          (data.reviews.length > 0
            ? data.reviews.reduce((acc, r) => acc + r.stars, 0) / data.reviews.length
            : 0),
      });
    } catch (error) {
      const err = error as { response?: { status?: number; data?: { message?: string } }; message?: string };
      if (err.response?.status === 401) {
        setError('غير مخول للوصول. يرجى التأكد من صلاحيات المشرف.');
        setTimeout(() => router.push('/'), 3000);
      } else if (err.response?.status === 403) {
        setError('ليس لديك صلاحية الوصول لهذه البيانات');
      } else {
        setError('حدث خطأ أثناء تحميل التقييمات: ' + (err.response?.data?.message || err.message || ''));
      }
    } finally {
      setLoading(false);
    }
  }, [user, storeFilter, starsFilter, publishedFilter, sortBy, sortOrder, searchTerm, router]);

  const togglePublish = async (id: string, current: boolean) => {
    if (!user) {
      alert('يرجى تسجيل الدخول أولاً');
      return;
    }
    try {
      setActionLoading(id);
      await axios.patch(`/api/admin/reviews/${id}`, {
        published: !current,
        lastModified: new Date().toISOString(),
      });
      setReviews((prev) =>
        prev.map((r) => (r.id === id ? { ...r, published: !current, lastModified: new Date().toISOString() } : r))
      );
      setStats((prev) => ({
        ...prev,
        published: current ? prev.published - 1 : prev.published + 1,
        pending: current ? prev.pending + 1 : prev.pending - 1,
      }));
    } catch (error) {
      const err = error as { response?: { data?: { message?: string } }; message?: string };
      alert('فشل في تحديث حالة التقييم: ' + (err.response?.data?.message || err.message || ''));
    } finally {
      setActionLoading(null);
    }
  };

  const deleteReview = async (id: string) => {
    if (!confirm('هل أنت متأكد من حذف هذا التقييم؟')) return;
    try {
      setActionLoading(id);
      await axios.delete(`/api/admin/reviews/${id}`);
      const deleted = reviews.find((r) => r.id === id);
      setReviews((prev) => prev.filter((r) => r.id !== id));
      setStats((prev) => ({
        ...prev,
        total: prev.total - 1,
        published: deleted?.published ? prev.published - 1 : prev.published,
        pending: !deleted?.published ? prev.pending - 1 : prev.pending,
      }));
    } catch (error) {
      const err = error as { response?: { data?: { message?: string } }; message?: string };
      alert('فشل في حذف التقييم: ' + (err.response?.data?.message || err.message || ''));
    } finally {
      setActionLoading(null);
    }
  };

  const getStarDisplay = (rating: number) => (
    <div className="flex items-center gap-0.5" aria-label={`Rating ${rating} of 5`}>
      {Array.from({ length: 5 }).map((_, i) => (
        <Star
          key={i}
          className={`h-4 w-4 transition-colors duration-300 ${i < rating ? 'text-primary' : 'text-muted-foreground'}`}
          fill={i < rating ? 'currentColor' : 'none'}
        />
      ))}
    </div>
  );

  const formatDate = (dateString?: string | Date) => {
    if (!dateString) return '-';
    return new Date(dateString).toLocaleDateString('ar-EG', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  const filteredReviews = reviews.filter((review) => {
    if (!searchTerm) return true;
    const searchLower = searchTerm.toLowerCase();
    return (
      review.name.toLowerCase().includes(searchLower) ||
      review.comment.toLowerCase().includes(searchLower) ||
      review.storeName.toLowerCase().includes(searchLower)
    );
  });

  useEffect(() => {
    if (!authLoading && user) fetchReviews();
  }, [fetchReviews, user, authLoading]);

  const StatCard = ({ icon, label, value }: { icon: React.ReactNode; label: string; value: string | number }) => (
    <Card className="animate-fade-in rounded-lg border border-border/60 bg-gradient-to-b from-card to-muted/30 shadow-sm transition-all duration-300 hover:shadow-md">
      <CardContent className="pt-6">
        <div className="flex items-center gap-3">
          <div className="text-2xl">{icon}</div>
          <div>
            <p className="text-sm text-muted-foreground">{label}</p>
            <p className="text-2xl font-semibold">{value}</p>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const StatusBadge = ({ published }: { published: boolean }) => (
    <Badge
      variant={published ? 'default' : 'secondary'}
      className={`rounded-full transition-all duration-200 ${published ? 'ring-1 ring-primary/20' : 'ring-1 ring-border/60'}`}
    >
      {published ? 'منشور' : 'في الانتظار'}
    </Badge>
  );

  if (authLoading) {
    return (
      <Card className="min-h-[240px] flex items-center justify-center animate-fade-in">
        <CardContent className="w-full max-w-sm text-center">
          <div className="mx-auto mb-4 h-12 w-12 animate-spin rounded-full border-b-2 border-r-2 border-primary" />
          <p className="text-muted-foreground">جاري التحقق من الهوية...</p>
        </CardContent>
      </Card>
    );
  }

  if (!user) {
    return (
      <Card className="p-8 text-center animate-fade-in border border-border/60 shadow-sm">
        <div className="mx-auto mb-4 h-12 w-12 rounded-full bg-secondary flex items-center justify-center">
          <Lock className="h-6 w-6" />
        </div>
        <CardTitle className="mb-2">يرجى تسجيل الدخول للوصول لهذه الصفحة</CardTitle>
        <CardDescription className="mb-6">ستتم إعادة التوجيه إلى صفحة تسجيل الدخول</CardDescription>
        <Button onClick={() => router.push('/login')} className="transition-transform duration-200 hover:scale-[1.02] focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2">
          تسجيل الدخول
        </Button>
      </Card>
    );
  }

  return (
    <main className="space-y-6">
      <section className="rounded-xl border bg-gradient-to-b from-background to-muted/30 p-5 md:p-6">
        <div className="flex flex-col md:flex-row items-start md:items-center justify-between gap-4">
          <div>
            <h2 className="text-2xl font-bold">إدارة التقييمات</h2>
            <p className="text-sm text-muted-foreground mt-1">مسجل باسم: {user.email}</p>
          </div>
          <Button
            onClick={fetchReviews}
            disabled={loading}
            variant="default"
            className="gap-2 transition-transform duration-200 hover:scale-[1.02] focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
          >
            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} /> تحديث
          </Button>
        </div>
      </section>

      <section className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <StatCard icon={<span>📊</span>} label="إجمالي التقييمات" value={stats.total} />
        <StatCard icon={<span>✅</span>} label="منشور" value={stats.published} />
        <StatCard icon={<span>⏳</span>} label="في الانتظار" value={stats.pending} />
        <StatCard icon={<span>⭐</span>} label="متوسط التقييم" value={stats.averageRating.toFixed(1)} />
      </section>

      {/* Filters */}
      <Card className="animate-fade-in sticky top-0 z-20 border border-border/60 backdrop-blur supports-[backdrop-filter]:bg-background/70">
        <CardHeader className="pb-2">
          <CardTitle className="text-base">الفلاتر</CardTitle>
          <CardDescription>ابحث وفلتر وقم بفرز التقييمات</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3">
            <div className="relative">
              <Search className="absolute right-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground" />
              <Input
                placeholder="البحث في التقييمات..."
                value={searchTerm}
                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}
                className="pr-9"
              />
            </div>
            <Input
              placeholder="فلترة حسب المتجر..."
              value={storeFilter}
              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setStoreFilter(e.target.value)}
            />
            <Select value={starsFilter} onValueChange={(v: string) => setStarsFilter(v)}>
              <SelectTrigger>
                <SelectValue placeholder="جميع التقييمات" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">جميع التقييمات</SelectItem>
                <SelectItem value="5">5 نجوم</SelectItem>
                <SelectItem value="4">4 نجوم</SelectItem>
                <SelectItem value="3">3 نجوم</SelectItem>
                <SelectItem value="2">2 نجمة</SelectItem>
                <SelectItem value="1">1 نجمة</SelectItem>
              </SelectContent>
            </Select>
            <Select value={publishedFilter} onValueChange={(v: string) => setPublishedFilter(v)}>
              <SelectTrigger>
                <SelectValue placeholder="جميع الحالات" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">جميع الحالات</SelectItem>
                <SelectItem value="true">منشور</SelectItem>
                <SelectItem value="false">في الانتظار</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div className="flex items-center gap-2">
            <Select value={sortBy} onValueChange={(v: 'createdAt' | 'stars' | 'name') => setSortBy(v)}>
              <SelectTrigger className="w-[220px]">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="createdAt">تاريخ الإنشاء</SelectItem>
                <SelectItem value="stars">التقييم</SelectItem>
                <SelectItem value="name">الاسم</SelectItem>
              </SelectContent>
            </Select>
            <Button
              variant="outline"
              onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}
              className="w-10 p-0"
              aria-label="تبديل ترتيب الفرز"
            >
              {sortOrder === 'asc' ? <ChevronUp className="h-4 w-4" /> : <ChevronDown className="h-4 w-4" />}
            </Button>
          </div>
        </CardContent>
      </Card>

      {loading && (
        <div className="grid gap-4">
          {[...Array(3)].map((_, i) => (
            <Card key={i} className="border border-border/60">
              <CardContent className="pt-6">
                <div className="animate-pulse space-y-4">
                  <div className="h-5 w-1/3 bg-muted rounded" />
                  <div className="h-4 w-2/3 bg-muted rounded" />
                  <div className="h-20 w-full bg-muted rounded" />
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      )}

      {error && (
        <Alert variant="destructive" className="animate-fade-in" aria-live="assertive" role="alert">
          <AlertTitle>حدث خطأ</AlertTitle>
          <AlertDescription className="flex items-center justify-between w-full">
            <span>⚠️ {error}</span>
            <Button size="sm" variant="secondary" onClick={fetchReviews}>
              إعادة المحاولة
            </Button>
          </AlertDescription>
        </Alert>
      )}

      {!loading && !error && (
        <div className="space-y-4">
          {filteredReviews.length === 0 ? (
            <Card className="p-10 text-center animate-fade-in border border-border/60">
              <div className="text-5xl mb-3">📝</div>
              <CardDescription className="text-lg">لا توجد تقييمات تطابق معايير البحث</CardDescription>
              {(searchTerm || storeFilter || starsFilter || publishedFilter !== 'all') && (
                <Button
                  variant="link"
                  className="mt-2"
                  onClick={() => {
                    setSearchTerm('');
                    setStoreFilter('');
                    setStarsFilter('all');
                    setPublishedFilter('all');
                  }}
                >
                  مسح جميع الفلاتر
                </Button>
              )}
            </Card>
          ) : (
            filteredReviews.map((review) => (
              <Card
                key={review.id}
                className={`group animate-fade-in transition-all duration-200 hover:shadow-md ${
                  !review.published ? 'ring-1 ring-amber-300/40' : 'border border-border/60'
                }`}
              >
                <CardContent className="pt-6">
                  <div className="flex flex-col md:flex-row justify-between items-start gap-4">
                    <div className="flex-1 space-y-3">
                      <div className="flex flex-wrap items-center gap-3">
                        <div className="text-2xl">{getStarDisplay(review.stars)}</div>
                        <div>
                          <h3 className="font-semibold">{review.name}</h3>
                          <p className="text-sm text-muted-foreground">
                            متجر: <span className="font-medium">{review.storeName}</span>
                          </p>
                        </div>
                        <StatusBadge published={review.published} />
                      </div>

                      {review.comment && (
                        <div className="rounded-lg border bg-muted/30 p-3 transition-colors duration-200 group-hover:bg-muted/50">
                          <p className="leading-relaxed">{review.comment}</p>
                        </div>
                      )}

                      <div className="flex flex-wrap items-center gap-4 text-xs text-muted-foreground">
                        <span className="inline-flex items-center gap-1">
                          <CalendarClock className="h-3.5 w-3.5" /> {formatDate(review.createdAt)}
                        </span>
                        {review.lastModified && (
                          <span className="inline-flex items-center gap-1">
                            <Edit3 className="h-3.5 w-3.5" /> آخر تعديل: {formatDate(review.lastModified)}
                          </span>
                        )}
                      </div>
                    </div>

                    <div className="flex flex-col md:flex-row gap-2">
                      <Button
                        variant={review.published ? 'destructive' : 'default'}
                        onClick={() => togglePublish(review.id, review.published)}
                        disabled={actionLoading === review.id}
                        className="gap-2 transition-transform duration-200 hover:scale-[1.02] focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
                      >
                        {actionLoading === review.id
                          ? <div className="h-4 w-4 animate-spin border-b-2 border-r-2 rounded-full" />
                          : review.published
                          ? <EyeOff className="h-4 w-4" />
                          : <Megaphone className="h-4 w-4" />}
                        {review.published ? 'إخفاء' : 'نشر'}
                      </Button>
                      <Button
                        variant="outline"
                        onClick={() => deleteReview(review.id)}
                        disabled={actionLoading === review.id}
                        className="gap-2 transition-transform duration-200 hover:scale-[1.02] focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
                      >
                        {actionLoading === review.id
                          ? <div className="h-4 w-4 animate-spin border-b-2 border-r-2 rounded-full" />
                          : <Trash2 className="h-4 w-4" />}
                        حذف
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))
          )}
        </div>
      )}
    </main>
  );
}
====[ END FILE: src/components/admin/AdminReviews.tsx ]=============================================

====[ START FILE: src/components/admin/AdminStores.tsx (11.8 KB) ]==================================
'use client';

import { useEffect, useState, useCallback } from 'react';
import axios from '@/lib/axiosInstance';
import { isAxiosError } from 'axios';

interface Store {
  id: string;
  name?: string;
  email?: string;
  username?: string;
  connected?: boolean;
  createdAt?: string;
  lastActive?: string;
  status?: 'active' | 'inactive' | 'suspended';
}

interface StoresResponse {
  stores: Store[];
  total: number;
  page: number;
  limit: number;
  hasMore?: boolean;
  nextCursor?: string | null;
}

export default function AdminStores() {
  const [stores, setStores] = useState<Store[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [sortBy, setSortBy] = useState<'name' | 'email' | 'createdAt'>('createdAt');
  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');
  const [filterConnected, setFilterConnected] = useState<'all' | 'connected' | 'disconnected'>('all');

  const fetchStores = useCallback(async () => {
    try {
      setError(null);
      setLoading(true);
      const res = await axios.get<StoresResponse>('/api/admin/stores', {
        params: {
          search: searchTerm || undefined,
          sortBy,
          sortOrder,
          filterConnected: filterConnected !== 'all' ? filterConnected : undefined,
        },
      });
      setStores(res.data.stores);
    } catch (error) {
      if (isAxiosError(error)) {
        setError(error.response?.data?.message || 'فشل في تحميل المتاجر');
      } else {
        setError('حدث خطأ غير متوقع');
      }
    } finally {
      setLoading(false);
    }
  }, [searchTerm, sortBy, sortOrder, filterConnected]);

  useEffect(() => {
    fetchStores();
  }, [fetchStores]);

  const handleRefresh = () => fetchStores();

  const handleSort = (column: 'name' | 'email' | 'createdAt') => {
    if (sortBy === column) {
      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');
    } else {
      setSortBy(column);
      setSortOrder('desc');
    }
  };

  const filteredStores = stores.filter((store) => {
    const s = searchTerm.trim().toLowerCase();
    if (!s) return true;
    return (
      (store.name || '').toLowerCase().includes(s) ||
      (store.email || '').toLowerCase().includes(s) ||
      (store.username || '').toLowerCase().includes(s)
    );
  });

  const getConnectionStatus = (connected?: boolean) =>
    connected ? (
      <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
        ✅ متصل
      </span>
    ) : (
      <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
        ❌ غير متصل
      </span>
    );

  const formatDate = (dateString?: string) => {
    if (!dateString) return '-';
    return new Date(dateString).toLocaleDateString('ar-EG', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    });
  };

  const getSortIcon = (column: string) => {
    if (sortBy !== column) return '↕️';
    return sortOrder === 'asc' ? '↑' : '↓';
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-[400px]">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600"></div>
        <p className="mr-3 text-gray-600">جارٍ التحميل...</p>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h2 className="text-2xl font-bold text-green-800 flex items-center">
          🏪 المتاجر المسجلة
          <span className="mr-2 text-sm font-normal text-gray-500 bg-gray-100 px-2 py-1 rounded-full">
            {filteredStores.length}
          </span>
        </h2>
        <button
          onClick={handleRefresh}
          className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center"
        >
          🔄 تحديث
        </button>
      </div>

      <div className="bg-white p-4 rounded-xl border shadow-sm space-y-4">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <input
            type="text"
            placeholder="البحث في المتاجر..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
          />

          <select
            value={filterConnected}
            onChange={(e) => setFilterConnected(e.target.value as 'all' | 'connected' | 'disconnected')}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
          >
            <option value="all">جميع المتاجر</option>
            <option value="connected">المتصلة فقط</option>
            <option value="disconnected">غير المتصلة فقط</option>
          </select>

          <div className="flex gap-2">
            <select
              value={sortBy}
              onChange={(e) => setSortBy(e.target.value as 'name' | 'email' | 'createdAt')}
              className="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
            >
              <option value="createdAt">تاريخ التسجيل</option>
              <option value="name">الاسم</option>
              <option value="email">البريد</option>
            </select>
            <button
              onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}
              className="px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50"
            >
              {sortOrder === 'asc' ? '↑' : '↓'}
            </button>
          </div>
        </div>
      </div>

      {error && (
        <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg flex items-center justify-between">
          <span>⚠️ {error}</span>
          <button onClick={handleRefresh} className="text-red-800 hover:text-red-900 underline">
            إعادة المحاولة
          </button>
        </div>
      )}

      {filteredStores.length === 0 ? (
        <div className="text-center py-12 bg-gray-50 rounded-xl">
          <div className="text-6xl mb-4">🏪</div>
          <p className="text-gray-600 text-lg">لا توجد متاجر تطابق معايير البحث</p>
          {searchTerm && (
            <button onClick={() => setSearchTerm('')} className="mt-2 text-green-600 hover:text-green-700 underline">
              مسح البحث
            </button>
          )}
        </div>
      ) : (
        <div className="bg-white rounded-xl border shadow-sm overflow-hidden">
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                  <th
                    className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100"
                    onClick={() => handleSort('name')}
                  >
                    اسم المتجر {getSortIcon('name')}
                  </th>
                  <th
                    className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100"
                    onClick={() => handleSort('email')}
                  >
                    البريد الإلكتروني {getSortIcon('email')}
                  </th>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">اسم المستخدم</th>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">حالة الاتصال</th>
                  <th
                    className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100"
                    onClick={() => handleSort('createdAt')}
                  >
                    تاريخ التسجيل {getSortIcon('createdAt')}
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {filteredStores.map((store, index) => (
                  <tr key={store.id} className={`hover:bg-gray-50 transition-colors ${index % 2 === 0 ? 'bg-white' : 'bg-gray-25'}`}>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">{store.id.slice(0, 8)}...</td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {store.name ? <span className="font-medium">{store.name}</span> : <span className="text-gray-400 italic">غير محدد</span>}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {store.email ? (
                        <a href={`mailto:${store.email}`} className="text-blue-600 hover:text-blue-800 underline">
                          {store.email}
                        </a>
                      ) : (
                        <span className="text-gray-400 italic">غير محدد</span>
                      )}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {store.username ? <span className="font-mono bg-gray-100 px-2 py-1 rounded">@{store.username}</span> : <span className="text-gray-400 italic">غير محدد</span>}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm">{getConnectionStatus(store.connected)}</td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{formatDate(store.createdAt)}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="bg-blue-50 p-4 rounded-lg border border-blue-200">
          <div className="flex items-center">
            <div className="text-2xl mr-3">📊</div>
            <div>
              <p className="text-sm font-medium text-blue-600">إجمالي المتاجر</p>
              <p className="text-2xl font-bold text-blue-900">{stores.length}</p>
            </div>
          </div>
        </div>
        <div className="bg-green-50 p-4 rounded-lg border border-green-200">
          <div className="flex items-center">
            <div className="text-2xl mr-3">✅</div>
            <div>
              <p className="text-sm font-medium text-green-600">متاجر متصلة</p>
              <p className="text-2xl font-bold text-green-900">{stores.filter((s) => s.connected).length}</p>
            </div>
          </div>
        </div>
        <div className="bg-red-50 p-4 rounded-lg border border-red-200">
          <div className="flex items-center">
            <div className="text-2xl mr-3">❌</div>
            <div>
              <p className="text-sm font-medium text-red-600">متاجر غير متصلة</p>
              <p className="text-2xl font-bold text-red-900">{stores.filter((s) => !s.connected).length}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
====[ END FILE: src/components/admin/AdminStores.tsx ]==============================================

====[ START FILE: src/components/admin/tabs/TestNotifyTab.tsx (7.6 KB) ]============================
// src/components/admin/tabs/TestNotifyTab.tsx
import { useMemo, useState } from 'react';

type ChannelName = 'sms' | 'whatsapp' | 'email';

type Attempt = {
  channel: ChannelName;
  ok: boolean;
  id?: string | null;
  error?: string | null;
};

type ApiResult = {
  ok: boolean;
  firstSuccessChannel: ChannelName | null;
  attempts: Attempt[];
  text?: string;
  segments?: number;
  encoding?: 'GSM-7' | 'UCS-2';
  error?: string;
};

export default function TestNotifyTab() {
  const [to, setTo] = useState('');
  const [email, setEmail] = useState('');
  const [url, setUrl] = useState('');
  const [storeName, setStoreName] = useState('متجر ثقة');
  const [customerName, setCustomerName] = useState('عميل');
  const [locale, setLocale] = useState<'ar' | 'en'>('ar');

  // تفعيل/تعطيل القنوات
  const [orderState, setOrderState] = useState({ sms: true, whatsapp: true, email: true });
  const orderArray = useMemo(
    () => (['sms', 'whatsapp', 'email'] as const).filter((c) => orderState[c]),
    [orderState]
  );

  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<ApiResult | null>(null);
  const [error, setError] = useState<string | null>(null);

  async function run() {
    setLoading(true);
    setResult(null);
    setError(null);
    try {
      const res = await fetch('/api/admin/test-notify', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }, // جلسة فقط (كوكيز)
        body: JSON.stringify({
          to,
          email: email || undefined,
          locale,
          url,
          storeName,
          customerName,
          order: orderArray, // مثال: ["sms","whatsapp","email"]
        }),
      });
      const j = (await res.json()) as ApiResult;
      if (!res.ok) throw new Error(j?.error || 'Request failed');
      setResult(j);
    } catch (err: unknown) {
      setError(err instanceof Error ? err.message : String(err));
    } finally {
      setLoading(false);
    }
  }

  return (
    <div dir="rtl" className="p-4 space-y-4">
      <header className="space-y-1">
        <h2 className="text-xl font-semibold">اختبار قنوات الإرسال</h2>
        <p className="text-sm text-muted-foreground">
          يجرّب الإرسال بالتسلسل (SMS ← WhatsApp ← Email) ويُكمّل على كل القنوات حتى لو قناة نجحت.
        </p>
      </header>

      <section className="grid grid-cols-1 md:grid-cols-[220px_1fr] gap-3 items-center bg-white dark:bg-neutral-900 border rounded-2xl p-4">
        <label className="text-sm">رقم الجوال</label>
        <input className={inputCls} value={to} onChange={(e) => setTo(e.target.value)} placeholder="+9665XXXXXXXX" />

        <label className="text-sm">البريد (اختياري)</label>
        <input className={inputCls} value={email} onChange={(e) => setEmail(e.target.value)} placeholder="user@example.com" />

        <label className="text-sm">الرابط المختصر</label>
        <input className={inputCls} value={url} onChange={(e) => setUrl(e.target.value)} placeholder="https://tq.sa/r/AbCd" />

        <label className="text-sm">اسم المتجر</label>
        <input className={inputCls} value={storeName} onChange={(e) => setStoreName(e.target.value)} placeholder="متجر ثقة" />

        <label className="text-sm">اسم العميل</label>
        <input className={inputCls} value={customerName} onChange={(e) => setCustomerName(e.target.value)} placeholder="عميل" />

        <label className="text-sm">اللغة</label>
        <select className={inputCls} value={locale} onChange={(e) => setLocale(e.target.value as 'ar' | 'en')}>
          <option value="ar">العربية</option>
          <option value="en">English</option>
        </select>

        <label className="text-sm">ترتيب/تفعيل القنوات</label>
        <div className="text-sm">
          <label className="inline-flex items-center gap-2 me-4">
            <input
              type="checkbox"
              checked={orderState.sms}
              onChange={(e) => setOrderState((s) => ({ ...s, sms: e.target.checked }))}
            />
            SMS
          </label>
          <label className="inline-flex items-center gap-2 me-4">
            <input
              type="checkbox"
              checked={orderState.whatsapp}
              onChange={(e) => setOrderState((s) => ({ ...s, whatsapp: e.target.checked }))}
            />
            WhatsApp
          </label>
          <label className="inline-flex items-center gap-2">
            <input
              type="checkbox"
              checked={orderState.email}
              onChange={(e) => setOrderState((s) => ({ ...s, email: e.target.checked }))}
            />
            Email
          </label>
          <div className="text-xs text-muted-foreground mt-1">
            الترتيب ثابت: SMS ثم WhatsApp ثم Email — يتم تخطّي القناة غير المفعّلة تلقائيًا.
          </div>
        </div>
      </section>

      <div>
        <button
          onClick={run}
          disabled={loading}
          className="px-4 py-2 rounded-xl border bg-black text-white disabled:bg-neutral-500"
        >
          {loading ? 'جاري الاختبار…' : 'إرسال اختبار'}
        </button>
      </div>

      {error && <p className="text-red-600 text-sm">خطأ: {String(error)}</p>}

      {result && (
        <section className="space-y-3">
          <div className="bg-white dark:bg-neutral-900 border rounded-2xl p-4">
            <h3 className="font-medium mb-2">النتيجة</h3>
            <p>أول قناة نجحت: <b>{result.firstSuccessChannel || 'لا شيء'}</b></p>
            {result.text && <p className="mt-2">النص المُرسل: {result.text}</p>}
            {result.segments && (
              <p className="text-sm text-muted-foreground">تقدير الشرائح: {result.segments} ({result.encoding})</p>
            )}
          </div>

          <div className="bg-white dark:bg-neutral-900 border rounded-2xl p-4">
            <h4 className="font-medium mb-3">تفاصيل المحاولات</h4>
            <div className="grid gap-3">
              {(result.attempts || []).map((a: Attempt, idx: number) => (
                <div
                  key={idx}
                  className={`border rounded-xl p-3 ${a.ok ? 'bg-emerald-50 dark:bg-emerald-900/20' : 'bg-rose-50 dark:bg-rose-900/20'}`}
                >
                  <div><b>القناة:</b> {a.channel}</div>
                  <div><b>الحالة:</b> {a.ok ? 'نجاح ✅' : 'فشل ❌'}</div>
                  {a.id != null && <div><b>معرّف الرسالة:</b> {String(a.id)}</div>}
                  {a.error && <div className="text-rose-600"><b>خطأ:</b> {a.error}</div>}
                </div>
              ))}
            </div>

            <details className="mt-3">
              <summary className="cursor-pointer">الاستجابة كاملة (JSON)</summary>
              <pre className="bg-[#0b1220] text-[#9efb76] p-3 rounded-xl overflow-auto text-xs">
                {JSON.stringify(result, null, 2)}
              </pre>
            </details>
          </div>
        </section>
      )}
    </div>
  );
}

const inputCls =
  'w-full rounded-xl border px-3 py-2 text-sm bg-white dark:bg-neutral-950 border-neutral-200 dark:border-neutral-800 focus:outline-none focus:ring-2 focus:ring-neutral-700';
====[ END FILE: src/components/admin/tabs/TestNotifyTab.tsx ]=======================================

====[ START FILE: src/components/dashboard/Analytics.tsx (38.1 KB) ]================================
'use client';

import { useEffect, useState } from 'react';
import {
  BarChart as ReBarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
  Area,
  AreaChart,
} from 'recharts';
import { auth } from '@/lib/firebase';
import axios from '@/lib/axiosInstance';
import {
  TrendingUp,
  ShoppingCart,
  Star,
  Users,
  Activity,
  Calendar,
  Target,
  Award,
  Zap,
  Eye,
  Heart,
  Sparkles,
} from 'lucide-react';

type AnalyticsData = {
  totalOrders: number;
  totalReviews: number;
  positiveRate: number;
  ordersChart: { month: string; count: number }[];
  reviewsChart: { month: string; positive: number; negative: number }[];
};

const StatCard = ({
  title,
  value,
  icon: Icon,
  color,
  bgColor,
  delay = 0,
  trend,
  subtitle,
  gradient,
}: {
  title: string;
  value: string | number;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  icon: any;
  color: string;
  bgColor: string;
  delay?: number;
  trend?: string;
  subtitle?: string;
  gradient?: string;
}) => (
  <div
    className={`group relative bg-white rounded-3xl border border-gray-200/50 p-8 shadow-xl hover:shadow-2xl transition-all duration-700 transform hover:-translate-y-4 hover:scale-105 cursor-pointer overflow-hidden backdrop-blur-sm`}
    style={{
      animationDelay: `${delay}ms`,
      animation: 'slideInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards',
      opacity: 0,
      transform: 'translateY(50px) rotateX(10deg)',
      perspective: '1000px',
    }}
  >
    {/* Animated Background Orbs */}
    <div className="absolute -top-8 -right-8 w-32 h-32 bg-gradient-to-br from-blue-400/20 to-purple-600/20 rounded-full blur-xl group-hover:scale-150 transition-all duration-1000" />
    <div className="absolute -bottom-8 -left-8 w-24 h-24 bg-gradient-to-tr from-pink-400/20 to-orange-600/20 rounded-full blur-xl group-hover:scale-125 transition-all duration-1000 delay-200" />

    {/* Floating Particles */}
    <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-1000">
      {[...Array(6)].map((_, i) => (
        <div
          key={i}
          className="absolute w-1 h-1 bg-blue-400 rounded-full animate-pulse"
          style={{
            left: `${20 + i * 15}%`,
            top: `${10 + i * 10}%`,
            animationDelay: `${i * 200}ms`,
            animationDuration: '2s',
          }}
        />
      ))}
    </div>

    {/* Glass Morphism Effect */}
    <div className="absolute inset-0 bg-gradient-to-br from-white/10 via-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 backdrop-blur-sm" />

    <div className="relative z-10">
      <div className="flex items-center justify-between mb-6">
        <div
          className={`relative w-16 h-16 ${gradient || bgColor} rounded-2xl flex items-center justify-center shadow-2xl group-hover:shadow-3xl transition-all duration-500 group-hover:rotate-12 group-hover:scale-110 transform-gpu`}
        >
          {/* Icon Glow Effect */}
          <div className="absolute inset-0 bg-gradient-to-br from-white/20 to-transparent rounded-2xl" />
          <Icon className={`w-8 h-8 ${color} relative z-10 group-hover:scale-110 transition-transform duration-300`} />

          {/* Pulsing Ring */}
          <div className="absolute inset-0 rounded-2xl border-2 border-white/30 group-hover:scale-125 group-hover:opacity-0 transition-all duration-500" />
        </div>

        {trend && (
          <div className="flex items-center gap-2 px-3 py-1.5 bg-emerald-50 text-emerald-700 rounded-full border border-emerald-200 group-hover:scale-105 transition-transform duration-300">
            <TrendingUp className="w-4 h-4 animate-bounce" />
            <span className="text-sm font-semibold">{trend}</span>
          </div>
        )}
      </div>

      <div className="space-y-2">
        <h3 className="text-sm font-semibold text-gray-600 group-hover:text-gray-700 transition-colors uppercase tracking-wider">
          {title}
        </h3>
        <p className={`text-4xl font-bold ${color} group-hover:scale-110 transition-all duration-500 origin-right transform-gpu`}>
          {value}
        </p>
        {subtitle && <p className="text-sm text-gray-500 group-hover:text-gray-600 transition-colors font-medium">{subtitle}</p>}
      </div>
    </div>

    {/* Holographic Shine Effect */}
    <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1200 ease-out" />

    {/* 3D Border Effect */}
    <div className="absolute inset-0 rounded-3xl bg-gradient-to-br from-white/20 via-transparent to-black/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
  </div>
);

const ChartCard = ({
  title,
  children,
  delay = 0,
  icon: Icon,
  subtitle,
}: {
  title: string;
  children: React.ReactNode;
  delay?: number;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  icon?: any;
  subtitle?: string;
}) => (
  <div
    className="relative bg-white rounded-3xl border border-gray-200/50 p-8 shadow-2xl hover:shadow-3xl transition-all duration-700 transform hover:-translate-y-2 hover:scale-[1.02] overflow-hidden backdrop-blur-sm group"
    style={{
      animationDelay: `${delay}ms`,
      animation: 'slideInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards',
      opacity: 0,
      transform: 'translateY(50px) rotateX(5deg)',
      perspective: '1000px',
    }}
  >
    {/* Animated Background */}
    <div className="absolute inset-0 bg-gradient-to-br from-blue-50/80 via-purple-50/40 to-pink-50/60 opacity-0 group-hover:opacity-100 transition-opacity duration-700" />

    {/* Floating Orbs */}
    <div className="absolute -top-12 -right-12 w-40 h-40 bg-gradient-to-br from-blue-400/10 to-purple-600/10 rounded-full blur-2xl group-hover:scale-150 transition-all duration-1000" />
    <div className="absolute -bottom-12 -left-12 w-32 h-32 bg-gradient-to-tr from-pink-400/10 to-orange-600/10 rounded-full blur-2xl group-hover:scale-125 transition-all duration-1000 delay-300" />

    <div className="relative z-10">
      <div className="flex items-center gap-4 mb-8">
        {Icon && (
          <div className="relative w-14 h-14 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-2xl group-hover:shadow-3xl transition-all duration-500 group-hover:rotate-6 group-hover:scale-110 transform-gpu">
            {/* Icon Glow */}
            <div className="absolute inset-0 bg-gradient-to-br from-white/20 to-transparent rounded-2xl" />
            <Icon className="w-7 h-7 text-white relative z-10 group-hover:scale-110 transition-transform duration-300" />

            {/* Pulsing Ring */}
            <div className="absolute inset-0 rounded-2xl border-2 border-white/30 group-hover:scale-125 group-hover:opacity-0 transition-all duration-500" />
          </div>
        )}
        <div className="flex-1">
          <h2 className="text-2xl font-bold text-gray-900 group-hover:text-gray-800 transition-colors">{title}</h2>
          {subtitle && <p className="text-sm text-gray-600 mt-1">{subtitle}</p>}
        </div>
      </div>

      <div className="group-hover:scale-[1.01] transition-transform duration-500 transform-gpu">{children}</div>
    </div>

    {/* Holographic Border */}
    <div className="absolute inset-0 rounded-3xl bg-gradient-to-r from-blue-500/20 via-purple-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-700 blur-sm" />
  </div>
);

const MetricCard = ({
  label,
  value,
  icon: Icon,
  color,
  delay = 0,
}: {
  label: string;
  value: string | number;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  icon: any;
  color: string;
  delay?: number;
}) => (
  <div
    className="group relative bg-white/80 backdrop-blur-sm rounded-2xl border border-gray-200/50 p-6 shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105 overflow-hidden"
    style={{
      animationDelay: `${delay}ms`,
      animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards',
      opacity: 0,
      transform: 'translateY(30px)',
    }}
  >
    {/* Background Gradient */}
    <div className="absolute inset-0 bg-gradient-to-br from-gray-50/50 to-white/50 group-hover:from-blue-50/50 group-hover:to-purple-50/50 transition-all duration-500" />

    <div className="relative z-10 flex items-center justify-between">
      <div className="flex-1">
        <p className="text-sm font-medium text-gray-600 mb-1">{label}</p>
        <p className={`text-2xl font-bold ${color} group-hover:scale-105 transition-transform duration-300 origin-left`}>{value}</p>
      </div>
      <div
        className={`w-12 h-12 bg-gradient-to-br ${
          color.includes('emerald')
            ? 'from-emerald-400 to-emerald-600'
            : color.includes('blue')
            ? 'from-blue-400 to-blue-600'
            : 'from-purple-400 to-purple-600'
        } rounded-xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300 group-hover:rotate-12 group-hover:scale-110`}
      >
        <Icon className="w-6 h-6 text-white" />
      </div>
    </div>
  </div>
);

export default function DashboardAnalytics() {
  const [data, setData] = useState<AnalyticsData | null>(null);
  const [loading, setLoading] = useState(true);

  // Calculate dynamic metrics from real data
  const calculateMetrics = (analyticsData: AnalyticsData) => {
    const { totalOrders, totalReviews, positiveRate, ordersChart, reviewsChart } = analyticsData;

    // growth trends
    const prevOrders = ordersChart.length >= 2 ? ordersChart[ordersChart.length - 2]?.count || 0 : 0;
    const currOrders = ordersChart.length >= 1 ? ordersChart[ordersChart.length - 1]?.count || 0 : 0;
    const ordersGrowth = ((currOrders - prevOrders) / (prevOrders || 1)) * 100;

    const lastTotal =
      (reviewsChart[reviewsChart.length - 2]?.positive ?? 0) + (reviewsChart[reviewsChart.length - 2]?.negative ?? 0);
    const currTotal =
      (reviewsChart[reviewsChart.length - 1]?.positive ?? 0) + (reviewsChart[reviewsChart.length - 1]?.negative ?? 0);
    const reviewsGrowth = ((currTotal - lastTotal) / (lastTotal || 1)) * 100;

    const conversionRate = totalOrders > 0 ? (totalReviews / totalOrders) * 100 : 0;

    const avgOrdersPerMonth =
      ordersChart.length > 0 ? ordersChart.reduce((sum, item) => sum + item.count, 0) / ordersChart.length : 0;

    const avgReviewsPerMonth =
      reviewsChart.length > 0
        ? reviewsChart.reduce((sum, item) => sum + item.positive + item.negative, 0) / reviewsChart.length
        : 0;

    const bestMonth =
      ordersChart.length > 0
        ? ordersChart.reduce((max, item) => (item.count > max.count ? item : max), ordersChart[0])
        : null;

    const satisfactionScore = positiveRate / 20; // 100% -> 5.0

    const loyaltyRate = positiveRate > 80 ? 95 + (positiveRate - 80) / 4 : positiveRate * 1.2;

    const overallRating =
      positiveRate >= 90 ? 'ممتاز' : positiveRate >= 80 ? 'جيد جداً' : positiveRate >= 70 ? 'جيد' : positiveRate >= 60 ? 'مقبول' : 'يحتاج تحسين';

    return {
      ordersGrowth: Math.round(ordersGrowth * 10) / 10,
      reviewsGrowth: Math.round(reviewsGrowth * 10) / 10,
      conversionRate: Math.round(conversionRate * 10) / 10,
      avgOrdersPerMonth: Math.round(avgOrdersPerMonth),
      avgReviewsPerMonth: Math.round(avgReviewsPerMonth),
      bestMonth: bestMonth?.month || '—',
      satisfactionScore: Math.round(satisfactionScore * 10) / 10,
      loyaltyRate: Math.round(loyaltyRate * 10) / 10,
      overallRating,
      responseRate: Math.round(conversionRate * 10) / 10,
    };
  };

  const metrics = data ? calculateMetrics(data) : null;

  useEffect(() => {
    let cancelled = false;

    const fetchData = async () => {
      try {
        // حاول نجيب توكن المستخدم لو متاح
        const idToken = await auth.currentUser?.getIdToken().catch(() => undefined);
        const headers: Record<string, string> = idToken ? { Authorization: `Bearer ${idToken}` } : {};

        // 1) axios (بالهيدر لو عندنا توكن)
        const res = await axios.get('/api/store/dashboard', { headers });
        if (!cancelled) setData(res.data);
      } catch (err) {
        console.error('Dashboard API error (axios):', err);

        try {
          // 2) fetch fallback + نفس الهيدر
          const absolute =
            typeof window !== 'undefined'
              ? new URL('/api/store/dashboard', window.location.origin).toString()
              : '/api/store/dashboard';

          const idToken2 = await auth.currentUser?.getIdToken().catch(() => undefined);
          const headers2: Record<string, string> = idToken2 ? { Authorization: `Bearer ${idToken2}` } : {};

          const f = await fetch(absolute, { headers: headers2 });
          if (!f.ok) throw new Error(`fetch status ${f.status}`);
          const json = (await f.json()) as AnalyticsData;

          if (!cancelled) setData(json);
        } catch (e) {
          console.error('Dashboard API error (fetch fallback):', e);
          if (!cancelled) setData(null);
        }
      } finally {
        if (!cancelled) setLoading(false);
      }
    };

    fetchData();
    return () => {
      cancelled = true;
    };
  }, []);

  if (loading) {
    return (
      <div className="min-h-[70vh] flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-purple-50">
        <div className="text-center space-y-8">
          {/* 3D Loading Animation */}
          <div className="relative">
            <div className="w-20 h-20 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin shadow-2xl" />
            <div
              className="absolute inset-0 w-20 h-20 border-4 border-transparent border-r-purple-600 rounded-full animate-spin shadow-2xl"
              style={{ animationDirection: 'reverse', animationDuration: '1.5s' }}
            />
            <div
              className="absolute inset-2 w-16 h-16 border-2 border-transparent border-b-pink-500 rounded-full animate-spin"
              style={{ animationDuration: '2s' }}
            />

            {/* Pulsing Center */}
            <div className="absolute inset-6 w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full animate-pulse shadow-lg" />
          </div>

          <div className="space-y-3">
            <p className="text-2xl font-bold text-gray-900 animate-pulse">جاري تحميل الإحصائيات</p>
            <p className="text-sm text-gray-600">تحليل البيانات وإعداد التقارير...</p>

            {/* Loading Progress Dots */}
            <div className="flex items-center justify-center gap-2 mt-4">
              {[...Array(3)].map((_, i) => (
                <div key={i} className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{ animationDelay: `${i * 200}ms` }} />
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (!data) {
    return (
      <div className="min-h-[50vh] flex items-center justify-center bg-gradient-to-br from-red-50 via-white to-orange-50">
        <div className="bg-white rounded-3xl border border-red-200/50 p-12 shadow-2xl text-center max-w-md transform hover:scale-105 transition-transform duration-300">
          <div className="w-20 h-20 bg-gradient-to-br from-red-400 to-red-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-2xl">
            <Activity className="w-10 h-10 text-white animate-pulse" />
          </div>
          <h3 className="text-2xl font-bold text-gray-900 mb-3">تعذر تحميل البيانات</h3>
          <p className="text-gray-600 mb-6">حدث خطأ أثناء جلب الإحصائيات</p>
          <button
            onClick={() => window.location.reload()}
            className="px-8 py-3 bg-gradient-to-r from-red-500 to-red-600 text-white rounded-xl hover:from-red-600 hover:to-red-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105"
          >
            إعادة المحاولة
          </button>
        </div>
      </div>
    );
  }

  const pieData = [
    { name: 'إيجابية', value: data.positiveRate, color: '#10b981' },
    { name: 'سلبية', value: 100 - data.positiveRate, color: '#ef4444' },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-purple-50/30 p-8 space-y-12">
      {/* Animated Header */}
      <div className="text-center space-y-6 mb-16">
        <div
          className="inline-flex items-center gap-4 px-8 py-4 bg-white/80 backdrop-blur-sm rounded-full shadow-2xl border border-gray-200/50 hover:scale-105 transition-all duration-500"
          style={{
            animation: 'slideInDown 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards',
            opacity: 0,
            transform: 'translateY(-50px)',
          }}
        >
          <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center shadow-lg">
            <Sparkles className="w-6 h-6 text-white animate-pulse" />
          </div>
          <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
            لوحة التحكم التحليلية المتقدمة
          </h1>
        </div>
        <p className="text-gray-600 max-w-3xl mx-auto text-lg leading-relaxed">
          تتبع أداء متجرك وتحليل بيانات العملاء والطلبات بتقنيات متقدمة وواجهة تفاعلية ثلاثية الأبعاد
        </p>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        <StatCard
          title="إجمالي الطلبات"
          value={data.totalOrders.toLocaleString()}
          icon={ShoppingCart}
          color="text-emerald-600"
          bgColor="bg-emerald-50"
          gradient="bg-gradient-to-br from-emerald-400 to-emerald-600"
          delay={0}
          trend={metrics?.ordersGrowth ? `${metrics.ordersGrowth > 0 ? '+' : ''}${metrics.ordersGrowth}%` : undefined}
          subtitle="نمو مستمر هذا الشهر"
        />
        <StatCard
          title="إجمالي التقييمات"
          value={data.totalReviews.toLocaleString()}
          icon={Star}
          color="text-amber-600"
          bgColor="bg-amber-50"
          gradient="bg-gradient-to-br from-amber-400 to-amber-600"
          delay={100}
          trend={metrics?.reviewsGrowth ? `${metrics.reviewsGrowth > 0 ? '+' : ''}${metrics.reviewsGrowth}%` : undefined}
          subtitle="معدل استجابة ممتاز"
        />
        <StatCard
          title="نسبة الإيجابية"
          value={`${data.positiveRate}%`}
          icon={Heart}
          color="text-rose-600"
          bgColor="bg-rose-50"
          gradient="bg-gradient-to-br from-rose-400 to-rose-600"
          delay={200}
          trend={data.positiveRate >= 80 ? `+${Math.round((data.positiveRate - 75) * 0.5)}%` : undefined}
          subtitle="رضا العملاء متزايد"
        />
        <StatCard
          title="معدل التحويل"
          value={`${metrics?.conversionRate || 0}%`}
          icon={Target}
          color="text-purple-600"
          bgColor="bg-purple-50"
          gradient="bg-gradient-to-br from-purple-400 to-purple-600"
          delay={300}
          trend={metrics?.conversionRate && metrics.conversionRate > 50 ? `+${Math.round((metrics.conversionRate - 50) * 0.2)}%` : undefined}
          subtitle="أداء استثنائي"
        />
      </div>

      {/* Charts Grid */}
      <div className="grid grid-cols-1 xl:grid-cols-2 gap-10">
        {/* Orders AreaChart */}
        <ChartCard title="تحليل الطلبات الشهرية" subtitle="نمو وتطور المبيعات عبر الزمن" delay={400} icon={Eye}>
          <div className="h-96 group-hover:scale-[1.02] transition-transform duration-700 transform-gpu">
            <ResponsiveContainer width="100%" height="100%">
              <AreaChart data={data.ordersChart} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>
                <defs>
                  <linearGradient id="orderAreaGradient" x1="0" y1="0" x2="0" y2="1">
                    <stop offset="0%" stopColor="#3b82f6" stopOpacity={0.8} />
                    <stop offset="50%" stopColor="#8b5cf6" stopOpacity={0.4} />
                    <stop offset="100%" stopColor="#ec4899" stopOpacity={0.1} />
                  </linearGradient>
                  <filter id="glow">
                    <feGaussianBlur stdDeviation="3" result="coloredBlur" />
                    <feMerge>
                      <feMergeNode in="coloredBlur" />
                      <feMergeNode in="SourceGraphic" />
                    </feMerge>
                  </filter>
                </defs>
                <XAxis dataKey="month" axisLine={false} tickLine={false} tick={{ fontSize: 12, fill: '#6b7280', fontWeight: 500 }} />
                <YAxis axisLine={false} tickLine={false} tick={{ fontSize: 12, fill: '#6b7280', fontWeight: 500 }} />
                <Tooltip
                  contentStyle={{
                    backgroundColor: 'rgba(255, 255, 255, 0.95)',
                    border: 'none',
                    borderRadius: '16px',
                    boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
                    backdropFilter: 'blur(10px)',
                  }}
                />
                <Area type="monotone" dataKey="count" stroke="#3b82f6" strokeWidth={3} fill="url(#orderAreaGradient)" filter="url(#glow)" className="hover:opacity-80 transition-opacity duration-300" />
              </AreaChart>
            </ResponsiveContainer>
          </div>
        </ChartCard>

        {/* Reviews Pie */}
        <ChartCard title="توزيع التقييمات التفاعلي" subtitle="نسب الرضا والتحسينات المطلوبة" delay={500} icon={Eye}>
          <div className="h-96 flex items-center justify-center">
            <div className="relative group-hover:scale-105 transition-transform duration-700 transform-gpu">
              <ResponsiveContainer width={350} height={350}>
                <PieChart>
                  <defs>
                    <linearGradient id="positiveGradient" x1="0" y1="0" x2="1" y2="1">
                      <stop offset="0%" stopColor="#10b981" />
                      <stop offset="50%" stopColor="#059669" />
                      <stop offset="100%" stopColor="#047857" />
                    </linearGradient>
                    <linearGradient id="negativeGradient" x1="0" y1="0" x2="1" y2="1">
                      <stop offset="0%" stopColor="#ef4444" />
                      <stop offset="50%" stopColor="#dc2626" />
                      <stop offset="100%" stopColor="#b91c1c" />
                    </linearGradient>
                    <filter id="pieGlow">
                      <feGaussianBlur stdDeviation="4" result="coloredBlur" />
                      <feMerge>
                        <feMergeNode in="coloredBlur" />
                        <feMergeNode in="SourceGraphic" />
                      </feMerge>
                    </filter>
                  </defs>
                  <Pie data={pieData} cx={175} cy={175} innerRadius={80} outerRadius={140} paddingAngle={8} dataKey="value" className="drop-shadow-2xl" filter="url(#pieGlow)">
                    {pieData.map((_, index) => (
                      <Cell
                        key={`cell-${index}`}
                        fill={index === 0 ? 'url(#positiveGradient)' : 'url(#negativeGradient)'}
                        className="hover:opacity-80 transition-all duration-300 cursor-pointer"
                        style={{ filter: 'drop-shadow(0 10px 20px rgba(0,0,0,0.1))' }}
                      />
                    ))}
                  </Pie>
                  <Tooltip
                    contentStyle={{
                      backgroundColor: 'rgba(255, 255, 255, 0.95)',
                      border: 'none',
                      borderRadius: '16px',
                      boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
                      backdropFilter: 'blur(10px)',
                    }}
                  />
                </PieChart>
              </ResponsiveContainer>

              {/* Center badge */}
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="text-center bg-white/90 backdrop-blur-sm rounded-full w-24 h-24 flex flex-col items-center justify-center shadow-2xl border border-gray-200/50">
                  <p className="text-3xl font-bold bg-gradient-to-r from-emerald-600 to-emerald-700 bg-clip-text text-transparent">{data.positiveRate}%</p>
                  <p className="text-xs text-gray-600 font-medium">إيجابية</p>
                </div>
              </div>
            </div>
          </div>
        </ChartCard>
      </div>

      {/* Reviews Trend BarChart */}
      <ChartCard title="اتجاهات التقييمات المتقدمة" subtitle="تحليل شامل للتقييمات الإيجابية والسلبية" delay={600} icon={TrendingUp}>
        <div className="h-96 group-hover:scale-[1.01] transition-transform duration-700 transform-gpu">
          <ResponsiveContainer width="100%" height="100%">
            <ReBarChart data={data.reviewsChart} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>
              <defs>
                <linearGradient id="positiveBarGradient" x1="0" y1="0" x2="0" y2="1">
                  <stop offset="0%" stopColor="#3b82f6" stopOpacity={1} />
                  <stop offset="50%" stopColor="#8b5cf6" stopOpacity={0.8} />
                  <stop offset="100%" stopColor="#3b82f6" stopOpacity={0.6} />
                </linearGradient>
                <linearGradient id="negativeBarGradient" x1="0" y1="0" x2="0" y2="1">
                  <stop offset="0%" stopColor="#ef4444" stopOpacity={1} />
                  <stop offset="50%" stopColor="#f97316" stopOpacity={0.8} />
                  <stop offset="100%" stopColor="#ef4444" stopOpacity={0.6} />
                </linearGradient>
                <filter id="barGlow">
                  <feGaussianBlur stdDeviation="2" result="coloredBlur" />
                  <feMerge>
                    <feMergeNode in="coloredBlur" />
                    <feMergeNode in="SourceGraphic" />
                  </feMerge>
                </filter>
              </defs>
              <XAxis dataKey="month" axisLine={false} tickLine={false} tick={{ fontSize: 12, fill: '#6b7280', fontWeight: 500 }} />
              <YAxis axisLine={false} tickLine={false} tick={{ fontSize: 12, fill: '#6b7280', fontWeight: 500 }} />
              <Tooltip
                contentStyle={{
                  backgroundColor: 'rgba(255, 255, 255, 0.95)',
                  border: 'none',
                  borderRadius: '16px',
                  boxShadow: '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
                  backdropFilter: 'blur(10px)',
                }}
              />
              <Bar dataKey="positive" fill="url(#positiveBarGradient)" radius={[8, 8, 0, 0]} filter="url(#barGlow)" className="hover:opacity-80 transition-opacity duration-300" />
              <Bar dataKey="negative" fill="url(#negativeBarGradient)" radius={[8, 8, 0, 0]} filter="url(#barGlow)" className="hover:opacity-80 transition-opacity duration-300" />
            </ReBarChart>
          </ResponsiveContainer>
        </div>
      </ChartCard>

      {/* Performance metrics */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <div
          className="relative bg-white/80 backdrop-blur-sm rounded-3xl border border-gray-200/50 p-8 shadow-2xl hover:shadow-3xl transition-all duration-700 transform hover:-translate-y-2 overflow-hidden group"
          style={{
            animationDelay: '700ms',
            animation: 'slideInLeft 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards',
            opacity: 0,
            transform: 'translateX(-50px)',
          }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-blue-50/50 via-transparent to-purple-50/50 opacity-0 group-hover:opacity-100 transition-opacity duration-700" />
          <div className="relative z-10">
            <div className="flex items-center gap-4 mb-8">
              <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center shadow-2xl group-hover:rotate-6 group-hover:scale-110 transition-all duration-500">
                <Calendar className="w-8 h-8 text-white" />
              </div>
              <div>
                <h3 className="text-2xl font-bold text-gray-900">الأداء الشهري</h3>
                <p className="text-gray-600">متوسط الطلبات والتقييمات</p>
              </div>
            </div>
            <div className="space-y-4">
              <MetricCard label="متوسط الطلبات" value={metrics?.avgOrdersPerMonth || 0} icon={ShoppingCart} color="text-emerald-600" delay={800} />
              <MetricCard label="متوسط التقييمات" value={metrics?.avgReviewsPerMonth || 0} icon={Star} color="text-amber-600" delay={900} />
            </div>
          </div>
        </div>

        <div
          className="relative bg-white/80 backdrop-blur-sm rounded-3xl border border-gray-200/50 p-8 shadow-2xl hover:shadow-3xl transition-all duration-700 transform hover:-translate-y-2 overflow-hidden group"
          style={{
            animationDelay: '800ms',
            animation: 'slideInRight 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards',
            opacity: 0,
            transform: 'translateX(50px)',
          }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-purple-50/50 via-transparent to-pink-50/50 opacity-0 group-hover:opacity-100 transition-opacity duration-700" />
          <div className="relative z-10">
            <div className="flex items-center gap-4 mb-8">
              <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-2xl group-hover:rotate-6 group-hover:scale-110 transition-all duration-500">
                <Users className="w-8 h-8 text-white" />
              </div>
              <div>
                <h3 className="text-2xl font-bold text-gray-900">رضا العملاء</h3>
                <p className="text-gray-600">مؤشرات الجودة والأداء</p>
              </div>
            </div>

            <div className="space-y-4">
              <MetricCard label="معدل الاستجابة" value={`${metrics?.responseRate || 0}%`} icon={Zap} color="text-blue-600" delay={1000} />
              <div className="bg-white/60 backdrop-blur-sm rounded-2xl border border-gray-200/50 p-6 shadow-lg hover:shadow-xl transition-all duration-500 transform hover:scale-105">
                <div className="flex items-center justify-between">
                  <span className="text-sm font-semibold text-gray-700">درجة الرضا</span>
                  <div className="flex items-center gap-3">
                    <div className="flex">
                      {[...Array(5)].map((_, i) => (
                        <Star
                          key={i}
                          className={`w-5 h-5 transition-all duration-300 ${
                            i < Math.round(metrics?.satisfactionScore || 0) ? 'text-yellow-400 fill-current hover:scale-110' : 'text-gray-300'
                          }`}
                          style={{ animationDelay: `${i * 100}ms` }}
                        />
                      ))}
                    </div>
                    <span className="text-lg font-bold bg-gradient-to-r from-yellow-500 to-orange-500 bg-clip-text text-transparent">
                      {(metrics?.satisfactionScore || 0).toFixed(1)}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Additional Insights */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div
          className="bg-gradient-to-br from-emerald-500 to-emerald-600 rounded-2xl p-6 text-white shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105 group overflow-hidden"
          style={{ animationDelay: '900ms', animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards', opacity: 0, transform: 'translateY(30px)' }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-white/10 to-transparent group-hover:from-white/20 transition-all duration-500" />
          <div className="relative z-10">
            <Award className="w-8 h-8 mb-3 group-hover:rotate-12 group-hover:scale-110 transition-all duration-300" />
            <p className="text-sm opacity-90 mb-1">أفضل شهر</p>
            <p className="text-xl font-bold">{metrics?.bestMonth || '—'}</p>
          </div>
        </div>

        <div
          className="bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl p-6 text-white shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105 group overflow-hidden"
          style={{ animationDelay: '1000ms', animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards', opacity: 0, transform: 'translateY(30px)' }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-white/10 to-transparent group-hover:from-white/20 transition-all duration-500" />
          <div className="relative z-10">
            <TrendingUp className="w-8 h-8 mb-3 group-hover:rotate-12 group-hover:scale-110 transition-all duration-300" />
            <p className="text-sm opacity-90 mb-1">نمو متوقع</p>
            <p className="text-xl font-bold">
              {metrics?.ordersGrowth ? `${metrics.ordersGrowth > 0 ? '+' : ''}${(metrics.ordersGrowth * 1.2).toFixed(1)}%` : '+0.0%'}
            </p>
          </div>
        </div>

        <div
          className="bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl p-6 text-white shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105 group overflow-hidden"
          style={{ animationDelay: '1100ms', animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards', opacity: 0, transform: 'translateY(30px)' }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-white/10 to-transparent group-hover:from-white/20 transition-all duration-500" />
          <div className="relative z-10">
            <Heart className="w-8 h-8 mb-3 group-hover:rotate-12 group-hover:scale-110 transition-all duration-300" />
            <p className="text-sm opacity-90 mb-1">ولاء العملاء</p>
            <p className="text-xl font-bold">{metrics?.loyaltyRate.toFixed(1) || '0.0'}%</p>
          </div>
        </div>

        <div
          className="bg-gradient-to-br from-pink-500 to-pink-600 rounded-2xl p-6 text-white shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-2 hover:scale-105 group overflow-hidden"
          style={{ animationDelay: '1200ms', animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards', opacity: 0, transform: 'translateY(30px)' }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-white/10 to-transparent group-hover:from-white/20 transition-all duration-500" />
          <div className="relative z-10">
            <Sparkles className="w-8 h-8 mb-3 group-hover:rotate-12 group-hover:scale-110 transition-all duration-300" />
            <p className="text-sm opacity-90 mb-1">تقييم عام</p>
            <p className="text-xl font-bold">{metrics?.overallRating || 'غير متاح'}</p>
          </div>
        </div>
      </div>

      <style jsx>{`
        @keyframes slideInUp {
          from {
            opacity: 0;
            transform: translateY(50px) rotateX(10deg);
          }
          to {
            opacity: 1;
            transform: translateY(0) rotateX(0deg);
          }
        }

        @keyframes slideInDown {
          from {
            opacity: 0;
            transform: translateY(-50px) rotateX(-10deg);
          }
          to {
            opacity: 1;
            transform: translateY(0) rotateX(0deg);
          }
        }

        @keyframes slideInLeft {
          from {
            opacity: 0;
            transform: translateX(-50px) rotateY(10deg);
          }
          to {
            opacity: 1;
            transform: translateX(0) rotateY(0deg);
          }
        }

        @keyframes slideInRight {
          from {
            opacity: 0;
            transform: translateX(50px) rotateY(-10deg);
          }
          to {
            opacity: 1;
            transform: translateX(0) rotateY(0deg);
          }
        }

        @keyframes float {
          0%,
          100% {
            transform: translateY(0px) rotate(0deg);
          }
          50% {
            transform: translateY(-20px) rotate(5deg);
          }
        }

        @keyframes pulse-glow {
          0%,
          100% {
            box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
          }
          50% {
            box-shadow: 0 0 40px rgba(59, 130, 246, 0.6);
          }
        }

        .animate-float {
          animation: float 6s ease-in-out infinite;
        }

        .animate-pulse-glow {
          animation: pulse-glow 2s ease-in-out infinite;
        }
      `}</style>
    </div>
  );
}
====[ END FILE: src/components/dashboard/Analytics.tsx ]============================================

====[ START FILE: src/components/dashboard/OrdersTab.tsx (16.9 KB) ]================================
'use client';

import { useEffect, useState, useRef } from 'react';
import { Upload, Plus, Download, FileText, Send, Check, X, AlertCircle } from 'lucide-react';
import axios from '@/lib/axiosInstance';
import { isAxiosError } from 'axios';

type Order = {
  id: string;                // Document ID في كولكشن orders
  orderId: string;           // رقم الطلب الظاهر للمستخدم (قد يساوي id)
  productId?: string;
  productName?: string;
  customerName?: string;
  phone?: string;
  email?: string;
  createdAt?: number | string;
  inviteStatus?: 'sent' | 'not_sent' | 'failed';
  reviewSent?: boolean;
};

export default function OrdersTab() {
  const [orders, setOrders] = useState<Order[]>([]);
  const [loading, setLoading] = useState(true);
  const [sendingId, setSendingId] = useState<string | null>(null);
  const [error, setError] = useState('');
  const [csvUploading, setCsvUploading] = useState(false);
  const [adding, setAdding] = useState(false);
  const fileRef = useRef<HTMLInputElement>(null);

  useEffect(() => { fetchOrders(); }, []);

  const fetchOrders = async () => {
    try {
      const res = await axios.get('/api/orders');
      const list: Order[] = res.data?.items ?? res.data?.orders ?? [];
      setOrders((Array.isArray(list) ? list : []).sort(
        (a, b) => Number(b.createdAt || 0) - Number(a.createdAt || 0)
      ));
    } catch (err: unknown) {
      console.error('Error loading orders', err);
      setError('حدث خطأ أثناء تحميل الطلبات');
    } finally {
      setLoading(false);
    }
  };

  const sendReviewLink = async (id: string) => {
    setSendingId(id);
    try {
      // أرسل document id كما يتوقع الإندبوينت
      const res = await axios.post('/api/orders/send-review?debug=1', { id });
      await fetchOrders();
      // يمكن إظهار الرابط المرجّع من السيرفر إن أردت
      if (res?.data?.link) {
        alert(`تم إرسال رابط التقييم ✅\n${res.data.link}`);
      } else {
        alert('تم إرسال رابط التقييم ✅');
      }
    } catch (err: unknown) {
      if (isAxiosError(err)) {
        const status = err.response?.status;
        const data = err.response?.data;
        console.error('send-review error:', status, data);
        alert(`فشل في إرسال رابط التقييم ❌\n${JSON.stringify(data ?? { status }, null, 2)}`);
      } else {
        alert('فشل في إرسال رابط التقييم ❌');
      }
    } finally {
      setSendingId(null);
    }
  };

  const importCsv = async (file: File) => {
    const fd = new FormData();
    fd.append('file', file);
    setCsvUploading(true);
    try {
      await axios.post('/api/orders/import', fd);
      await fetchOrders();
    } finally {
      setCsvUploading(false);
    }
  };

  const addManual = async () => {
    const orderId = prompt('رقم الطلب؟');
    if (!orderId?.trim()) return;
    setAdding(true);
    try {
      await axios.post('/api/orders/add', { orderId });
      await fetchOrders();
    } finally {
      setAdding(false);
    }
  };

  const fmtDate = (v?: number | string) => {
    if (v == null) return '—';
    const n = typeof v === 'string' ? Number(v) : v;
    const d = Number.isFinite(n) ? new Date(Number(n)) : new Date(v as string);
    return isNaN(d.getTime()) ? '—' : d.toLocaleString();
  };

  const getStatusBadge = (order: Order) => {
    const sent = order.reviewSent ?? (order.inviteStatus === 'sent');
    
    if (sent) {
      return (
        <span className="inline-flex items-center gap-1.5 px-3 py-1.5 text-xs font-medium bg-emerald-50 text-emerald-700 rounded-full border border-emerald-200">
          <Check className="w-3 h-3" />
          تم الإرسال
        </span>
      );
    } else if (order.inviteStatus === 'failed') {
      return (
        <span className="inline-flex items-center gap-1.5 px-3 py-1.5 text-xs font-medium bg-red-50 text-red-700 rounded-full border border-red-200">
          <X className="w-3 h-3" />
          فشل
        </span>
      );
    } else {
      return (
        <span className="inline-flex items-center gap-1.5 px-3 py-1.5 text-xs font-medium bg-gray-50 text-gray-600 rounded-full border border-gray-200">
          <AlertCircle className="w-3 h-3" />
          لم يُرسل
        </span>
      );
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center py-12">
        <div className="text-center space-y-3">
          <div className="w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto"></div>
          <p className="text-gray-600 font-medium">جاري تحميل الطلبات...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-xl p-6 text-center">
        <AlertCircle className="w-8 h-8 text-red-500 mx-auto mb-3" />
        <p className="text-red-700 font-medium">{error}</p>
        <button 
          onClick={fetchOrders}
          className="mt-4 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
        >
          المحاولة مرة أخرى
        </button>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header Actions */}
      <div className="bg-white rounded-xl border border-gray-200 p-6 shadow-sm">
        <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4">
          <div>
            <h3 className="text-lg font-semibold text-gray-900 mb-1">إدارة الطلبات</h3>
            <p className="text-sm text-gray-600">استيراد وإدارة طلبات العملاء</p>
          </div>
          
          <div className="flex flex-wrap items-center gap-3">
            <button
              onClick={() => fileRef.current?.click()}
              className="inline-flex items-center gap-2 px-4 py-2.5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:ring-4 focus:ring-blue-100 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-sm"
              disabled={csvUploading}
            >
              <Upload className="w-4 h-4" />
              {csvUploading ? 'جاري الاستيراد…' : 'استيراد CSV'}
            </button>
            
            <input
              ref={fileRef}
              type="file"
              accept=".csv,text/csv"
              hidden
              onChange={async (e) => {
                const f = e.target.files?.[0];
                if (f) await importCsv(f);
                if (fileRef.current) fileRef.current.value = '';
              }}
            />

            <button
              onClick={addManual}
              className="inline-flex items-center gap-2 px-4 py-2.5 bg-gray-600 text-white rounded-lg hover:bg-gray-700 focus:ring-4 focus:ring-gray-100 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-sm"
              disabled={adding}
            >
              <Plus className="w-4 h-4" />
              {adding ? 'جاري الإضافة…' : 'إضافة طلب'}
            </button>

            <div className="flex items-center gap-2 border-r border-gray-200 pr-3 mr-1">
              <a href="/api/reviews/export-csv" target="_blank" rel="noreferrer">
                <button className="inline-flex items-center gap-2 px-4 py-2.5 bg-white text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-4 focus:ring-gray-100 transition-all duration-200 shadow-sm">
                  <Download className="w-4 h-4" />
                  CSV
                </button>
              </a>
              <a href="/api/reviews/export-pdf" target="_blank" rel="noreferrer">
                <button className="inline-flex items-center gap-2 px-4 py-2.5 bg-white text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-4 focus:ring-gray-100 transition-all duration-200 shadow-sm">
                  <FileText className="w-4 h-4" />
                  PDF
                </button>
              </a>
            </div>
          </div>
        </div>
      </div>

      {/* Orders Table */}
      <div className="bg-white rounded-xl border border-gray-200 shadow-sm overflow-hidden">
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead>
              <tr className="bg-gray-50 border-b border-gray-200">
                <th className="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  رقم الطلب
                </th>
                <th className="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  المنتج
                </th>
                <th className="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  العميل
                </th>
                <th className="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  الهاتف
                </th>
                <th className="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  الإيميل
                </th>
                <th className="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  التاريخ
                </th>
                <th className="px-6 py-4 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  الحالة
                </th>
                <th className="px-6 py-4 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider">
                  إجراء
                </th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-200">
              {orders.length === 0 ? (
                <tr>
                  <td className="px-6 py-12 text-center text-gray-500" colSpan={8}>
                    <div className="flex flex-col items-center space-y-3">
                      <div className="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center">
                        <FileText className="w-6 h-6 text-gray-400" />
                      </div>
                      <div>
                        <p className="text-sm font-medium text-gray-900">لا توجد طلبات</p>
                        <p className="text-xs text-gray-500">ابدأ بإضافة طلبات جديدة أو استيراد ملف CSV</p>
                      </div>
                    </div>
                  </td>
                </tr>
              ) : (
                orders.map((o, index) => {
                  const rowId = o.id; // استخدم document id دائمًا للإرسال
                  const sent = o.reviewSent ?? (o.inviteStatus === 'sent');
                  return (
                    <tr 
                      key={rowId || o.orderId} 
                      className="hover:bg-gray-50 transition-colors duration-150"
                      style={{ animationDelay: `${index * 50}ms` }}
                    >
                      <td className="px-6 py-4">
                        <div className="text-sm font-semibold text-gray-900">
                          {o.orderId || rowId}
                        </div>
                      </td>
                      <td className="px-6 py-4">
                        <div className="text-sm text-gray-900">
                          {o.productName || o.productId || (
                            <span className="text-gray-400 italic">غير محدد</span>
                          )}
                        </div>
                      </td>
                      <td className="px-6 py-4">
                        <div className="text-sm text-gray-900">
                          {o.customerName || (
                            <span className="text-gray-400 italic">غير محدد</span>
                          )}
                        </div>
                      </td>
                      <td className="px-6 py-4">
                        <div className="text-sm text-gray-900 font-mono">
                          {o.phone || (
                            <span className="text-gray-400 italic">غير محدد</span>
                          )}
                        </div>
                      </td>
                      <td className="px-6 py-4">
                        <div className="text-sm text-gray-900">
                          {o.email || (
                            <span className="text-gray-400 italic">غير محدد</span>
                          )}
                        </div>
                      </td>
                      <td className="px-6 py-4">
                        <div className="text-sm text-gray-600 font-mono">
                          {fmtDate(o.createdAt)}
                        </div>
                      </td>
                      <td className="px-6 py-4 text-center">
                        {getStatusBadge(o)}
                      </td>
                      <td className="px-6 py-4 text-center">
                        {!sent && rowId ? (
                          <button
                            onClick={() => sendReviewLink(rowId)}
                            className="inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 focus:ring-4 focus:ring-blue-100 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed shadow-sm"
                            disabled={sendingId === rowId}
                          >
                            {sendingId === rowId ? (
                              <>
                                <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                                يتم الإرسال...
                              </>
                            ) : (
                              <>
                                <Send className="w-4 h-4" />
                                إرسال التقييم
                              </>
                            )}
                          </button>
                        ) : (
                          <div className="text-xs text-gray-400">—</div>
                        )}
                      </td>
                    </tr>
                  );
                })
              )}
            </tbody>
          </table>
        </div>
      </div>

      {/* Summary Stats */}
      {orders.length > 0 && (
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
          <div className="bg-white rounded-lg border border-gray-200 p-4 shadow-sm">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-xs font-medium text-gray-600 uppercase tracking-wider">إجمالي الطلبات</p>
                <p className="text-2xl font-bold text-gray-900">{orders.length}</p>
              </div>
              <div className="w-10 h-10 bg-blue-50 rounded-lg flex items-center justify-center">
                <FileText className="w-5 h-5 text-blue-600" />
              </div>
            </div>
          </div>
          
          <div className="bg-white rounded-lg border border-gray-200 p-4 shadow-sm">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-xs font-medium text-gray-600 uppercase tracking-wider">تم الإرسال</p>
                <p className="text-2xl font-bold text-emerald-600">
                  {orders.filter(o => o.reviewSent ?? (o.inviteStatus === 'sent')).length}
                </p>
              </div>
              <div className="w-10 h-10 bg-emerald-50 rounded-lg flex items-center justify-center">
                <Check className="w-5 h-5 text-emerald-600" />
              </div>
            </div>
          </div>
          
          <div className="bg-white rounded-lg border border-gray-200 p-4 shadow-sm">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-xs font-medium text-gray-600 uppercase tracking-wider">في الانتظار</p>
                <p className="text-2xl font-bold text-amber-600">
                  {orders.filter(o => !(o.reviewSent ?? (o.inviteStatus === 'sent'))).length}
                </p>
              </div>
              <div className="w-10 h-10 bg-amber-50 rounded-lg flex items-center justify-center">
                <AlertCircle className="w-5 h-5 text-amber-600" />
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
====[ END FILE: src/components/dashboard/OrdersTab.tsx ]============================================

====[ START FILE: src/components/dashboard/Reviews.tsx (28.6 KB) ]==================================
// src/components/dashboard/Reviews.tsx
'use client';

import { useCallback, useEffect, useRef, useState } from 'react';
import axios from '@/lib/axiosInstance';
import { isAxiosError } from 'axios';
import { format } from 'date-fns';
import { arSA } from 'date-fns/locale';
import Image from 'next/image';
import { getAuth } from 'firebase/auth';
import { app } from '@/lib/firebase';
import {
  BarChart, Bar, XAxis, YAxis, ResponsiveContainer, PieChart, Pie, Cell,
  AreaChart, Area, LineChart, Line, Tooltip, CartesianGrid
} from 'recharts';

type Review = {
  id: string;
  productId?: string;
  stars: number;
  text?: string;
  comment?: string;
  createdAt?: number | string;
  buyerVerified?: boolean;
  status?: 'pending' | 'published' | 'rejected';
};

type TabId = 'overview' | 'analytics' | 'table';
type FilterId = 'all' | 'published' | 'pending';

const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6'];
const tabs: Array<{ id: TabId; label: string; icon: string }> = [
  { id: 'overview', label: 'نظرة عامة', icon: '📊' },
  { id: 'analytics', label: 'التحليلات', icon: '📈' },
  { id: 'table', label: 'الجدول', icon: '📋' },
];

function toTs(v: unknown): number {
  if (typeof v === 'number') return v;
  if (typeof v === 'string') {
    const n = Number(v);
    return Number.isFinite(n) ? n : Date.parse(v);
  }
  return 0;
}

function toBool(v: unknown): boolean {
  if (typeof v === 'boolean') return v;
  if (typeof v === 'number') return v !== 0;
  if (typeof v === 'string') return ['1', 'true', 'yes', 'y'].includes(v.toLowerCase());
  return false;
}

function normalizeReview(raw: Record<string, unknown>): Review {
  const id = String(raw['id'] ?? raw['_id'] ?? raw['reviewId'] ?? raw['docId'] ?? '');
  const productId = (raw['productId'] ?? raw['product_id']) as string | undefined;

  const starsRaw = raw['stars'];
  const starsNum = typeof starsRaw === 'number' ? starsRaw : Number(starsRaw ?? 0);
  const stars = Number.isFinite(starsNum) ? starsNum : 0;

  const createdAt =
    toTs(raw['createdAt'] ?? raw['created'] ?? raw['timestamp'] ?? raw['created_at']) || Date.now();

  const bvCandidate =
    raw['buyerVerified'] ??
    raw['trustedBuyer'] ??
    raw['trusted_buyer'] ??
    raw['buyer_trusted'] ??
    raw['verified'] ??
    raw['isVerified'] ??
    raw['verifiedBuyer'] ??
    raw['buyer_verified'];

  const buyerVerified = toBool(bvCandidate);
  const text = (raw['text'] ?? raw['comment'] ?? '') as string | undefined;
  const comment = (raw['comment'] as string | undefined) ?? undefined;
  const status = raw['status'] as Review['status'] | undefined;

  return { id, productId, stars, text, comment, createdAt, buyerVerified, status };
}

export default function ReviewsTab({ storeName }: { storeName?: string }) {
  const [reviews, setReviews] = useState<Review[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [showLogo, setShowLogo] = useState(true);
  const [tab, setTab] = useState<TabId>('overview');
  const [filter, setFilter] = useState<FilterId>('all');

  const mountedRef = useRef(true);
  useEffect(() => {
    mountedRef.current = true;
    return () => { mountedRef.current = false; };
  }, []);

  const fetchReviews = useCallback(async (): Promise<void> => {
    const auth = getAuth(app);
    const user = auth.currentUser;

    if (!user) {
      if (mountedRef.current) {
        setLoading(false);
        setError('غير مصرح: الرجاء تسجيل الدخول.');
      }
      return;
    }

    try {
      if (mountedRef.current) { setLoading(true); setError(''); }

      // خذ توكن حديث
      const idToken = await user.getIdToken(/* forceRefresh */ true);

      const res = await axios.get('/api/reviews/list', {
        headers: { Authorization: `Bearer ${idToken}` },
      });

      const items = (res.data?.items ?? res.data?.reviews ?? []) as unknown[];
      const normalized = (Array.isArray(items) ? items : [])
        .map((r) => normalizeReview((r ?? {}) as Record<string, unknown>))
        .sort((a, b) => Number(b.createdAt || 0) - Number(a.createdAt || 0));

      if (mountedRef.current) setReviews(normalized);
    } catch (err: unknown) {
      const status = isAxiosError(err) ? err.response?.status ?? 0 : 0;

      // لو Unauthorized جرّب تجدد التوكن مرة تانيه
      if (status === 401) {
        try {
          const fresh = await getAuth(app).currentUser?.getIdToken(true);
          if (fresh) {
            const res2 = await axios.get('/api/reviews/list', {
              headers: { Authorization: `Bearer ${fresh}` },
            });
            const items2 = (res2.data?.items ?? res2.data?.reviews ?? []) as unknown[];
            const normalized2 = (Array.isArray(items2) ? items2 : [])
              .map((r) => normalizeReview((r ?? {}) as Record<string, unknown>))
              .sort((a, b) => Number(b.createdAt || 0) - Number(a.createdAt || 0));
            if (mountedRef.current) setReviews(normalized2);
            return;
          }
        } catch { /* ignore */ }
      }

      console.error('Error loading reviews:', err);
      if (mountedRef.current) setError('حدث خطأ أثناء تحميل التقييمات');
    } finally {
      if (mountedRef.current) setLoading(false);
    }
  }, []);

  useEffect(() => { fetchReviews(); }, [fetchReviews]);

  const fmtDate = (v?: number | string): string => {
    if (v == null) return '-';
    const n = typeof v === 'string' ? Number(v) : v;
    const d = Number.isFinite(n) ? new Date(Number(n)) : new Date(v as string);
    if (isNaN(d.getTime())) return '-';
    try { return format(d, 'dd MMM yyyy', { locale: arSA }); }
    catch { return d.toLocaleDateString(); }
  };

  const isPublished = (r: Review): boolean => (r.status ? r.status === 'published' : true);

  // Analytics
  const stats = {
    total: reviews.length,
    published: reviews.filter((r) => isPublished(r)).length,
    verified: reviews.filter((r) => !!r.buyerVerified).length,
    avg: reviews.length > 0
      ? (reviews.reduce((sum, r) => sum + (r.stars || 0), 0) / reviews.length).toFixed(1)
      : '0',
  };

  type MonthAgg = { name: string; reviews: number; avg: number; total: number };
  const chartData = {
    ratings: [1, 2, 3, 4, 5].map((star) => ({
      rating: `${star}★`,
      count: reviews.filter((r) => r.stars === star).length,
    })),
    monthly: Object.values(
      reviews.reduce<Record<string, MonthAgg>>((acc, review) => {
        const date = new Date(toTs(review.createdAt));
        const key = format(date, 'yyyy-MM');
        const name = format(date, 'MMM', { locale: arSA });
        if (!acc[key]) acc[key] = { name, reviews: 0, avg: 0, total: 0 };
        acc[key].reviews += 1;
        acc[key].total += review.stars || 0;
        acc[key].avg = acc[key].total / acc[key].reviews;
        return acc;
      }, {})
    ).slice(-6),
  };

  const filtered = reviews.filter((r) =>
    filter === 'all' ? true : filter === 'published' ? isPublished(r) : !isPublished(r)
  );

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center">
        <div className="text-center">
          <div className="relative w-20 h-20 mx-auto mb-6">
            <div className="absolute inset-0 border-4 border-blue-200 rounded-full animate-spin border-t-blue-600"></div>
            <div className="absolute inset-2 border-4 border-purple-200 rounded-full animate-ping border-t-purple-600"></div>
          </div>
          <h3 className="text-2xl font-bold text-gray-800 animate-pulse">جاري التحميل...</h3>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 to-pink-50 flex items-center justify-center">
        <div className="bg-white p-12 rounded-3xl shadow-2xl text-center max-w-md transform hover:scale-105 transition-all duration-300">
          <div className="w-20 h-20 bg-gradient-to-br from-red-500 to-pink-600 rounded-full mx-auto mb-6 flex items-center justify-center animate-bounce">
            <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <h3 className="text-2xl font-bold text-red-800 mb-4">خطأ في التحميل</h3>
          <p className="text-red-600 mb-6">{error}</p>
          <button
            onClick={fetchReviews}
            className="px-8 py-3 bg-gradient-to-r from-red-500 to-pink-600 text-white rounded-xl hover:from-red-600 hover:to-pink-700 transition-all duration-300 transform hover:scale-105"
          >
            إعادة المحاولة
          </button>
        </div>
      </div>
    );
  }

  if (reviews.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 flex items-center justify-center">
        <div className="bg-white p-12 rounded-3xl shadow-2xl text-center max-w-lg transform hover:scale-105 transition-all duration-500">
          <div className="w-24 h-24 bg-gradient-to-br from-gray-400 to-gray-600 rounded-full mx-auto mb-8 flex items-center justify-center animate-pulse">
            <svg className="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 24 24">
              <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
            </svg>
          </div>
          <h3 className="text-3xl font-bold text-gray-800 mb-4">لا توجد تقييمات</h3>
          <p className="text-gray-600 text-lg">ابدأ في جمع تقييمات عملائك الآن</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 p-6">
      <div className="max-w-7xl mx-auto space-y-8">
        {/* Header */}
        <div className="bg-white/80 backdrop-blur-xl rounded-3xl p-8 shadow-2xl border border-white/20">
          <div className="flex items-center justify-between flex-wrap gap-6">
            <div className="flex items-center gap-6">
              <div className="w-16 h-16 bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600 rounded-2xl flex items-center justify-center shadow-xl relative">
                <svg className="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                </svg>
                <div className="absolute -top-1 -right-1 w-4 h-4 bg-emerald-500 rounded-full animate-pulse"></div>
              </div>
              <div>
                <h1 className="text-3xl font-black bg-gradient-to-r from-gray-900 to-purple-800 bg-clip-text text-transparent">
                  لوحة التقييمات الذكية
                </h1>
                <p className="text-gray-600 text-lg">إدارة وتحليل التقييمات بذكاء</p>
              </div>
            </div>

            {storeName && (
              <div className="bg-gradient-to-r from-blue-500/10 to-purple-500/10 px-6 py-3 rounded-2xl border border-blue-200/50">
                <span className="text-blue-700 font-bold">المتجر: {storeName}</span>
              </div>
            )}
          </div>

          {/* Tabs */}
          <div className="mt-8 flex gap-2">
            {tabs.map((t) => (
              <button
                key={t.id}
                onClick={() => setTab(t.id)}
                className={`flex items-center gap-3 px-6 py-3 rounded-2xl font-bold transition-all duration-300 transform hover:scale-105 ${
                  tab === t.id
                    ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                <span className="text-lg">{t.icon}</span>
                {t.label}
              </button>
            ))}
          </div>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6">
          {[
            { title: 'إجمالي التقييمات', value: stats.total, icon: '⭐', bg: 'from-blue-50 to-cyan-50' },
            { title: 'التقييمات المنشورة', value: stats.published, icon: '✅', bg: 'from-emerald-50 to-teal-50' },
            { title: 'المشترون الموثقون', value: stats.verified, icon: '🛡️', bg: 'from-amber-50 to-orange-50' },
            { title: 'متوسط التقييم', value: stats.avg, icon: '🌟', bg: 'from-purple-50 to-pink-50' },
          ].map((stat) => (
            <div
              key={stat.title}
              className={`bg-gradient-to-br ${stat.bg} p-6 rounded-3xl border shadow-lg hover:shadow-xl transition-all duration-500 transform hover:scale-105 hover:-translate-y-2`}
            >
              <div className="flex items-center justify-between mb-4">
                <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-500 rounded-2xl flex items-center justify-center text-white text-xl shadow-lg">
                  {stat.icon}
                </div>
                <div className="text-emerald-600 text-sm font-bold bg-emerald-100 px-2 py-1 rounded-lg">+12%</div>
              </div>
              <p className="text-gray-600 text-sm font-medium">{stat.title}</p>
              <p className="text-3xl font-black">{stat.value}</p>
            </div>
          ))}
        </div>

        {/* Content */}
        {tab === 'overview' && (
          <div className="grid lg:grid-cols-2 gap-8">
            <div className="bg-white/80 backdrop-blur-xl rounded-3xl p-8 border shadow-xl">
              <h3 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-3">📊 توزيع التقييمات</h3>
              <ResponsiveContainer width="100%" height={300}>
                <BarChart data={chartData.ratings}>
                  <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
                  <XAxis dataKey="rating" tick={{ fill: '#666', fontSize: 12 }} />
                  <YAxis tick={{ fill: '#666', fontSize: 12 }} />
                  <Tooltip contentStyle={{ backgroundColor: 'rgba(255,255,255,0.95)', border: 'none', borderRadius: '12px', boxShadow: '0 10px 30px rgba(0,0,0,0.1)' }} />
                  <Bar dataKey="count" fill="url(#gradient1)" radius={[8, 8, 0, 0]} />
                  <defs>
                    <linearGradient id="gradient1" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="0%" stopColor="#3B82F6" />
                      <stop offset="100%" stopColor="#1E40AF" />
                    </linearGradient>
                  </defs>
                </BarChart>
              </ResponsiveContainer>
            </div>

            <div className="bg-white/80 backdrop-blur-xl rounded-3xl p-8 border shadow-xl">
              <h3 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-3">🥧 نسب التقييمات</h3>
              <ResponsiveContainer width="100%" height={300}>
                <PieChart>
                  <Pie data={chartData.ratings} cx="50%" cy="50%" innerRadius={60} outerRadius={120} paddingAngle={5} dataKey="count">
                    {chartData.ratings.map((_, index) => <Cell key={index} fill={colors[index % colors.length]} />)}
                  </Pie>
                  <Tooltip contentStyle={{ backgroundColor: 'rgba(255,255,255,0.95)', border: 'none', borderRadius: '12px', boxShadow: '0 10px 30px rgba(0,0,0,0.1)' }} />
                </PieChart>
              </ResponsiveContainer>
            </div>
          </div>
        )}

        {tab === 'analytics' && (
          <div className="space-y-8">
            <div className="bg-white/80 backdrop-blur-xl rounded-3xl p-8 border shadow-xl">
              <h3 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-3">📈 الاتجاه الشهري</h3>
              <ResponsiveContainer width="100%" height={400}>
                <AreaChart data={chartData.monthly}>
                  <defs>
                    <linearGradient id="areaGradient" x1="0" y1="0" x2="0" y2="1">
                      <stop offset="5%" stopColor="#3B82F6" stopOpacity={0.8} />
                      <stop offset="95%" stopColor="#3B82F6" stopOpacity={0.1} />
                    </linearGradient>
                  </defs>
                  <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
                  <XAxis dataKey="name" tick={{ fill: '#666', fontSize: 12 }} />
                  <YAxis tick={{ fill: '#666', fontSize: 12 }} />
                  <Tooltip contentStyle={{ backgroundColor: 'rgba(255,255,255,0.95)', border: 'none', borderRadius: '12px', boxShadow: '0 10px 30px rgba(0,0,0,0.1)' }} />
                  <Area type="monotone" dataKey="reviews" stroke="#3B82F6" strokeWidth={3} fillOpacity={1} fill="url(#areaGradient)" />
                </AreaChart>
              </ResponsiveContainer>
            </div>

            <div className="bg-white/80 backdrop-blur-xl rounded-3xl p-8 border shadow-xl">
              <h3 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-3">⭐ متوسط التقييم</h3>
              <ResponsiveContainer width="100%" height={300}>
                <LineChart data={chartData.monthly}>
                  <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
                  <XAxis dataKey="name" tick={{ fill: '#666', fontSize: 12 }} />
                  <YAxis domain={[0, 5]} tick={{ fill: '#666', fontSize: 12 }} />
                  <Tooltip contentStyle={{ backgroundColor: 'rgba(255,255,255,0.95)', border: 'none', borderRadius: '12px', boxShadow: '0 10px 30px rgba(0,0,0,0.1)' }} />
                  <Line
                    type="monotone"
                    dataKey="avg"
                    stroke="#10B981"
                    strokeWidth={4}
                    strokeLinecap="round"
                    dot={{ fill: '#10B981', strokeWidth: 2, r: 6 }}
                    activeDot={{ r: 8, fill: '#10B981', stroke: '#fff', strokeWidth: 2 }}
                  />
                </LineChart>
              </ResponsiveContainer>
            </div>
          </div>
        )}

        {tab === 'table' && (
          <div className="space-y-6">
            <div className="flex items-center justify-between bg-white/80 backdrop-blur-xl rounded-2xl p-6 border shadow-lg">
              <select
                value={filter}
                onChange={(e) => setFilter(e.target.value as FilterId)}
                className="px-4 py-2 rounded-xl border focus:ring-2 focus:ring-blue-500"
              >
                <option value="all">جميع التقييمات</option>
                <option value="published">المنشورة</option>
                <option value="pending">المعلقة</option>
              </select>
              <div className="flex gap-3">
                <button
                  onClick={fetchReviews}
                  className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-gray-100 to-gray-200 rounded-xl hover:from-gray-200 hover:to-gray-300 transition-all duration-300 transform hover:scale-105"
                >
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                  </svg>
                  تحديث
                </button>

                {/* eslint-disable-next-line @next/next/no-html-link-for-pages */}
                <a
                  href="/api/reviews/export-csv"
                  className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-600 text-white rounded-xl hover:from-emerald-600 hover:to-teal-700 transition-all duration-300 transform hover:scale-105"
                >
                  CSV
                </a>
                {/* eslint-disable-next-line @next/next/no-html-link-for-pages */}
                <a
                  href="/api/reviews/export-pdf"
                  className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-red-500 to-pink-600 text-white rounded-xl hover:from-red-600 hover:to-pink-700 transition-all duration-300 transform hover:scale-105"
                >
                  PDF
                </a>
              </div>
            </div>

            <div className="bg-white/80 backdrop-blur-xl rounded-3xl border shadow-2xl overflow-hidden">
              <div className="overflow-x-auto">
                <table className="min-w-full text-sm">
                  <thead>
                    <tr className="bg-gradient-to-r from-slate-800 via-blue-900 to-purple-900 text-white">
                      {['📦 المنتج', '⭐ التقييم', '💬 التعليق', '📅 التاريخ', '🛡️ التحقق', '📊 الحالة'].map((h) => (
                        <th key={h} className="px-6 py-4 font-bold text-right">{h}</th>
                      ))}
                    </tr>
                  </thead>
                  <tbody>
                    {filtered.map((r, i) => {
                      const text = r.text ?? r.comment ?? '';
                      return (
                        <tr
                          key={r.id}
                          className={`group hover:bg-gradient-to-r hover:from-blue-50 hover:to-purple-50 transition-all duration-300 ${i % 2 === 0 ? 'bg-white' : 'bg-gray-50/50'}`}
                        >
                          <td className="px-6 py-4">
                            <div className="flex items-center gap-3">
                              <div className="w-3 h-3 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-pulse"></div>
                              <span className="font-semibold text-gray-800">
                                {r.productId || <span className="text-gray-400 italic">غير محدد</span>}
                              </span>
                            </div>
                          </td>
                          <td className="px-6 py-4">
                            <div className="flex items-center gap-3">
                              <div className="flex text-amber-400">
                                {[1, 2, 3, 4, 5].map((star) => (
                                  <svg key={star} className={`w-4 h-4 ${star <= (r.stars || 0) ? 'text-amber-400' : 'text-gray-200'}`} fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                                  </svg>
                                ))}
                              </div>
                              <span className="px-3 py-1 bg-amber-100 text-amber-800 rounded-full text-xs font-bold">{r.stars || 0}/5</span>
                            </div>
                          </td>
                          <td className="px-6 py-4">
                            <div className="max-w-xs group-hover:max-w-none relative">
                              {text ? <p className="truncate text-gray-700 cursor-help" title={text}>{text}</p> : <span className="text-gray-400 italic">لا يوجد</span>}
                            </div>
                          </td>
                          <td className="px-6 py-4">
                            <div className="flex items-center gap-2">
                              <div className="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div>
                              <span className="font-medium">{fmtDate(r.createdAt)}</span>
                            </div>
                          </td>
                          <td className="px-6 py-4">
                            {r.buyerVerified ? (
                              <div className="inline-flex items-center gap-2 bg-gradient-to-r from-emerald-50 to-teal-50 text-emerald-700 border-2 border-emerald-200 px-3 py-1 rounded-2xl text-xs font-bold">
                                {showLogo && (
                                  <Image
                                    src="/logo.png"
                                    alt="شعار"
                                    width={14}
                                    height={14}
                                    className="rounded-full"
                                    onError={() => setShowLogo(false)}
                                  />
                                )}
                                <svg className="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                موثق
                              </div>
                            ) : (
                              <div className="inline-flex items-center gap-2 bg-gray-50 text-gray-500 border px-3 py-1 rounded-2xl text-xs">
                                <svg className="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                غير موثق
                              </div>
                            )}
                          </td>
                          <td className="px-6 py-4">
                            {isPublished(r) ? (
                              <div className="inline-flex items-center gap-2 bg-gradient-to-r from-green-50 to-emerald-50 text-green-700 border-2 border-green-200 px-3 py-1 rounded-2xl text-xs font-bold">
                                <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                                منشور
                              </div>
                            ) : (
                              <div className="inline-flex items-center gap-2 bg-gray-50 text-gray-600 border px-3 py-1 rounded-2xl text-xs">
                                <div className="w-2 h-2 bg-gray-400 rounded-full"></div>
                                مخفي
                              </div>
                            )}
                          </td>
                        </tr>
                      );
                    })}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* FAB */}
      <button
        onClick={fetchReviews}
        className="fixed bottom-8 right-8 w-16 h-16 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-full shadow-2xl hover:shadow-3xl transform hover:scale-110 transition-all duration-300 flex items-center justify-center group z-50"
      >
        <svg className="w-6 h-6 group-hover:animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
        </svg>
      </button>
    </div>
  );
}
====[ END FILE: src/components/dashboard/Reviews.tsx ]==============================================

====[ START FILE: src/components/dashboard/reviews/RepliesTab.tsx (3.6 KB) ]========================
"use client";
import { useEffect, useMemo, useState, useCallback } from "react";

type Reply = {
  id: string;
  reviewId: string;
  storeId: string;
  userId: string;
  text: string;
  createdAt: number;
};

type Props = {
  reviewId: string;
  storeId: string;    // هنبعته في الهيدر للتحقق بالسيرفر
  canPost?: boolean;  // تحكم من صلاحيات الواجهة
};

function fmt(ts: number) {
  try { return new Date(ts).toLocaleString(); } catch { return String(ts); }
}

export default function RepliesTab({ reviewId, storeId, canPost = true }: Props) {
  const [items, setItems] = useState<Reply[]>([]);
  const [loading, setLoading] = useState(true);
  const [text, setText] = useState("");
  const [posting, setPosting] = useState(false);
  const disabled = useMemo(() => posting || !text.trim(), [posting, text]);

  const load = useCallback(async () => {
    setLoading(true);
    try {
      const r = await fetch(`/api/reviews/${encodeURIComponent(reviewId)}/reply`, {
        headers: { "x-store-id": storeId },
      });
      const j = await r.json();
      if (j?.ok) setItems(j.items || []);
    } finally {
      setLoading(false);
    }
  }, [reviewId, storeId]);

  const post = useCallback(async () => {
    if (!text.trim()) return;
    setPosting(true);
    try {
      const r = await fetch(`/api/reviews/${encodeURIComponent(reviewId)}/reply`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "x-store-id": storeId,
        },
        body: JSON.stringify({ text }),
      });
      const j = await r.json();
      if (j?.ok) {
        setText("");
        await load();
      } else {
        alert(j?.error || "فشل إرسال الرد");
      }
    } finally {
      setPosting(false);
    }
  }, [text, reviewId, storeId, load]);

  useEffect(() => {
    load();
  }, [load]);

  return (
    <div dir="rtl" className="space-y-4">
      <div className="flex items-center justify-between">
        <h3 className="font-semibold">الردود</h3>
        <button onClick={load} className="text-sm text-gray-600 hover:underline">تحديث</button>
      </div>

      {loading ? (
        <div className="animate-pulse h-20 bg-gray-100 rounded-xl" />
      ) : items.length === 0 ? (
        <div className="text-sm text-gray-500">لا توجد ردود بعد.</div>
      ) : (
        <div className="space-y-3">
          {items.map((r) => (
            <div key={r.id} className="border rounded-xl p-3">
              <div className="text-xs text-gray-500 mb-1">{fmt(r.createdAt)}</div>
              <div className="whitespace-pre-wrap leading-7">{r.text}</div>
            </div>
          ))}
        </div>
      )}

      {canPost && (
        <div className="border rounded-xl p-3 space-y-2">
          <label className="text-sm">إضافة رد</label>
          <textarea
            className="w-full border rounded-lg p-2 min-h-[90px]"
            value={text}
            onChange={(e) => setText(e.target.value)}
            maxLength={2000}
            placeholder="اكتب ردك للعميل…"
          />
          <div className="flex items-center justify-between text-xs text-gray-500">
            <span>{text.length}/2000</span>
            <button
              onClick={post}
              disabled={disabled}
              className="px-3 py-2 rounded-lg bg-emerald-600 text-white disabled:opacity-50"
            >
              نشر الرد
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
====[ END FILE: src/components/dashboard/reviews/RepliesTab.tsx ]===================================

====[ START FILE: src/components/dashboard/settings/MessageSettings.tsx (5.9 KB) ]==================
// src/components/dashboard/settings/MessageSettings.tsx
'use client';

import { useEffect, useRef, useState, useCallback } from 'react';
import axios from '@/lib/axiosInstance';
import { getAuth } from 'firebase/auth';
import { app } from '@/lib/firebase';

export default function MessageSettings() {
  const [senderName, setSenderName] = useState('');
  const [defaultMethod, setDefaultMethod] = useState<'whatsapp' | 'sms' | 'email'>('whatsapp');
  const [smsTemplate, setSmsTemplate] = useState('');
  const [whatsappTemplate, setWhatsappTemplate] = useState('');
  const [emailTemplate, setEmailTemplate] = useState('');
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [saved, setSaved] = useState(false);
  const [error, setError] = useState('');

  const mountedRef = useRef(true);
  useEffect(() => {
    mountedRef.current = true;
    return () => { mountedRef.current = false; };
  }, []);

  const fetchSettings = useCallback(async () => {
    try {
      setError('');
      setLoading(true);

      const auth = getAuth(app);
      const user = auth.currentUser;
      if (!user) {
        throw new Error('UNAUTHENTICATED');
      }
      const idToken = await user.getIdToken(true);

      const res = await axios.get('/api/store/app-settings', {
        headers: { Authorization: `Bearer ${idToken}` },
      });

      const appCfg = res.data?.app ?? {};
      if (!mountedRef.current) return;

      setSenderName(appCfg.sender_name || '');
      setDefaultMethod((appCfg.default_send_method as 'whatsapp' | 'sms' | 'email') || 'whatsapp');
      setSmsTemplate(appCfg.sms_template || '');
      setWhatsappTemplate(appCfg.whatsapp_template || '');
      setEmailTemplate(appCfg.email_template || '');
    } catch (e: unknown) {
      if (!mountedRef.current) return;
      console.error('Error loading settings:', e);
      setError(
        (e as Error)?.message === 'UNAUTHENTICATED'
          ? 'غير مصرح: الرجاء تسجيل الدخول.'
          : 'تعذر تحميل الإعدادات.'
      );
    } finally {
      if (mountedRef.current) setLoading(false);
    }
  }, []);

  useEffect(() => { fetchSettings(); }, [fetchSettings]);

  const handleSave = useCallback(async () => {
    try {
      setError('');
      setSaving(true);

      const auth = getAuth(app);
      const user = auth.currentUser;
      if (!user) {
        throw new Error('UNAUTHENTICATED');
      }
      const idToken = await user.getIdToken(true);

      await axios.post(
        '/api/store/app-settings',
        {
          sender_name: senderName,
          default_send_method: defaultMethod,
          sms_template: smsTemplate,
          whatsapp_template: whatsappTemplate,
          email_template: emailTemplate,
        },
        { headers: { Authorization: `Bearer ${idToken}` } }
      );

      if (!mountedRef.current) return;
      setSaved(true);
      setTimeout(() => mountedRef.current && setSaved(false), 2000);
    } catch (e: unknown) {
      if (!mountedRef.current) return;
      console.error('Error saving settings:', e);
      setError(
        (e as Error)?.message === 'UNAUTHENTICATED'
          ? 'غير مصرح: الرجاء تسجيل الدخول.'
          : 'تعذر حفظ الإعدادات.'
      );
    } finally {
      if (mountedRef.current) setSaving(false);
    }
  }, [senderName, defaultMethod, smsTemplate, whatsappTemplate, emailTemplate]);

  if (loading) return <p>جارٍ تحميل الإعدادات...</p>;
  if (error) return <p className="text-red-500">{error}</p>;

  return (
    <div className="space-y-4">
      <h2 className="text-xl font-bold mb-4">إعدادات الرسائل</h2>

      <div>
        <label className="block text-sm font-medium mb-1">اسم المرسل</label>
        <input
          className="w-full border rounded px-3 py-2"
          value={senderName}
          onChange={(e) => setSenderName(e.target.value)}
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">طريقة الإرسال الافتراضية</label>
        <select
          className="w-full border rounded px-3 py-2"
          value={defaultMethod}
          onChange={(e) => setDefaultMethod(e.target.value as 'whatsapp' | 'sms' | 'email')}
        >
          <option value="whatsapp">واتساب</option>
          <option value="sms">رسالة SMS</option>
          <option value="email">بريد إلكتروني</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">نص رسالة SMS</label>
        <textarea
          className="w-full border rounded px-3 py-2"
          rows={2}
          value={smsTemplate}
          onChange={(e) => setSmsTemplate(e.target.value)}
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">نص رسالة WhatsApp</label>
        <textarea
          className="w-full border rounded px-3 py-2"
          rows={2}
          value={whatsappTemplate}
          onChange={(e) => setWhatsappTemplate(e.target.value)}
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">نص رسالة البريد الإلكتروني</label>
        <textarea
          className="w-full border rounded px-3 py-2"
          rows={2}
          value={emailTemplate}
          onChange={(e) => setEmailTemplate(e.target.value)}
        />
      </div>

      <button
        onClick={handleSave}
        disabled={saving}
        className={`px-5 py-2 text-white rounded ${saving ? 'bg-green-400 cursor-not-allowed' : 'bg-green-700 hover:bg-green-800'}`}
      >
        {saving ? 'جاري الحفظ...' : 'حفظ التغييرات'}
      </button>

      {saved && <p className="text-green-600">تم الحفظ بنجاح ✅</p>}
    </div>
  );
}
====[ END FILE: src/components/dashboard/settings/MessageSettings.tsx ]=============================

====[ START FILE: src/components/dashboard/settings/SallaIntegrationTab.tsx (7.7 KB) ]==============
// src/components/dashboard/settings/SallaIntegrationTab.tsx
'use client';

import { useEffect, useMemo, useState } from 'react';
import { AlertCircle, Check, Copy, Info } from 'lucide-react';

type Props = { storeUid?: string };

type SallaStatus = {
  ok?: boolean;
  connected: boolean;
  uid?: string | null;
  storeId?: string | number | null;
  storeName?: string | null;
  domain?: string | null;
  apiBase?: string | null;
  reason?: string | null;
};

function getCookie(name: string): string | null {
  if (typeof document === 'undefined') return null;
  const m = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + '=([^;]*)'));
  return m ? decodeURIComponent(m[1]) : null;
}
//eslint-disable-next-line @typescript-eslint/no-explicit-any
async function fetchJson<T = any>(url: string, init?: RequestInit): Promise<{ ok: boolean; data: T | null }> {
  const r = await fetch(url, init);
  //eslint-disable-next-line @typescript-eslint/no-explicit-any
  let j: any = null;
  try { j = await r.json(); } catch { j = null; }
  const data = (j && (j.data ?? j)) as T | null;
  return { ok: r.ok, data };
}

function asMsg(e: unknown) { return e instanceof Error ? e.message : String(e); }

export default function SallaIntegrationTab({ storeUid: storeUidProp }: Props) {
  const [loading, setLoading] = useState(true);
  const [status, setStatus] = useState<SallaStatus | null>(null);
  const [msg, setMsg] = useState<string | null>(null);

  const resolvedUid = useMemo(() => {
    if (storeUidProp) return storeUidProp;
    if (typeof window !== 'undefined') {
      const u = new URL(window.location.href);
      const q = u.searchParams.get('uid');
      if (q) return q;
    }
    return getCookie('salla_store_uid') || undefined;
  }, [storeUidProp]);

  useEffect(() => {
    let mounted = true;
    (async () => {
      setLoading(true);
      try {
        const url = resolvedUid ? `/api/salla/status?uid=${encodeURIComponent(resolvedUid)}` : `/api/salla/status`;
        const { data } = await fetchJson<SallaStatus>(url);
        if (!mounted) return;
        setStatus(
          data || {
            ok: true,
            connected: false,
            reason: 'no_data',
          }
        );
      } catch (e) {
        if (mounted) setMsg(asMsg(e));
      } finally {
        if (mounted) setLoading(false);
      }
    })();
    return () => { mounted = false; };
  }, [resolvedUid]);

  const badge = useMemo(() => {
    const c = status?.connected;
    return c ? (
      <div className="inline-flex items-center gap-1.5 px-3 py-1 rounded-full bg-emerald-50 border border-emerald-200 text-emerald-700 text-sm font-medium">
        <Check size={14} />
        متصل
      </div>
    ) : (
      <div className="inline-flex items-center gap-1.5 px-3 py-1 rounded-full bg-rose-50 border border-rose-200 text-rose-700 text-sm font-medium">
        <AlertCircle size={14} />
        غير متصل
      </div>
    );
  }, [status?.connected]);

  const storeId = useMemo(() => {
    const uid = status?.uid || resolvedUid || '';
    const m = String(uid).match(/^salla:(\d+)$/);
    return m ? m[1] : '';
  }, [status?.uid, resolvedUid]);

  const snippet = useMemo(() => {
    const ds = storeId ? `salla:${storeId}` : 'salla:{STORE_ID}';
    return `<!-- Theqah Reviews Widget (Salla) -->
<div id="theqah-reviews"
     class="theqah-reviews"
     data-store="${ds}"
     data-product=""
     data-limit="10"
     data-lang="ar"
     data-theme="light"></div>

<script>(function(){
  var m = (location.pathname||"").match(/\\/p(\\d+)(?:\\/|$)/);
  var pid = m ? m[1] : "";
  var host = document.querySelector('#theqah-reviews.theqah-reviews');
  if (host && pid) host.setAttribute('data-product', pid);
  var already = document.querySelector('script[data-theqah-widget]');
  if (already) return;
  var s = document.createElement('script');
  s.src = 'https://www.theqah.com.sa/widgets/theqah-widget.js';
  s.async = true;
  s.setAttribute('data-theqah-widget','1');
  document.body.appendChild(s);
})();</script>
<!-- /Theqah Reviews Widget -->`;
  }, [storeId]);

  async function copySnippet() {
    try {
      await navigator.clipboard.writeText(snippet);
      setMsg('تم النسخ ✅');
      setTimeout(() => setMsg(null), 1500);
    } catch {
      setMsg('تعذَّر النسخ. انسخه يدويًا.');
      setTimeout(() => setMsg(null), 2000);
    }
  }

  if (loading) return <div className="text-sm text-gray-500">جارٍ التحميل…</div>;

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-2">
          <h4 className="text-base font-semibold text-gray-900">حالة الربط</h4>
          {badge}
        </div>
      </div>

      <div className="bg-white rounded-xl border border-gray-200 p-6 shadow-sm">
        <h4 className="text-base font-semibold text-gray-900 mb-4 flex items-center gap-2">
          <Info size={16} />
          معلومات المتجر
        </h4>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="bg-gray-50 rounded-lg p-4">
            <dt className="text-sm font-medium text-gray-500 mb-1">اسم المتجر</dt>
            <dd className="text-base font-semibold text-gray-900">
              {status?.storeName || 'غير محدد'}
            </dd>
          </div>

          <div className="bg-gray-50 rounded-lg p-4">
            <dt className="text-sm font-medium text-gray-500 mb-1">Store UID</dt>
            <dd className="text-base font-mono text-gray-900 break-all">
              {status?.uid || resolvedUid || '—'}
            </dd>
          </div>

          <div className="bg-gray-50 rounded-lg p-4">
            <dt className="text-sm font-medium text-gray-500 mb-1">Store ID (Salla)</dt>
            <dd className="text-base font-semibold text-gray-900">
              {storeId || '—'}
            </dd>
          </div>

          <div className="bg-gray-50 rounded-lg p-4">
            <dt className="text-sm font-medium text-gray-500 mb-1">النطاق</dt>
            <dd className="text-base font-semibold text-gray-900">
              {status?.domain || '—'}
            </dd>
          </div>
        </div>

        {status?.reason && (
          <div className="mt-3 text-xs text-gray-500">
            <span className="font-medium">المصدر:</span> {status.reason}
          </div>
        )}
      </div>

      <div className="bg-white rounded-xl border border-gray-200 p-6 shadow-sm">
        <h4 className="text-base font-semibold text-gray-900 mb-4">تركيب ودجت المراجعات</h4>
        <p className="text-sm text-gray-600 mb-3">
          انسخ الكود التالي وضعه من لوحة تحكم سلة → <b>المظهر</b> → <b>تخصيص</b> → <b>إضافة كود HTML (قبل &lt;/body&gt;)</b>.
        </p>
        <pre className="bg-gray-50 border rounded-lg p-3 overflow-auto text-xs whitespace-pre">{snippet}</pre>
        <button
          onClick={copySnippet}
          className="mt-3 inline-flex items-center gap-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700"
        >
          <Copy size={16} />
          نسخ الكود
        </button>
      </div>

      {msg && (
        <div
          className={`rounded-xl p-3 border ${
            msg.includes('✅')
              ? 'bg-emerald-50 border-emerald-200 text-emerald-800'
              : 'bg-amber-50 border-amber-200 text-amber-800'
          }`}
        >
          {msg}
        </div>
      )}
    </div>
  );
}
====[ END FILE: src/components/dashboard/settings/SallaIntegrationTab.tsx ]=========================

====[ START FILE: src/components/dashboard/settings/StoreInfoTab.tsx (2.9 KB) ]=====================
// src/components/dashboard/settings/StoreInfoTab.tsx
'use client';

import { useState, useEffect } from 'react';
import axios from 'axios';

export default function StoreInfoTab() {
  const [form, setForm] = useState({
    name: '',
    email: '',
    phone: '',
    description: '',
    domain: '',
    logoUrl: '',
  });
  const [loading, setLoading] = useState(false);
  const [saved, setSaved] = useState(false);

  useEffect(() => {
    const fetchInfo = async () => {
      try {
        const res = await axios.get('/api/store/info');
        setForm(res.data);
      } catch (err) {
        console.error('Error fetching store info', err);
      }
    };
    fetchInfo();
  }, []);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    try {
      await axios.post('/api/store/update-info', form);
      setSaved(true);
      setTimeout(() => setSaved(false), 3000);
    } catch (err) {
      console.error('Error updating store info', err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-4 max-w-xl">
      <div>
        <label className="block mb-1 font-medium">اسم المتجر</label>
        <input name="name" value={form.name} onChange={handleChange} className="input" />
      </div>

      <div>
        <label className="block mb-1 font-medium">البريد الإلكتروني</label>
        <input name="email" value={form.email} onChange={handleChange} className="input" />
      </div>

      <div>
        <label className="block mb-1 font-medium">رقم الجوال</label>
        <input name="phone" value={form.phone} onChange={handleChange} className="input" />
      </div>

      <div>
        <label className="block mb-1 font-medium">وصف المتجر</label>
        <textarea name="description" value={form.description} onChange={handleChange} className="input h-24" />
      </div>

      <div>
        <label className="block mb-1 font-medium">رابط المتجر</label>
        <input name="domain" value={form.domain} onChange={handleChange} className="input" />
      </div>

      <div>
        <label className="block mb-1 font-medium">رابط الشعار</label>
        <input name="logoUrl" value={form.logoUrl} onChange={handleChange} className="input" />
      </div>

      <button
        type="submit"
        disabled={loading}
        className="bg-green-700 text-white px-6 py-2 rounded hover:bg-green-800"
      >
        {loading ? 'جاري الحفظ...' : 'حفظ التعديلات'}
      </button>

      {saved && <p className="text-green-600 mt-2">✅ تم الحفظ بنجاح</p>}
    </form>
  );
}
====[ END FILE: src/components/dashboard/settings/StoreInfoTab.tsx ]================================

====[ START FILE: src/components/dashboard/settings/WidgetEmbedTab.tsx (4.0 KB) ]===================
"use client";
import { useEffect, useMemo, useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";

type StoreInfo = {
  storeUid?: string;        // نتوقع صيغة مثل: "salla:1234567"
  storeId?: string;         // احتياطي
  name?: string;
};

function buildSnippet(storeUid: string) {
  return `<!-- Theqah Reviews Widget (Salla) -->
<div id="theqah-reviews"
     class="theqah-reviews"
     data-store="${storeUid}"
     data-product=""
     data-limit="10"
     data-lang="ar"
     data-theme="light"></div>

<script>
(function(){
  var m = (location.pathname||"").match(/\\/p(\\d+)(?:\\/|$)/);
  var pid = m ? m[1] : "";
  var host = document.querySelector('#theqah-reviews.theqah-reviews');
  if (host && pid) host.setAttribute('data-product', pid);
  if (!document.querySelector('script[data-theqah-widget]')) {
    var s=document.createElement('script');
    s.src='https://www.theqah.com.sa/widgets/theqah-widget.js';
    s.async=true;
    s.setAttribute('data-theqah-widget','1');
    document.body.appendChild(s);
  }
})();
</script>
<!-- /Theqah Reviews Widget -->`;
}

export default function WidgetEmbedTab() {
  const [loading, setLoading] = useState(true);
  const [store, setStore] = useState<StoreInfo | null>(null);
  const [copied, setCopied] = useState(false);

  useEffect(() => {
    let mounted = true;
    (async () => {
      try {
        const res = await fetch("/api/store/info");
        const j = await res.json();
        if (mounted) {
          // نحاول بناء storeUid: لو عندك بالفعل بصيغة "salla:ID" استخدمها
          // وإلا إن كان لديك storeId رقمي من سلة، لفه إلى "salla:{id}"
          const storeUid: string | undefined =
            j?.store?.storeUid ||
            (j?.store?.salla?.storeId ? `salla:${j.store.salla.storeId}` : undefined);

          setStore({
            storeUid,
            storeId: j?.store?.salla?.storeId,
            name: j?.store?.name,
          });
        }
      } catch {
        // تجاهل الخطأ وعرض رسالة لاحقًا إذا رغبت
      } finally {
        if (mounted) setLoading(false);
      }
    })();
    return () => { mounted = false; };
  }, []);

  const snippet = useMemo(() => {
    const suid = store?.storeUid || (store?.storeId ? `salla:${store.storeId}` : "");
    return suid ? buildSnippet(suid) : "";
  }, [store]);

  const copyToClipboard = async () => {
    if (!snippet) return;
    await navigator.clipboard.writeText(snippet);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  return (
    <Card className="mt-4">
      <CardContent>
        <h2 className="text-lg font-semibold mb-2">تضمين الودجت</h2>
        <ol className="list-decimal ms-5 text-sm space-y-1 mb-3">
          <li>اذهب إلى <b>لوحة تحكم سلة → المظهر → تخصيص → إضافة كود HTML قبل &lt;/body&gt;</b>.</li>
          <li>انسخ الكود التالي وألصقه كما هو.</li>
          <li>احفظ التغييرات ثم افتح صفحة أي منتج لترى التقييمات.</li>
        </ol>

        {loading ? (
          <p className="text-sm opacity-80">جاري التحميل…</p>
        ) : snippet ? (
          <>
            <textarea
              readOnly
              value={snippet}
              className="w-full h-64 font-mono text-xs p-2 border rounded mb-3"
            />
            <Button onClick={copyToClipboard}>
              {copied ? "✔ تم النسخ" : "📋 نسخ الكود"}
            </Button>
          </>
        ) : (
          <p className="text-sm text-red-600">
            تعذّر توليد الكود — لم يتم العثور على store_id. تأكد من إتمام الربط (تنزيل التطبيق) بنجاح.
          </p>
        )}
      </CardContent>
    </Card>
  );
}
====[ END FILE: src/components/dashboard/settings/WidgetEmbedTab.tsx ]==============================

====[ START FILE: src/components/dashboard/settings/ZidIntegrationTab.tsx (1.9 KB) ]================
'use client';

import { useState, useEffect } from 'react';

export default function ZidIntegrationTab() {
  const [connected, setConnected] = useState<boolean | null>(null);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    const fetchStatus = async () => {
      try {
        const r = await fetch('/api/zid/status');
        if (r.ok) {
          const data = await r.json();
          setConnected(Boolean(data?.connected));
        } else {
          setConnected(false);
        }
      } catch {
        setConnected(false);
      }
    };
    fetchStatus();
  }, []);

  const connect = () => {
    window.location.href = '/connect/zid';
  };

  const disconnect = async () => {
    setLoading(true);
    try {
      await fetch('/api/zid/disconnect', { method: 'POST' });
      setConnected(false);
    } catch {
      // ignore
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="space-y-4">
      <p className="text-sm text-gray-700">
        اربط متجرك على <strong>زد</strong> لإرسال روابط التقييم تلقائيًا بعد الطلبات.
      </p>

      {connected === null ? (
        <p>جارٍ التحقق من حالة الربط…</p>
      ) : connected ? (
        <div className="flex items-center gap-3">
          <span className="text-green-700">✅ متصل</span>
          <button
            onClick={disconnect}
            disabled={loading}
            className="px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm"
          >
            {loading ? 'جاري الفك…' : 'فك الارتباط'}
          </button>
        </div>
      ) : (
        <button
          onClick={connect}
          className="px-4 py-2 bg-green-700 text-white rounded hover:bg-green-800"
        >
          ربط زد الآن
        </button>
      )}
    </div>
  );
}
====[ END FILE: src/components/dashboard/settings/ZidIntegrationTab.tsx ]===========================

====[ START FILE: src/components/dashboard/StoreSettings.tsx (19.5 KB) ]============================
// src/components/dashboard/StoreSettings.tsx
'use client';

import { useState } from 'react';
import type { LucideIcon } from 'lucide-react';
import {
  Settings,
  Link as LinkIcon,
  MessageSquare,
  Store,
  Sparkles,
  ChevronRight,
  Zap,
  FileText,
  Hash,
} from 'lucide-react';

import ZidIntegrationTab from '@/components/dashboard/settings/ZidIntegrationTab';
import MessageSettings from '@/components/dashboard/settings/MessageSettings';
import SallaIntegrationTab from '@/components/dashboard/settings/SallaIntegrationTab';

type TabMeta = {
  id: 'الربط' | 'الرسائل' | 'معلومات المتجر';
  label: string;
  icon: LucideIcon;
  color: string; // tailwind gradient
  description: string;
};

const settingsTabs: TabMeta[] = [
  {
    id: 'الربط',
    label: 'الربط',
    icon: LinkIcon,
    color: 'from-blue-500 to-blue-600',
    description: 'ربط المتجر مع المنصات',
  },
  {
    id: 'الرسائل',
    label: 'الرسائل',
    icon: MessageSquare,
    color: 'from-emerald-500 to-emerald-600',
    description: 'إعدادات الرسائل والإشعارات',
  },
  {
    id: 'معلومات المتجر',
    label: 'معلومات المتجر',
    icon: Store,
    color: 'from-purple-500 to-purple-600',
    description: 'بيانات المتجر والإعدادات العامة',
  },
];

const TabButton = ({
  tab,
  isActive,
  onClick,
  delay = 0,
}: {
  tab: TabMeta;
  isActive: boolean;
  onClick: () => void;
  delay?: number;
}) => (
  <button
    onClick={onClick}
    className={`group relative overflow-hidden rounded-2xl border transition-all duration-500 transform hover:-translate-y-1 hover:scale-105 ${
      isActive
        ? 'bg-white shadow-2xl border-gray-200/50 scale-105'
        : 'bg-white/60 backdrop-blur-sm border-gray-200/30 hover:bg-white/80 hover:shadow-xl'
    }`}
    style={{
      animationDelay: `${delay}ms`,
      animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards',
      opacity: 0,
      transform: 'translateY(30px)',
    }}
  >
    {/* Animated Background */}
    <div className={`absolute inset-0 bg-gradient-to-br ${tab.color} opacity-0 group-hover:opacity-10 transition-opacity duration-500`} />
    {/* Active State Glow */}
    {isActive && <div className={`absolute inset-0 bg-gradient-to-br ${tab.color} opacity-5`} />}

    <div className="relative z-10 p-6 text-center">
      <div
        className={`w-16 h-16 mx-auto mb-4 bg-gradient-to-br ${tab.color} rounded-2xl flex items-center justify-center shadow-xl group-hover:shadow-2xl transition-all duration-300 group-hover:rotate-6 group-hover:scale-110 ${isActive ? 'scale-110' : ''}`}
      >
        <tab.icon className="w-8 h-8 text-white" />
      </div>

      <h3 className={`text-lg font-bold mb-2 transition-colors duration-300 ${isActive ? 'text-gray-900' : 'text-gray-700 group-hover:text-gray-900'}`}>
        {tab.label}
      </h3>

      <p className="text-sm text-gray-600 group-hover:text-gray-700 transition-colors duration-300">
        {tab.description}
      </p>

      {/* Arrow Indicator */}
      <div
        className={`mt-4 flex items-center justify-center transition-all duration-300 ${
          isActive ? 'opacity-100 translate-x-0' : 'opacity-0 translate-x-2 group-hover:opacity-100 group-hover:translate-x-0'
        }`}
      >
        <ChevronRight className="w-5 h-5 text-gray-400" />
      </div>
    </div>

    {/* Shine Effect */}
    <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000 ease-out" />
  </button>
);

const ContentCard = ({ children, delay = 0 }: { children: React.ReactNode; delay?: number }) => (
  <div
    className="relative bg-white/90 backdrop-blur-sm rounded-3xl border border-gray-200/50 p-10 shadow-2xl hover:shadow-3xl transition-all duration-700 transform hover:-translate-y-1 overflow-hidden group"
    style={{
      animationDelay: `${delay}ms`,
      animation: 'slideInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards',
      opacity: 0,
      transform: 'translateY(50px) rotateX(5deg)',
      perspective: '1000px',
    }}
  >
    {/* Animated Background */}
    <div className="absolute inset-0 bg-gradient-to-br from-blue-50/30 via-purple-50/20 to-pink-50/30 opacity-0 group-hover:opacity-100 transition-opacity duration-700" />
    {/* Floating Orbs */}
    <div className="absolute -top-8 -right-8 w-32 h-32 bg-gradient-to-br from-blue-400/10 to-purple-600/10 rounded-full blur-2xl group-hover:scale-150 transition-all duration-1000" />
    <div className="absolute -bottom-8 -left-8 w-24 h-24 bg-gradient-to-tr from-pink-400/10 to-orange-600/10 rounded-full blur-2xl group-hover:scale-125 transition-all duration-1000 delay-200" />
    <div className="relative z-10">{children}</div>
  </div>
);

export default function StoreSettings({
  storeUid,
  storeName,
}: {
  storeUid?: string;
  storeName?: string;
}) {
  const [activeTab, setActiveTab] = useState<TabMeta['id']>('الربط');

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-purple-50/30 p-8 space-y-12">
      {/* Animated Header */}
      <div className="text-center space-y-6 mb-16">
        <div
          className="inline-flex items-center gap-4 px-8 py-4 bg-white/80 backdrop-blur-sm rounded-full shadow-2xl border border-gray-200/50 hover:scale-105 transition-all duration-500 group"
          style={{
            animation: 'slideInDown 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards',
            opacity: 0,
            transform: 'translateY(-50px)',
          }}
        >
          <div className="w-12 h-12 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center shadow-lg group-hover:rotate-12 transition-all duration-300">
            <Settings className="w-6 h-6 text-white animate-spin" style={{ animationDuration: '8s' }} />
          </div>
          <h1 className="text-3xl font-bold bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
            إعدادات المتجر المتقدمة
          </h1>
          <Sparkles className="w-6 h-6 text-purple-500 animate-pulse" />
        </div>

        {/* Badges for store name & UID */}
        {(storeName || storeUid) && (
          <div className="flex items-center justify-center gap-3">
            {storeName && (
              <span className="inline-flex items-center gap-2 px-3 py-1 rounded-lg bg-emerald-50 text-emerald-700 border border-emerald-200">
                <Store className="w-4 h-4" />
                <strong>المتجر:</strong> {storeName}
              </span>
            )}
            {storeUid && (
              <span className="inline-flex items-center gap-2 px-3 py-1 rounded-lg bg-gray-50 text-gray-700 border border-gray-200">
                <Hash className="w-4 h-4" />
                <strong>UID:</strong> {storeUid}
              </span>
            )}
          </div>
        )}

        <p className="text-gray-600 max-w-3xl mx-auto text-lg leading-relaxed">
          تخصيص وإدارة جميع جوانب متجرك الإلكتروني بواجهة حديثة وتفاعلية
        </p>
      </div>

      {/* Tabs */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
        {settingsTabs.map((tab, index) => (
          <TabButton
            key={tab.id}
            tab={tab}
            isActive={activeTab === tab.id}
            onClick={() => setActiveTab(tab.id)}
            delay={index * 100}
          />
        ))}
      </div>

      {/* Tab Content */}
      <ContentCard delay={400}>
        {activeTab === 'الربط' && (
          <div className="space-y-8">
            {/* Header Section */}
            <div className="text-center space-y-4 pb-8 border-b border-gray-200/50">
              <div className="w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-3xl flex items-center justify-center mx-auto shadow-2xl hover:rotate-12 hover:scale-110 transition-all duration-500 group">
                <LinkIcon className="w-10 h-10 text-white group-hover:scale-110 transition-transform duration-300" />
              </div>
              <h2 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                🔗 الربط مع المتجر
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto leading-relaxed">
                يمكنك ربط متجرك بسهولة مع المنصات الرائدة لتحسين تجربة العملاء وزيادة المبيعات
              </p>
            </div>

            {/* Integration Cards */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <div
                className="group relative bg-gradient-to-br from-white to-gray-50/50 rounded-2xl border border-gray-200/50 p-8 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 overflow-hidden"
                style={{
                  animationDelay: '500ms',
                  animation: 'slideInLeft 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards',
                  opacity: 0,
                  transform: 'translateX(-30px)',
                }}
              >
                <div className="absolute inset-0 bg-gradient-to-br from-emerald-50/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
                <div className="relative z-10">
                  <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center gap-3">
                    <Zap className="w-6 h-6 text-emerald-600" />
                    منصة سلة
                  </h3>
                   <SallaIntegrationTab storeUid={storeUid} />
                </div>
              </div>

              <div
                className="group relative bg-gradient-to-br from-white to-gray-50/50 rounded-2xl border border-gray-200/50 p-8 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 overflow-hidden"
                style={{
                  animationDelay: '600ms',
                  animation: 'slideInRight 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards',
                  opacity: 0,
                  transform: 'translateX(30px)',
                }}
              >
                <div className="absolute inset-0 bg-gradient-to-br from-blue-50/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
                <div className="relative z-10">
                  <h3 className="text-xl font-bold text-gray-900 mb-4 flex items-center gap-3">
                    <Zap className="w-6 h-6 text-blue-600" />
                    منصة زد
                  </h3>
                  <ZidIntegrationTab />
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'الرسائل' && (
          <div className="space-y-8">
            {/* Header Section */}
            <div className="text-center space-y-4 pb-8 border-b border-gray-200/50">
              <div className="w-20 h-20 bg-gradient-to-br from-emerald-500 to-green-600 rounded-3xl flex items-center justify-center mx-auto shadow-2xl hover:rotate-12 hover:scale-110 transition-all duration-500 group">
                <MessageSquare className="w-10 h-10 text-white group-hover:scale-110 transition-transform duration-300" />
              </div>
              <h2 className="text-3xl font-bold bg-gradient-to-r from-emerald-600 to-green-600 bg-clip-text text-transparent">
                ✉️ إعدادات الرسائل
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto leading-relaxed">
                تخصيص رسائل التقييم والإشعارات لتحسين التواصل مع عملائك
              </p>
            </div>

            {/* Message Settings Content */}
            <div
              className="group relative bg-gradient-to-br from-white to-emerald-50/30 rounded-2xl border border-gray-200/50 p-8 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-1 overflow-hidden"
              style={{
                animationDelay: '500ms',
                animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards',
                opacity: 0,
                transform: 'translateY(30px)',
              }}
            >
              <div className="absolute inset-0 bg-gradient-to-br from-emerald-50/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
              <div className="relative z-10">
                <MessageSettings />
              </div>
            </div>
          </div>
        )}

        {activeTab === 'معلومات المتجر' && (
          <div className="space-y-8">
            {/* Header Section */}
            <div className="text-center space-y-4 pb-8 border-b border-gray-200/50">
              <div className="w-20 h-20 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-3xl flex items-center justify-center mx-auto shadow-2xl hover:rotate-12 hover:scale-110 transition-all duration-500 group">
                <Store className="w-10 h-10 text-white group-hover:scale-110 transition-transform duration-300" />
              </div>
              <h2 className="text-3xl font-bold bg-gradient-to-r from-purple-600 to-indigo-600 bg-clip-text text-transparent">
                📄 معلومات المتجر
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto leading-relaxed">
                إدارة بيانات المتجر الأساسية والإعدادات العامة
              </p>
            </div>

            {/* Store Info Content */}
            <div
              className="group relative bg-gradient-to-br from-white to-purple-50/30 rounded-2xl border border-gray-200/50 p-12 shadow-2xl hover:shadow-3xl transition-all duration-500 transform hover:-translate-y-1 overflow-hidden text-center"
              style={{
                animationDelay: '500ms',
                animation: 'slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards',
                opacity: 0,
                transform: 'translateY(30px)',
              }}
            >
              <div className="absolute inset-0 bg-gradient-to-br from-purple-50/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500" />

              {/* Floating Elements */}
              <div className="absolute top-8 left-8 w-16 h-16 bg-gradient-to-br from-purple-400/20 to-pink-400/20 rounded-full blur-xl group-hover:scale-150 transition-all duration-1000" />
              <div className="absolute bottom-8 right-8 w-12 h-12 bg-gradient-to-br from-blue-400/20 to-purple-400/20 rounded-full blur-xl group-hover:scale-125 transition-all duration-1000 delay-200" />

              <div className="relative z-10 space-y-6">
                <div className="w-24 h-24 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-full flex items-center justify-center mx-auto shadow-2xl group-hover:rotate-12 group-hover:scale-110 transition-all duration-500">
                  <Sparkles className="w-12 h-12 text-white animate-pulse" />
                </div>

                <div className="space-y-3">
                  <h3 className="text-2xl font-bold text-gray-900">قريباً...</h3>
                  <p className="text-gray-600 text-lg leading-relaxed max-w-md mx-auto">
                    الاسم، البريد، روابط الدعم، الشروط والسياسات، وإعدادات متقدمة أخرى
                  </p>
                </div>

                {/* Feature Preview Cards */}
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 mt-8">
                  {[
                    { label: 'معلومات الاتصال', icon: MessageSquare },
                    { label: 'روابط الدعم', icon: LinkIcon },
                    { label: 'الشروط والأحكام', icon: FileText },
                    { label: 'إعدادات متقدمة', icon: Settings },
                  ].map((item, index) => (
                    <div
                      key={item.label}
                      className="bg-white/60 backdrop-blur-sm rounded-xl border border-gray-200/30 p-4 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 group/item"
                      style={{
                        animationDelay: `${700 + index * 100}ms`,
                        animation: 'slideInUp 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards',
                        opacity: 0,
                        transform: 'translateY(20px)',
                      }}
                    >
                      <div className="flex items-center gap-3">
                        <div className="w-10 h-10 bg-gradient-to-br from-gray-400 to-gray-500 rounded-lg flex items-center justify-center shadow-md group-hover/item:rotate-6 group-hover/item:scale-110 transition-all duration-300">
                          <item.icon className="w-5 h-5 text-white" />
                        </div>
                        <span className="text-sm font-medium text-gray-700 group-hover/item:text-gray-900 transition-colors">
                          {item.label}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}
      </ContentCard>

      {/* Styles */}
      <style jsx>{`
        @keyframes slideInUp {
          from {
            opacity: 0;
            transform: translateY(50px) rotateX(10deg);
          }
          to {
            opacity: 1;
            transform: translateY(0) rotateX(0deg);
          }
        }

        @keyframes slideInDown {
          from {
            opacity: 0;
            transform: translateY(-50px) rotateX(-10deg);
          }
          to {
            opacity: 1;
            transform: translateY(0) rotateX(0deg);
          }
        }

        @keyframes slideInLeft {
          from {
            opacity: 0;
            transform: translateX(-50px) rotateY(10deg);
          }
          to {
            opacity: 1;
            transform: translateX(0) rotateY(0deg);
          }
        }

        @keyframes slideInRight {
          from {
            opacity: 0;
            transform: translateX(50px) rotateY(-10deg);
          }
          to {
            opacity: 1;
            transform: translateX(0) rotateY(0deg);
          }
        }

        @keyframes float {
          0%,
          100% {
            transform: translateY(0px) rotate(0deg);
          }
          50% {
            transform: translateY(-15px) rotate(3deg);
          }
        }

        @keyframes glow-pulse {
          0%,
          100% {
            box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
          }
          50% {
            box-shadow: 0 0 40px rgba(59, 130, 246, 0.6), 0 0 60px rgba(147, 51, 234, 0.3);
          }
        }

        .animate-float {
          animation: float 6s ease-in-out infinite;
        }

        .animate-glow-pulse {
          animation: glow-pulse 3s ease-in-out infinite;
        }
      `}</style>
    </div>
  );
}
====[ END FILE: src/components/dashboard/StoreSettings.tsx ]========================================

====[ START FILE: src/components/dashboard/Support.tsx (4.0 KB) ]===================================
'use client';

import { useState } from 'react';

export default function SupportTab() {
  const [subject, setSubject] = useState('');
  const [message, setMessage] = useState('');
  const [sent, setSent] = useState(false);
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    try {
      await fetch('/api/support-ticket', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ subject, message }),
      });
      setSent(true);
      setSubject('');
      setMessage('');
    } catch {
      alert('حدث خطأ أثناء إرسال التذكرة');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="space-y-8">
      {/* FAQ */}
      <div>
        <h2 className="text-xl font-semibold text-green-800 mb-4">❓ الأسئلة الشائعة</h2>
        <ul className="space-y-3">
          <li className="border p-3 rounded">
            <strong>كيف أستخدم منصة ثقة؟</strong>
            <p className="text-sm text-gray-600 mt-2">
              قم بربط متجرك، واضبط الرسائل، وسيتم إرسال طلبات التقييم تلقائيًا.
            </p>
          </li>
          <li className="border p-3 rounded">
            <strong>كيف أربط متجري من سلة أو زد؟</strong>
            <p className="text-sm text-gray-600 mt-2">
              من تبويب &quot;الإعدادات&quot; يمكنك الضغط على زر &quot;ربط بـ سلة&quot; أو &quot;زد&quot;.
            </p>
          </li>
        </ul>
      </div>

      {/* Support Ticket */}
      <div>
        <h2 className="text-xl font-semibold text-green-800 mb-4">📨 فتح تذكرة دعم</h2>
        {sent ? (
          <p className="text-green-700 font-medium">
            تم إرسال التذكرة بنجاح! سنرد عليك خلال 24 ساعة.
          </p>
        ) : (
          <form onSubmit={handleSubmit} className="space-y-4 max-w-xl">
            <div>
              <label className="block text-sm font-medium">عنوان التذكرة</label>
              <input
                required
                className="w-full mt-1 border rounded px-3 py-2"
                value={subject}
                onChange={(e) => setSubject(e.target.value)}
              />
            </div>
            <div>
              <label className="block text-sm font-medium">تفاصيل المشكلة</label>
              <textarea
                required
                className="w-full mt-1 border rounded px-3 py-2 min-h-[100px]"
                value={message}
                onChange={(e) => setMessage(e.target.value)}
              />
            </div>
            <button
              type="submit"
              disabled={loading}
              className="bg-green-700 text-white px-4 py-2 rounded hover:bg-green-800"
            >
              {loading ? 'جاري الإرسال...' : 'إرسال التذكرة'}
            </button>
          </form>
        )}
      </div>

      {/* Direct Contact */}
      <div>
        <h2 className="text-xl font-semibold text-green-800 mb-4">📞 تواصل مباشر</h2>
        <ul className="space-y-2 text-sm text-gray-700">
          <li>
            واتساب:{' '}
            <a
              href="https://wa.me/966500000000"
              target="_blank"
              rel="noopener noreferrer"
              className="text-green-700 underline"
            >
              راسلنا عبر واتساب
            </a>
          </li>
          <li>
            بريد الدعم:{' '}
            <a href="mailto:support@theqah.com.sa" className="text-green-700 underline">
              support@theqah.com.sa
            </a>
          </li>
        </ul>
      </div>
    </div>
  );
}
====[ END FILE: src/components/dashboard/Support.tsx ]==============================================

====[ START FILE: src/components/layout/admin/AdminLayout.tsx (478 B) ]=============================
// src/components/layout/admin/AdminLayout.tsx
import AdminNavbar from './AdminNavbar';
import AdminSidebar from './AdminSidebar';

export default function AdminLayout({ children }: { children: React.ReactNode }) {
  return (
    <div className="flex min-h-screen bg-gray-100 text-gray-900">
      <AdminSidebar />
      <div className="flex flex-col flex-1">
        <AdminNavbar />
        <main className="p-6">{children}</main>
      </div>
    </div>
  );
}
====[ END FILE: src/components/layout/admin/AdminLayout.tsx ]=======================================

====[ START FILE: src/components/layout/admin/AdminNavbar.tsx (525 B) ]=============================
'use client';

import Image from 'next/image';

export default function AdminNavbar() {
  return (
    <header className="w-full bg-white px-4 py-3 shadow border-b">
      <div className="flex justify-between items-center">
        <div className="flex items-center gap-2">
          <Image src="/logo.png" alt="Thiqah Logo" width={120} height={40} className="h-8 w-auto" />
          <h1 className="text-xl font-bold text-gray-800">لوحة المشرف</h1>
        </div>
      </div>
    </header>
  );
}
====[ END FILE: src/components/layout/admin/AdminNavbar.tsx ]=======================================

====[ START FILE: src/components/layout/admin/AdminSidebar.tsx (1.0 KB) ]===========================
// src/components/layout/admin/AdminSidebar.tsx
'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import clsx from 'clsx';

const links = [
  { href: '/admin/dashboard', label: 'الرئيسية' },
  { href: '/admin/stores', label: 'المتاجر' },
  { href: '/admin/reviews', label: 'كل التقييمات' },
  { href: '/admin/abuse-reports', label: 'بلاغات الإساءة' },
];

export default function AdminSidebar() {
  const pathname = usePathname();

  return (
    <aside className="w-64 h-screen bg-gray-900 text-white p-4 fixed top-0 right-0 z-40 pt-16">
      <nav className="flex flex-col gap-2">
        {links.map(({ href, label }) => (
          <Link
            key={href}
            href={href}
            className={clsx(
              'px-4 py-2 rounded text-right',
              pathname === href ? 'bg-primary text-white' : 'hover:bg-gray-800'
            )}
          >
            {label}
          </Link>
        ))}
      </nav>
    </aside>
  );
}
====[ END FILE: src/components/layout/admin/AdminSidebar.tsx ]======================================

====[ START FILE: src/components/layout/customer/CustomerLayout.tsx (373 B) ]=======================
// src/components/layout/customer/CustomerLayout.tsx
import CustomerNavbar from './CustomerNavbar';

export default function CustomerLayout({ children }: { children: React.ReactNode }) {
  return (
    <div className="min-h-screen bg-white font-sans text-gray-800">
      <CustomerNavbar />
      <main className="pt-16 px-4">{children}</main>
    </div>
  );
}
====[ END FILE: src/components/layout/customer/CustomerLayout.tsx ]=================================

====[ START FILE: src/components/layout/customer/CustomerNavbar.tsx (409 B) ]=======================
'use client';

import Image from 'next/image';

export default function CustomerNavbar() {
  return (
    <nav className="w-full bg-white shadow fixed top-0 left-0 z-50 px-4 py-3 border-b">
      <div className="max-w-6xl mx-auto flex items-center justify-between">
        <Image src="/logo.png" alt="Thiqah Logo" width={120} height={40} className="h-8 w-auto" />
      </div>
    </nav>
  );
}
====[ END FILE: src/components/layout/customer/CustomerNavbar.tsx ]=================================

====[ START FILE: src/components/layout/store/StoreLayout.tsx (477 B) ]=============================
// src/components/layout/store/StoreLayout.tsx
import StoreNavbar from './StoreNavbar';
import StoreSidebar from './StoreSidebar';

export default function StoreLayout({ children }: { children: React.ReactNode }) {
  return (
    <div className="flex min-h-screen bg-gray-50 text-gray-800">
      <StoreSidebar />
      <div className="flex flex-col flex-1">
        <StoreNavbar />
        <main className="p-6">{children}</main>
      </div>
    </div>
  );
}
====[ END FILE: src/components/layout/store/StoreLayout.tsx ]=======================================

====[ START FILE: src/components/layout/store/StoreNavbar.tsx (525 B) ]=============================
'use client';

import Image from 'next/image';

export default function StoreNavbar() {
  return (
    <header className="w-full bg-white px-4 py-3 shadow border-b">
      <div className="flex justify-between items-center">
        <div className="flex items-center gap-2">
          <Image src="/logo.png" alt="Thiqah Logo" width={120} height={40} className="h-8 w-auto" />
          <h1 className="text-xl font-bold text-gray-800">لوحة المتجر</h1>
        </div>
      </div>
    </header>
  );
}
====[ END FILE: src/components/layout/store/StoreNavbar.tsx ]=======================================

====[ START FILE: src/components/layout/store/StoreSidebar.tsx (1.0 KB) ]===========================
// src/components/layout/store/StoreSidebar.tsx
'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import clsx from 'clsx';

const links = [
  { href: '/dashboard', label: 'الرئيسية' },
  { href: '/orders', label: 'الطلبات' },
  { href: '/settings', label: 'الإعدادات' },
  { href: '/reviews', label: 'التقييمات' },
];

export default function StoreSidebar() {
  const pathname = usePathname();

  return (
    <aside className="w-64 h-screen bg-gray-50 border-e p-4 fixed top-0 right-0 z-40 pt-16">
      <nav className="flex flex-col gap-2">
        {links.map(({ href, label }) => (
          <Link
            key={href}
            href={href}
            className={clsx(
              'px-4 py-2 rounded text-right',
              pathname === href ? 'bg-primary text-white' : 'text-gray-700 hover:bg-gray-100'
            )}
          >
            {label}
          </Link>
        ))}
      </nav>
    </aside>
  );
}
====[ END FILE: src/components/layout/store/StoreSidebar.tsx ]======================================

====[ START FILE: src/components/LoadingSpinner.tsx (3.3 KB) ]======================================
"use client";

import { useEffect, useState } from 'react';

interface LoadingSpinnerProps {
  onComplete?: () => void;
  duration?: number;
}

export default function LoadingSpinner({ onComplete, duration = 2000 }: LoadingSpinnerProps) {
  const [progress, setProgress] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setProgress(prev => {
        const newProgress = prev + (100 / (duration / 50));
        if (newProgress >= 100) {
          clearInterval(interval);
          setTimeout(() => onComplete?.(), 300);
          return 100;
        }
        return newProgress;
      });
    }, 50);

    return () => clearInterval(interval);
  }, [duration, onComplete]);

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      {/* 3D Loading Cube */}
      <div className="relative">
        <div className="w-16 h-16 relative transform-gpu">
          <div className="absolute inset-0 bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 rounded-lg animate-pulse transform rotate-45 scale-75"></div>
          <div className="absolute inset-0 bg-gradient-to-br from-cyan-400 via-blue-500 to-purple-600 rounded-lg animate-bounce transform -rotate-12 scale-90 opacity-80"></div>
          <div className="absolute inset-0 bg-gradient-to-br from-purple-500 via-pink-500 to-red-500 rounded-lg animate-ping transform rotate-12 scale-110 opacity-60"></div>
        </div>
        
        {/* Orbital rings */}
        <div className="absolute -inset-8">
          <div className="w-32 h-32 border-2 border-blue-300/30 rounded-full animate-spin"></div>
          <div className="absolute inset-4 w-24 h-24 border-2 border-purple-300/30 rounded-full animate-spin" style={{ animationDirection: 'reverse', animationDuration: '3s' }}></div>
        </div>
      </div>

      {/* Loading Text with Typewriter Effect */}
      <div className="text-center space-y-4">
        <div className="flex items-center justify-center space-x-1">
          <span className="text-2xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
            جاري التحويل
          </span>
          <div className="flex space-x-1">
            <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce"></div>
            <div className="w-2 h-2 bg-purple-500 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
            <div className="w-2 h-2 bg-pink-500 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
          </div>
        </div>
        
        <p className="text-muted-foreground text-lg">يتم توجيهك إلى لوحة التحكم</p>
      </div>

      {/* Progress Bar */}
      <div className="w-80 max-w-md bg-gray-200 rounded-full h-2 overflow-hidden">
        <div 
          className="h-2 bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 rounded-full transition-all duration-100 ease-out relative"
          style={{ width: `${progress}%` }}
        >
          <div className="absolute inset-0 bg-white/30 rounded-full animate-pulse"></div>
        </div>
      </div>
      
      {/* Progress Percentage */}
      <div className="text-sm font-medium text-muted-foreground">
        {Math.round(progress)}%
      </div>
    </div>
  );
}
====[ END FILE: src/components/LoadingSpinner.tsx ]=================================================

====[ START FILE: src/components/NavbarLanding.tsx (4.2 KB) ]=======================================
// src/components/NavbarLanding.tsx
'use client';

import Link from 'next/link';
import Image from 'next/image';
import { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';
import { useState } from 'react';

export default function NavbarLanding() {
  const [open, setOpen] = useState(false);

  const NavLinks = (
    <>
      <Link href="/support" className="hover:text-green-900 transition">الدعم</Link>
      <Link href="/terms" className="hover:text-green-900 transition">الشروط</Link>
      <Link href="/privacy-policy" className="hover:text-green-900 transition">الخصوصية</Link>
      <Link href="/report" className="hover:text-green-900 transition">الإبلاغ</Link>
      <Link href="/faq" className="hover:text-green-900 transition">الأسئلة الشائعة</Link>
    </>
  );

  return (
    <nav className="w-full flex items-center justify-between px-6 py-4 shadow-md bg-white fixed top-0 z-50" dir="rtl">
      {/* Logo + Name */}
      <Link href="/" className="flex items-center gap-4 group">
        <div className="w-14 h-14 rounded-full overflow-hidden border border-green-300 shadow-sm group-hover:scale-105 transition-transform">
          <Image
            src="/logo.png"
            alt="شعار ثقة"
            width={56}
            height={56}
            className="object-cover w-full h-full"
            priority
          />
        </div>
        <span className="text-2xl font-extrabold text-green-800 tracking-tight group-hover:text-green-900 transition-colors">
          ثقة
        </span>
      </Link>

      {/* Desktop Navigation */}
      <div className="hidden md:flex items-center gap-6 text-sm text-green-700 font-medium">
        {NavLinks}
        <Link
          href="/login"
          className="bg-green-700 text-white px-5 py-2 rounded-full hover:bg-green-800 transition"
        >
          تسجيل الدخول
        </Link>
      </div>

      {/* Mobile */}
      <div className="md:hidden flex items-center gap-4">
        <Link
          href="/login"
          className="text-green-700 hover:text-green-900 font-semibold transition"
        >
          دخول
        </Link>

        <Sheet open={open} onOpenChange={setOpen}>
          <SheetTrigger aria-label="فتح القائمة" className="p-2 rounded-md border border-green-200">
            {/* أيقونة همبرجر بسيطة بـ SVG عشان ما نعتمد مكتبة خارجية */}
            <svg width="22" height="22" viewBox="0 0 24 24" fill="none" aria-hidden="true">
              <path d="M4 6h16M4 12h16M4 18h16" stroke="#166534" strokeWidth="2" strokeLinecap="round"/>
            </svg>
          </SheetTrigger>
          <SheetContent side="right" className="w-[80vw] sm:w-[360px]">
            <div className="mt-8 space-y-4 text-green-800 font-medium text-base">
              <Link href="/" onClick={() => setOpen(false)} className="block hover:text-green-900 transition">الرئيسية</Link>
              <Link href="/support" onClick={() => setOpen(false)} className="block hover:text-green-900 transition">الدعم</Link>
              <Link href="/terms" onClick={() => setOpen(false)} className="block hover:text-green-900 transition">الشروط</Link>
              <Link href="/privacy-policy" onClick={() => setOpen(false)} className="block hover:text-green-900 transition">الخصوصية</Link>
              <Link href="/report" onClick={() => setOpen(false)} className="block hover:text-green-900 transition">الإبلاغ</Link>
              <Link href="/faq" onClick={() => setOpen(false)} className="block hover:text-green-900 transition">الأسئلة الشائعة</Link>

              <div className="pt-4">
                <Link
                  href="/signup"
                  onClick={() => setOpen(false)}
                  className="block text-center bg-green-700 text-white px-5 py-2 rounded-full hover:bg-green-800 transition"
                >
                  ابدأ الآن مجانًا
                </Link>
              </div>
            </div>
          </SheetContent>
        </Sheet>
      </div>
    </nav>
  );
}
====[ END FILE: src/components/NavbarLanding.tsx ]==================================================

====[ START FILE: src/components/ui/alert.tsx (1.6 KB) ]============================================
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const alertVariants = cva(
  "relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Alert = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
  <div
    ref={ref}
    role="alert"
    className={cn(alertVariants({ variant }), className)}
    {...props}
  />
))
Alert.displayName = "Alert"

const AlertTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h5
    ref={ref}
    className={cn("mb-1 font-medium leading-none tracking-tight", className)}
    {...props}
  />
))
AlertTitle.displayName = "AlertTitle"

const AlertDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm [&_p]:leading-relaxed", className)}
    {...props}
  />
))
AlertDescription.displayName = "AlertDescription"

export { Alert, AlertTitle, AlertDescription }
====[ END FILE: src/components/ui/alert.tsx ]=======================================================

====[ START FILE: src/components/ui/badge.tsx (1.1 KB) ]============================================
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }
====[ END FILE: src/components/ui/badge.tsx ]=======================================================

====[ START FILE: src/components/ui/button.tsx (1.9 KB) ]===========================================
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }
====[ END FILE: src/components/ui/button.tsx ]======================================================

====[ START FILE: src/components/ui/card.tsx (1.8 KB) ]=============================================
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("font-semibold leading-none tracking-tight", className)}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }
====[ END FILE: src/components/ui/card.tsx ]========================================================

====[ START FILE: src/components/ui/input.tsx (768 B) ]=============================================
import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }
====[ END FILE: src/components/ui/input.tsx ]=======================================================

====[ START FILE: src/components/ui/label.tsx (710 B) ]=============================================
import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <LabelPrimitive.Root
    ref={ref}
    className={cn(labelVariants(), className)}
    {...props}
  />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }
====[ END FILE: src/components/ui/label.tsx ]=======================================================

====[ START FILE: src/components/ui/select.tsx (5.6 KB) ]===========================================
import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"

import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
  SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("px-2 py-1.5 text-sm font-semibold", className)}
    {...props}
  />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute right-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>
    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
}
====[ END FILE: src/components/ui/select.tsx ]======================================================

====[ START FILE: src/components/ui/separator.tsx (756 B) ]=========================================
import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(
  (
    { className, orientation = "horizontal", decorative = true, ...props },
    ref
  ) => (
    <SeparatorPrimitive.Root
      ref={ref}
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      )}
      {...props}
    />
  )
)
Separator.displayName = SeparatorPrimitive.Root.displayName

export { Separator }
====[ END FILE: src/components/ui/separator.tsx ]===================================================

====[ START FILE: src/components/ui/sheet.tsx (4.2 KB) ]============================================
import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
      {children}
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}
====[ END FILE: src/components/ui/sheet.tsx ]=======================================================

====[ START FILE: src/components/ui/switch.tsx (1.1 KB) ]===========================================
import * as React from "react"
import * as SwitchPrimitives from "@radix-ui/react-switch"

import { cn } from "@/lib/utils"

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

export { Switch }
====[ END FILE: src/components/ui/switch.tsx ]======================================================

====[ START FILE: src/components/UploadcareWidget.tsx (3.0 KB) ]====================================
// src/components/UploadcareWidget.tsx
'use client';

import { useMemo } from 'react';
import dynamic from 'next/dynamic';
import '@uploadcare/react-uploader/core.css';
import Image from 'next/image';

type UploadedFile = {
  cdnUrl: string;
  name?: string;
  size?: number;
  mime?: string;
};

type Props = {
  value: UploadedFile[];
  onChange: (files: UploadedFile[]) => void;
  maxFiles?: number;
  maxFileSizeMB?: number;
  acceptImagesOnly?: boolean;
};

// لفّ FileUploaderRegular بديناميك مع تعطيل SSR
const FileUploaderRegular = dynamic(
  () => import('@uploadcare/react-uploader').then((m) => m.FileUploaderRegular),
  { ssr: false }
);

// أنواع خفيفة علشان أي تغيّرات في lib
type UploaderFileInfo =
  | {
      cdnUrl?: string;
      name?: string;
      size?: number;
      mimeType?: string;
      mime?: string;
    }
  | null;

type UploaderState = {
  allEntries?: Array<{ fileInfo?: UploaderFileInfo }>;
};

export default function UploadcareWidget({
  value,
  onChange,
  maxFiles = Number(process.env.NEXT_PUBLIC_UPLOADCARE_MAX_FILES || 5),
  maxFileSizeMB = Number(process.env.NEXT_PUBLIC_UPLOADCARE_MAX_FILE_SIZE_MB || 8),
  acceptImagesOnly = true,
}: Props) {
  const pubkey = process.env.NEXT_PUBLIC_UPLOADCARE_PUBLIC_KEY || '';

  const accept = useMemo<string | undefined>(
    () => (acceptImagesOnly ? 'image/*' : undefined),
    [acceptImagesOnly]
  );
  const maxSize = maxFileSizeMB * 1024 * 1024;

  if (!pubkey) {
    return (
      <div className="text-sm text-red-600">
        ضع مفتاح Uploadcare في <code>NEXT_PUBLIC_UPLOADCARE_PUBLIC_KEY</code>.
      </div>
    );
  }

  return (
    <div dir="rtl" className="space-y-2">
      <FileUploaderRegular
        pubkey={pubkey}
        multiple
        maxLocalFileSizeBytes={maxSize}
        sourceList="local, camera, url, dropbox, gdrive"
        accept={accept}
        onChange={(filesState?: UploaderState) => {
          const entries = filesState?.allEntries ?? [];
          const ready = entries
            .map((e) => e.fileInfo)
            .filter((fi): fi is NonNullable<UploaderFileInfo> => Boolean(fi && fi.cdnUrl))
            .map((fi) => ({
              cdnUrl: String(fi!.cdnUrl),
              name: fi!.name,
              size: fi!.size,
              mime: fi!.mimeType || fi!.mime,
            }))
            .slice(0, maxFiles);

          onChange(ready);
        }}
      />

      {value?.length > 0 && (
        <div className="grid grid-cols-3 gap-2">
          {value.map((f, i) => (
            <div key={i} className="border rounded-lg p-1 overflow-hidden">
              <Image
                src={`${f.cdnUrl}-/resize/300x/`}
                alt={f.name || `image-${i}`}
                width={300}
                height={180}
                className="w-full h-24 object-cover rounded-md"
              />
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
====[ END FILE: src/components/UploadcareWidget.tsx ]===============================================

====[ START FILE: src/contexts/AuthContext.tsx (3.1 KB) ]===========================================
import { createContext, useContext, useEffect, useMemo, useState } from "react";
import { auth, db } from "@/lib/firebase";
import { onAuthStateChanged, type User } from "firebase/auth";
import { doc, getDoc } from "firebase/firestore";

type StoreState = {
  storeUid: string | null;
  storeName: string | null;
  platform: string | null;
};

type AuthValue = {
  user: User | null;
  loading: boolean;
  store: StoreState;
};

const Ctx = createContext<AuthValue>({ user: null, loading: true, store: { storeUid: null, storeName: null, platform: null } });

export function AuthProvider({ children }: { children: React.ReactNode }) {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const [store, setStore] = useState<StoreState>({ storeUid: null, storeName: null, platform: null });

  useEffect(() => {
    const unsub = onAuthStateChanged(auth, async (u) => {
      setUser(u);
      if (!u) {
        setStore({ storeUid: null, storeName: null, platform: null });
        setLoading(false);
        return;
      }

      try {
        // 1) جرّب alias: stores/{user.uid}
        const aliasSnap = await getDoc(doc(db, "stores", u.uid));
        if (aliasSnap.exists()) {
          //eslint-disable-next-line @typescript-eslint/no-explicit-any
          const a = aliasSnap.data() as any;
          const aliasOf: string | undefined = a.storeUid;
          const nameAlias = a.storeName ?? null;

          if (aliasOf) {
            const realSnap = await getDoc(doc(db, "stores", aliasOf));
            if (realSnap.exists()) {
              //eslint-disable-next-line @typescript-eslint/no-explicit-any
              const r = realSnap.data() as any;
              const s = r.salla || {};
              setStore({
                storeUid: aliasOf,
                storeName: s.storeName ?? r.storeName ?? nameAlias ?? null,
                platform: r.platform ?? "salla",
              });
              setLoading(false);
              return;
            }
          }

          // لو مفيش storeUid في alias، اعتبر نفس المستند هو المتجر (نادرًا)
          setStore({
            storeUid: u.uid,
            storeName: nameAlias,
            platform: a.platform ?? "salla",
          });
          setLoading(false);
          return;
        }

        // 2) fallback: ربما تم حفظ المتجر مباشرة على stores/salla:{id} فقط
        // في الحالة دي لا نعرف الـ id هنا؛ سيتم تمريره عبر URL بعد onboarding.
        setStore({ storeUid: null, storeName: null, platform: null });
      } catch {
        setStore({ storeUid: null, storeName: null, platform: null });
      } finally {
        setLoading(false);
      }
    });
    return () => unsub();
  }, []);

  const value = useMemo(() => ({ user, loading, store }), [user, loading, store]);
  return <Ctx.Provider value={value}>{children}</Ctx.Provider>;
}

export function useAuth() { return useContext(Ctx); }
====[ END FILE: src/contexts/AuthContext.tsx ]======================================================

====[ START FILE: src/get-admin-token.ts (667 B) ]==================================================
import { initializeApp } from 'firebase/app';
import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';

const firebaseConfig = {
  apiKey: 'AIzaSyCPV-BkAqO68q0F_Rp7vDCjmoo22Y3b5fk',
  authDomain: 'thaqa-7630a.firebaseapp.com',
  projectId: 'thaqa-7630a',
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);

async function getToken() {
  try {
    const userCred = await signInWithEmailAndPassword(auth, 'reviews@theqah.com.sa', 'ASWqer124');
    const token = await userCred.user.getIdToken();
    console.log('ID Token:', token);
  } catch (err) {
    console.error('Login failed:', err);
  }
}

getToken();
====[ END FILE: src/get-admin-token.ts ]============================================================

====[ START FILE: src/lib/auth/login.ts (2.1 KB) ]==================================================
// src/lib/auth/login.ts
import { signInWithEmailAndPassword, getAuth, type UserCredential, type User } from 'firebase/auth';
import { doc, getDoc } from 'firebase/firestore';
import { app, db } from '@/lib/firebase';
import { setToken, clearToken } from './tokenManager';

type Role = 'admin' | 'user';

type LoginResult = {
  user: {
    uid: string;
    email: string | null;
    displayName: string | null;
  };
  role: Role;
  token: string;
};

export async function loginUser(email: string, password: string): Promise<LoginResult> {
  try {
    const auth = getAuth(app);

    // 1) Sign in
    const userCredential: UserCredential = await signInWithEmailAndPassword(auth, email, password);
    const user: User = userCredential.user;

    // 2) Read role from roles/{uid} where { admin: true }
    const roleDoc = await getDoc(doc(db, 'roles', user.uid));
    const role: Role = roleDoc.exists() && roleDoc.data()?.admin === true ? 'admin' : 'user';

    // 3) Get Firebase ID token (+ store with TTL)
    const tokenResult = await user.getIdTokenResult(true); // force refresh to ensure fresh claims if needed
    const expiresIn = Math.max(
      0,
      Math.floor((new Date(tokenResult.expirationTime).getTime() - Date.now()) / 1000)
    );
    setToken(tokenResult.token, expiresIn);

    return {
      user: {
        uid: user.uid,
        email: user.email,
        displayName: user.displayName,
      },
      role,
      token: tokenResult.token,
    };
  } catch (error: unknown) {
    if (error instanceof Error) {
      console.error('❌ Login error:', error);
      throw new Error(error.message || 'Login failed');
    }
    throw new Error('Login failed');
  }
}

export async function logoutUser(): Promise<void> {
  try {
    const auth = getAuth(app);
    await auth.signOut();
    clearToken();
    console.log('✅ Logout successful');
  } catch (error) {
    console.error('❌ Logout error:', error);
  }
}

export function getCurrentUser() {
  const auth = getAuth(app);
  return auth.currentUser;
}
====[ END FILE: src/lib/auth/login.ts ]=============================================================

====[ START FILE: src/lib/auth/tokenManager.ts (738 B) ]============================================
// src/lib/auth/tokenManager.ts
let inMemoryToken: string | null = null;
let refreshTimer: NodeJS.Timeout | null = null;

export function setToken(token: string, expiresInSec?: number) {
  inMemoryToken = token;

  // Auto-refresh token slightly before it expires
  if (expiresInSec) {
    if (refreshTimer) clearTimeout(refreshTimer);
    refreshTimer = setTimeout(async () => {
      console.log('🔄 Refreshing token...');
      // This will be handled by Firebase getIdToken(true)
    }, (expiresInSec - 60) * 1000); // refresh 1 min early
  }
}

export function getToken() {
  return inMemoryToken;
}

export function clearToken() {
  inMemoryToken = null;
  if (refreshTimer) clearTimeout(refreshTimer);
}
====[ END FILE: src/lib/auth/tokenManager.ts ]======================================================

====[ START FILE: src/lib/axiosInstance.ts (2.4 KB) ]===============================================
// src/lib/axiosInstance.ts
import axios, {
  AxiosError,
  AxiosHeaders,
  type AxiosRequestConfig,
} from "axios";
import { getAuth } from "firebase/auth";
import { app } from "@/lib/firebase";

const isBrowser = typeof window !== "undefined";

// يحوّل أي شكل من الهيدرز إلى AxiosHeaders بدون الحاجة لـ RawAxiosHeaders
function ensureHeaders(h: unknown): AxiosHeaders {
  //eslint-disable-next-line @typescript-eslint/no-explicit-any
  return h instanceof AxiosHeaders ? h : new AxiosHeaders(h as any);
}

const instance = axios.create({
  // المتصفح = نفس الأصل. السيرفر = API_BASE_URL أو localhost
  baseURL: isBrowser ? "" : process.env.API_BASE_URL || "http://localhost:3000",
  withCredentials: false,
  timeout: 15000,
});

// --- Request Interceptor: يضيف Authorization إن وُجد مستخدم ---
instance.interceptors.request.use(async (config) => {
  const headers = ensureHeaders(config.headers);

  if (isBrowser && !headers.has("Authorization")) {
    const user = getAuth(app).currentUser;
    if (user) {
      const token = await user.getIdToken(); // current token
      headers.set("Authorization", `Bearer ${token}`);
    }
  }

  config.headers = headers;
  return config;
});

// --- Response Interceptor: ريفريش للتوكن مرة واحدة عند 401 ---
instance.interceptors.response.use(
  (res) => res,
  async (error: AxiosError) => {
    const cfg = (error.config || {}) as AxiosRequestConfig;
    const status = error.response?.status ?? 0;

    const headers = ensureHeaders(cfg.headers);

    if (status === 401 && !headers.has("x-retry-refresh")) {
      try {
        if (isBrowser) {
          const user = getAuth(app).currentUser;
          if (user) {
            const fresh = await user.getIdToken(true); // force refresh
            headers.set("Authorization", `Bearer ${fresh}`);
            headers.set("x-retry-refresh", "1");

            return instance.request({
              ...cfg,
              headers,
            });
          }
        }
      } catch {
        // ignore
      }
    }

    if (error.message === "Network Error") {
      console.error("Axios Network Error:", {
        url: cfg?.url,
        baseURL: cfg?.baseURL,
      });
    }

    return Promise.reject(error);
  }
);

export default instance;
====[ END FILE: src/lib/axiosInstance.ts ]==========================================================

====[ START FILE: src/lib/env.ts (2.0 KB) ]=========================================================
// src/lib/env.ts
import { z } from 'zod';

const server = z.object({
  APP_BASE_URL: z.string().url(),
  FIREBASE_PROJECT_ID: z.string(),
  FIREBASE_CLIENT_EMAIL: z.string().email(),
  FIREBASE_PRIVATE_KEY: z.string().min(100),
  EMAIL_USER: z.string().email(),
  EMAIL_PASS: z.string().min(8),
  ZID_CLIENT_ID: z.string(),
  ZID_CLIENT_SECRET: z.string().min(16),
  ZID_REDIRECT_URI: z.string().url(),
  OPENAI_API_KEY: z.string().min(20),
  CRON_SECRET: z.string().min(8),
});

const client = z.object({
  NEXT_PUBLIC_BASE_URL: z.string().url(),
  NEXT_PUBLIC_FIREBASE_API_KEY: z.string(),
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: z.string(),
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: z.string(),
  NEXT_PUBLIC_FIREBASE_APP_ID: z.string(),
  NEXT_PUBLIC_ZID_CLIENT_ID: z.string(),
  NEXT_PUBLIC_ZID_REDIRECT_URI: z.string().url(),
});

export const env = {
  server: server.parse({
    APP_BASE_URL: process.env.APP_BASE_URL,
    FIREBASE_PROJECT_ID: process.env.FIREBASE_PROJECT_ID,
    FIREBASE_CLIENT_EMAIL: process.env.FIREBASE_CLIENT_EMAIL,
    FIREBASE_PRIVATE_KEY: process.env.FIREBASE_PRIVATE_KEY,
    EMAIL_USER: process.env.EMAIL_USER,
    EMAIL_PASS: process.env.EMAIL_PASS,
    ZID_CLIENT_ID: process.env.ZID_CLIENT_ID,
    ZID_CLIENT_SECRET: process.env.ZID_CLIENT_SECRET,
    ZID_REDIRECT_URI: process.env.ZID_REDIRECT_URI,
    OPENAI_API_KEY: process.env.OPENAI_API_KEY,
    CRON_SECRET: process.env.CRON_SECRET,
  }),
  client: client.parse({
    NEXT_PUBLIC_BASE_URL: process.env.NEXT_PUBLIC_BASE_URL,
    NEXT_PUBLIC_FIREBASE_API_KEY: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
    NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
    NEXT_PUBLIC_FIREBASE_PROJECT_ID: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    NEXT_PUBLIC_FIREBASE_APP_ID: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
    NEXT_PUBLIC_ZID_CLIENT_ID: process.env.NEXT_PUBLIC_ZID_CLIENT_ID,
    NEXT_PUBLIC_ZID_REDIRECT_URI: process.env.NEXT_PUBLIC_ZID_REDIRECT_URI,
  }),
};
====[ END FILE: src/lib/env.ts ]====================================================================

====[ START FILE: src/lib/firebase.ts (838 B) ]=====================================================
// Client SDK
import { initializeApp, getApps, type FirebaseApp } from "firebase/app";
import {
  getAuth,
  setPersistence,
  browserLocalPersistence,
  type Auth,
} from "firebase/auth";
import { getFirestore, type Firestore } from "firebase/firestore";

const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY!,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN!,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID!,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID!,
};

const app: FirebaseApp = getApps().length ? getApps()[0]! : initializeApp(firebaseConfig);
const auth: Auth = getAuth(app);
const db: Firestore = getFirestore(app);

// حاولة حفظ الجلسة محلياً
setPersistence(auth, browserLocalPersistence).catch(() => {});

export { app, auth, db };
====[ END FILE: src/lib/firebase.ts ]===============================================================

====[ START FILE: src/lib/firebaseAdmin.ts (2.1 KB) ]===============================================
import * as admin from "firebase-admin";
import fs from "node:fs";
import path from "node:path";

let _app: admin.app.App | null = null;

function loadCredFromEnv() {
  const projectId = process.env.FIREBASE_PROJECT_ID?.trim();
  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL?.trim();
  let privateKey = process.env.FIREBASE_PRIVATE_KEY ?? "";

  privateKey = privateKey.trim();
  if (privateKey.startsWith('"') && privateKey.endsWith('"')) {
    privateKey = privateKey.slice(1, -1);
  }
  privateKey = privateKey.replace(/\\n/g, "\n");

  if (projectId && clientEmail && privateKey) return { projectId, clientEmail, privateKey };

  const json = process.env.FIREBASE_SERVICE_ACCOUNT_JSON;
  if (json) {
    try {
      const svc = JSON.parse(json);
      return {
        projectId: String(svc.project_id),
        clientEmail: String(svc.client_email),
        privateKey: String(svc.private_key ?? "").replace(/\\n/g, "\n"),
      };
    } catch {}
  }

  const credPath = process.env.GOOGLE_APPLICATION_CREDENTIALS;
  if (credPath) {
    try {
      const resolved = path.isAbsolute(credPath) ? credPath : path.join(process.cwd(), credPath);
      const raw = fs.readFileSync(resolved, "utf8");
      const svc = JSON.parse(raw);
      return {
        projectId: String(svc.project_id),
        clientEmail: String(svc.client_email),
        privateKey: String(svc.private_key ?? "").replace(/\\n/g, "\n"),
      };
    } catch {}
  }

  throw new Error("[firebaseAdmin] Missing FIREBASE_* credentials");
}

function initAdmin() {
  if (_app) return _app;
  const { projectId, clientEmail, privateKey } = loadCredFromEnv();
  if (admin.apps.length === 0) {
    _app = admin.initializeApp({
      credential: admin.credential.cert({ projectId, clientEmail, privateKey }),
    });
    admin.firestore().settings({ ignoreUndefinedProperties: true });
  } else {
    _app = admin.app();
  }
  return _app;
}

export function dbAdmin() { initAdmin(); return admin.firestore(); }
export function authAdmin() { return initAdmin().auth(); }
====[ END FILE: src/lib/firebaseAdmin.ts ]==========================================================

====[ START FILE: src/lib/logger.ts (1.0 KB) ]======================================================
// src/lib/logger.ts
export type LogLevel = "info" | "warn" | "error" | "debug";
export type LogContext = Record<string, unknown>;

function consoleMethod(level: LogLevel): "log" | "warn" | "error" {
  if (level === "error") return "error";
  if (level === "warn") return "warn";
  return "log";
}

export function log(level: LogLevel, msg: string, ctx: LogContext = {}): void {
  // كان فيه خطأ:  . , ctx    ← يتصلّح إلى ...ctx
  const rec = { level, msg, ts: new Date().toISOString(), ...ctx };
  const method = consoleMethod(level);
  const line = JSON.stringify(rec);
  if (method === "error") console.error(line);
  else if (method === "warn") console.warn(line);
  else console.log(line);
}

export const info  = (m: string, c?: LogContext) => log("info", m, c || {});
export const warn  = (m: string, c?: LogContext) => log("warn", m, c || {});
export const error = (m: string, c?: LogContext) => log("error", m, c || {});
export const debug = (m: string, c?: LogContext) => log("debug", m, c || {});
====[ END FILE: src/lib/logger.ts ]=================================================================

====[ START FILE: src/lib/oursms.ts (935 B) ]=======================================================
// src/lib/oursms.ts
export type SmsPayload = { to: string; body: string };

const BASE = process.env.OURSMS_BASE_URL || 'https://oursms.app/api/v1';
const API_KEY = process.env.OURSMS_API_KEY!; // Bearer

export async function sendOneSMS({ to, body }: SmsPayload) {
  const url = `${BASE}/SMS/Add/SendOneSms`; // وفق الـ Postman v1
  // ان وجدت صيغة مختلفة ببوابتك (OTP/templating) بدّل الإندبوينت
  const res = await fetch(url, {
    method: 'POST',
    headers: {
      Authorization: `Bearer ${API_KEY}`,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      phoneNumber: to,
      body,
      // senderName: process.env.OURSMS_SENDER_NAME, // لو مطلوبة ومفعّلة
    }),
  });

  if (!res.ok) {
    const text = await res.text();
    throw new Error(`OurSMS failed: ${res.status} ${text}`);
  }
  return res.json();
}
====[ END FILE: src/lib/oursms.ts ]=================================================================

====[ START FILE: src/lib/salla-admin.ts (1.0 KB) ]=================================================
// src/lib/salla-admin.ts
const SALLA_API_BASE = process.env.SALLA_API_BASE || "https://api.salla.dev";

type AdminRequestOpts = {
  method?: "GET" | "POST" | "PUT" | "PATCH" | "DELETE";
  headers?: Record<string, string>;
  body?: string | undefined;
};

export function sallaAdminClient(accessToken: string) {
  return async function <T = unknown>(path: string, opts: AdminRequestOpts = {}): Promise<T> {
    const url = `${SALLA_API_BASE.replace(/\/+$/, "")}/admin/v2/${path.replace(/^\/+/, "")}`;
    const res = await fetch(url, {
      method: opts.method || "GET",
      headers: {
        Authorization: `Bearer ${accessToken}`,
        "Content-Type": "application/json",
        ...(opts.headers || {}),
      },
      body: opts.body,
    });
    const json = await res.json().catch(() => ({}));
    if (!res.ok) {
      const msg = typeof json === "object" ? JSON.stringify(json) : String(json);
      throw new Error(`salla_admin_${res.status}: ${msg}`);
    }
    return json as T;
  };
}
====[ END FILE: src/lib/salla-admin.ts ]============================================================

====[ START FILE: src/lib/salla.ts (1.1 KB) ]=======================================================
// src/lib/salla.ts
const SALLA_API = "https://api.salla.dev";

export type SallaClient = <T = unknown>(path: string, init?: RequestInit) => Promise<T>;

export function sallaClient(accessToken: string): SallaClient {
  if (!accessToken) throw new Error("Salla token is required");
  return async function <T = unknown>(path: string, init: RequestInit = {}): Promise<T> {
    const headers = new Headers(init.headers || {});
    headers.set("Authorization", `Bearer ${accessToken}`);
    if (!headers.has("Content-Type")) headers.set("Content-Type", "application/json");

    const res = await fetch(`${SALLA_API}${path}`, { ...init, headers });

    if (!res.ok) {
      const text = await res.text().catch(() => "");
      throw new Error(`Salla API ${res.status}: ${text || res.statusText}`);
    }
    const ct = res.headers.get("content-type") || "";
    if (ct.includes("application/json")) {
      return (await res.json()) as T;
    }
    // برجع undefined بنوع آمن بدون ts-expect-error
    return (undefined as unknown) as T;
  };
}
====[ END FILE: src/lib/salla.ts ]==================================================================

====[ START FILE: src/lib/salla/verify.ts (1.2 KB) ]================================================
// src/lib/salla/verify.ts
import crypto from "crypto";
import type { NextApiRequest } from "next";

export type VerifyResult =
  | { ok: true }
  | { ok: false; reason: "missing-header" | "missing-secret" | "bad-strategy" | "bad-signature" };

export function verifySallaSignature(
  headers: NextApiRequest["headers"],
  rawBody: Buffer,
  secret: string
): VerifyResult {
  const strategy =
    (headers["x-salla-security-strategy"] as string | undefined) ??
    (headers["x-salla-security-strategy".toLowerCase()] as string | undefined);
  const signature =
    (headers["x-salla-signature"] as string | undefined) ??
    (headers["x-salla-signature".toLowerCase()] as string | undefined);

  if (!strategy || !signature) return { ok: false, reason: "missing-header" };
  if (!secret) return { ok: false, reason: "missing-secret" };
  if (String(strategy).toLowerCase() !== "signature") return { ok: false, reason: "bad-strategy" };

  const expected = crypto.createHmac("sha256", secret).update(rawBody).digest("hex");
  const a = Buffer.from(signature, "utf8");
  const b = Buffer.from(expected, "utf8");
  if (a.length !== b.length || !crypto.timingSafeEqual(a, b)) return { ok: false, reason: "bad-signature" };

  return { ok: true };
}
====[ END FILE: src/lib/salla/verify.ts ]===========================================================

====[ START FILE: src/lib/utils.ts (166 B) ]========================================================
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
====[ END FILE: src/lib/utils.ts ]==================================================================

====[ START FILE: src/lib/zid/auth.ts (1.6 KB) ]====================================================
// src/lib/zid/auth.ts
import { getZidTokens, saveZidTokens, ZidTokens } from '@/lib/zid/tokens';

type RefreshResponse = {
  access_token: string;
  authorization?: string;
  refresh_token?: string;
  token_type?: string;
  expires_in?: number;
  scope?: string;
};

async function refresh(uid: string, tokens: ZidTokens) {
  if (!tokens.refresh_token) throw new Error('No refresh_token');

  const body = new URLSearchParams({
    grant_type: 'refresh_token',
    refresh_token: tokens.refresh_token,
    client_id: process.env.ZID_CLIENT_ID!,
    client_secret: process.env.ZID_CLIENT_SECRET!,
  });

  const r = await fetch('https://oauth.zid.sa/oauth/token', {
    method: 'POST',
    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
    body,
  });
  if (!r.ok) throw new Error(`refresh_failed_${r.status}`);

  const j = (await r.json()) as RefreshResponse;
  const expiresAt = Date.now() + ((j.expires_in ?? 3600) * 1000);

  const next: ZidTokens = {
    access_token: j.access_token,
    authorization: j.authorization ?? tokens.authorization, // احتفظ بما لديك إن لم ترجع
    refresh_token: j.refresh_token ?? tokens.refresh_token,
    token_type: j.token_type,
    expires_in: j.expires_in,
    expires_at: expiresAt,
    scope: j.scope,
    raw: j,
  };
  await saveZidTokens(uid, next);
  return next;
}

export async function ensureZidAccessToken(uid: string): Promise<ZidTokens> {
  const tokens = await getZidTokens(uid);
  if (!tokens) throw new Error('no_tokens');
  if (Date.now() < tokens.expires_at) return tokens;
  return refresh(uid, tokens);
}
====[ END FILE: src/lib/zid/auth.ts ]===============================================================

====[ START FILE: src/lib/zid/fetch.ts (779 B) ]====================================================
// src/lib/zid/fetch.ts
import { ensureZidAccessToken } from '@/lib/zid/auth';

export async function zidFetch<T>(uid: string, path: string, init?: RequestInit): Promise<T> {
  const tokens = await ensureZidAccessToken(uid);

  const r = await fetch(`https://api.zid.sa${path}`, {
    ...init,
    headers: {
      ...(init?.headers || {}),
      'Authorization': tokens.authorization ? `Bearer ${tokens.authorization}` : `Bearer ${tokens.access_token}`,
      'X-Manager-Token': tokens.access_token, // مهم حسب الدوكيومنت
      'Content-Type': 'application/json',
    },
  });

  if (!r.ok) {
    const text = await r.text().catch(() => '');
    throw new Error(`Zid API error ${r.status}: ${text}`);
  }
  return r.json() as Promise<T>;
}
====[ END FILE: src/lib/zid/fetch.ts ]==============================================================

====[ START FILE: src/lib/zid/scopes.ts (309 B) ]===================================================
export function buildZidScopes() {
  const scopes = new Set<string>(['orders','webhooks']);
  if (process.env.ENABLE_ZID_SCOPE_EMBEDDED_APPS === 'true') scopes.add('embedded_apps');
  if (process.env.ENABLE_ZID_SCOPE_PRODUCTS === 'true') scopes.add('products');
  return Array.from(scopes).join(' ');
}
====[ END FILE: src/lib/zid/scopes.ts ]=============================================================

====[ START FILE: src/lib/zid/tokens.ts (1012 B) ]==================================================
// src/lib/zid/tokens.ts
import { dbAdmin } from '@/lib/firebaseAdmin';

export type ZidTokens = {
  access_token: string;
  authorization?: string; // مهم: بعض نقاط النهاية تتطلبه مع X-Manager-Token
  refresh_token?: string;
  token_type?: string;
  expires_in?: number;
  expires_at: number; // millis
  scope?: string;
  raw?: unknown;
};

type StoreDoc = {
  zid?: {
    connected?: boolean;
    tokens?: ZidTokens;
    updatedAt?: number;
  };
};

export async function saveZidTokens(uid: string, tokens: ZidTokens) {
  const db = dbAdmin();
  await db.collection('stores').doc(uid).set(
    {
      zid: { connected: true, tokens, updatedAt: Date.now() },
    },
    { merge: true }
  );
}

export async function getZidTokens(uid: string): Promise<ZidTokens | null> {
  const db = dbAdmin();
  const snap = await db.collection('stores').doc(uid).get();
  const data = snap.data() as StoreDoc | undefined;
  return data?.zid?.tokens || null;
}
====[ END FILE: src/lib/zid/tokens.ts ]=============================================================

====[ START FILE: src/lib/zid/webhooks.ts (991 B) ]=================================================
export async function registerZidWebhooks({
  accessToken,
  managerToken,
  targetBaseUrl,
}: {
  accessToken: string;
  managerToken?: string;
  targetBaseUrl: string;
}) {
  const target = `${targetBaseUrl.replace(/\/$/,'')}/api/zid/webhook`;

  async function create(event: string, conditions?: Record<string, string>) {
    const r = await fetch('https://api.zid.sa/v1/managers/webhooks', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        ...(managerToken ? { 'X-Manager-Token': managerToken } : {}),
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ event, target_url: target, conditions }),
    });
    if (!r.ok) {
      const t = await r.text().catch(()=> '');
      console.error('register webhook failed', event, t);
    }
  }

  await create('order.payment_status.update', { payment_status: 'paid' });
  await create('order.status.update', { status: 'delivered' });
}
====[ END FILE: src/lib/zid/webhooks.ts ]===========================================================

====[ START FILE: src/middleware.ts (946 B) ]=======================================================
import type { NextRequest } from 'next/server';
import { NextResponse } from 'next/server';

const ALLOW = [
  "http://localhost:3000",
  "https://theqah.com.sa",
  "https://www.theqah.com.sa",
];

export function middleware(req: NextRequest) {
  const origin = req.headers.get('origin') || '';
  const res = NextResponse.next();

  if (ALLOW.includes(origin)) {
    res.headers.set('Access-Control-Allow-Origin', origin);
    res.headers.set('Vary', 'Origin');
    res.headers.set('Access-Control-Allow-Credentials', 'true');
    res.headers.set('Access-Control-Allow-Methods', 'GET,POST,PUT,PATCH,DELETE,OPTIONS');
    res.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');
  }

  if (req.method === 'OPTIONS') {
    return new NextResponse(null, { status: 204, headers: res.headers });
  }

  return res;
}

export const config = {
  matcher: ['/api/admin/:path*'],
};
====[ END FILE: src/middleware.ts ]=================================================================

====[ START FILE: src/pages/_app.tsx (1.0 KB) ]=====================================================
import type { AppProps } from 'next/app';
import '@/styles/globals.css';
import { AuthProvider } from '@/contexts/AuthContext';
import Head from 'next/head';

export default function MyApp({ Component, pageProps }: AppProps) {
  return (
    <AuthProvider>
      <Head>
        <title>theqah</title>

        {/* Standard favicon */}
        <link rel="icon" href="/favicon.ico" />

        {/* PNG favicons */}
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />

        {/* Apple iOS Touch Icon */}
        <link rel="apple-touch-icon" href="/apple-touch-icon.png" />

        {/* Android & PWA manifest */}
        <link rel="manifest" href="/site.webmanifest" />
        <meta name="theme-color" content="#ffffff" />

        {/* Optional: description for SEO */}
        <meta name="description" content="theqah - Your website description here" />
      </Head>
<Component {...pageProps} />
    </AuthProvider>
  );
}
====[ END FILE: src/pages/_app.tsx ]================================================================

====[ START FILE: src/pages/admin/dashboard.tsx (2.1 KB) ]==========================================
// src/app/admin/AdminDashboard.tsx أو src/pages/admin/index.tsx حسب مشروعك
'use client';

import { useState } from 'react';
import AdminReviews from '@/components/admin/AdminReviews';
import AdminReports from '@/components/admin/AdminReports';
import AdminStores from '@/components/admin/AdminStores';
import AdminAnalytics from '@/components/admin/AdminAnalytics';
import TestNotifyTab from '@/components/admin/tabs/TestNotifyTab'; // ← التاب الجديد

const adminTabs = [
  'مراجعة التقييمات',
  'بلاغات التقييمات',
  'المتاجر',
  'الإحصائيات العامة',
  'اختبار القنوات', // ← جديد
] as const;

type Tab = typeof adminTabs[number];

export default function AdminDashboard() {
  const [activeTab, setActiveTab] = useState<Tab>(adminTabs[0]);

  return (
    <div className="min-h-screen bg-gray-50 p-6" dir="rtl">
      <h1 className="text-3xl font-bold mb-6 text-green-800">لوحة تحكم المشرف</h1>

      {/* التبويبات */}
      <div className="flex space-x-2 mb-6 rtl:space-x-reverse">
        {adminTabs.map((tab) => (
          <button
            key={tab}
            onClick={() => setActiveTab(tab)}
            className={`px-4 py-2 rounded-md font-medium border transition text-sm ${
              activeTab === tab
                ? 'bg-green-700 text-white border-green-700'
                : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-100'
            }`}
          >
            {tab}
          </button>
        ))}
      </div>

      {/* المحتوى حسب التبويب */}
      <div className="bg-white p-6 rounded-xl shadow">
        {activeTab === 'مراجعة التقييمات' && <AdminReviews />}
        {activeTab === 'بلاغات التقييمات' && <AdminReports />}
        {activeTab === 'المتاجر' && <AdminStores />}
        {activeTab === 'الإحصائيات العامة' && <AdminAnalytics />}
        {activeTab === 'اختبار القنوات' && <TestNotifyTab />} {/* ← جديد */}
      </div>
    </div>
  );
}
====[ END FILE: src/pages/admin/dashboard.tsx ]=====================================================

====[ START FILE: src/pages/api/_admin/ping.ts (1.1 KB) ]===========================================
// src/pages/api/_admin/ping.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { authAdmin, dbAdmin } from '@/lib/firebaseAdmin';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const auth = req.headers.authorization || '';
    const [scheme, token] = auth.split(' ');
    if (scheme !== 'Bearer' || !token) {
      return res.status(401).json({ ok: false, error: 'MISSING_ID_TOKEN' });
    }

    const decoded = await authAdmin().verifyIdToken(token);
    const uid = decoded.uid;

    // test read/write (read store doc by uid as id)
    const ref = dbAdmin().collection('stores').doc(uid);
    const snap = await ref.get();

    return res.status(200).json({
      ok: true,
      uid,
      storeDocExists: snap.exists,
      projectId: process.env.FIREBASE_PROJECT_ID,
    });
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    console.error('PING ERROR:', e);
    return res.status(500).json({ ok: false, error: e?.message || String(e) });
  }
}
====[ END FILE: src/pages/api/_admin/ping.ts ]======================================================

====[ START FILE: src/pages/api/admin/alerts.ts (1.7 KB) ]==========================================
// src/pages/api/admin/alerts.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyAdmin } from "@/utils/verifyAdmin";

type AlertLevel = "info" | "warn" | "error";
type AlertData = { message: string; level: AlertLevel; createdAt: number; createdBy?: string | null };

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    await verifyAdmin(req);

    const db = dbAdmin();

    if (req.method === "GET") {
      const snap = await db.collection("admin_alerts").orderBy("createdAt", "desc").limit(100).get();
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      return res.status(200).json({ items: snap.docs.map(d => ({ id: d.id, ...(d.data() as any) })) });
    }

    if (req.method === "POST") {
      const { message, level = "info" } = (req.body || {}) as Partial<AlertData>;
      if (!message) return res.status(400).json({ message: "message required" });
      const ref = await db.collection("admin_alerts").add({
        message: String(message).slice(0, 1000),
        level,
        createdAt: Date.now(),
        createdBy: null,
      } as AlertData);
      return res.status(200).json({ id: ref.id, ok: true });
    }

    return res.status(405).json({ message: "Method Not Allowed" });
  } catch (e) {
    const msg = (e as Error).message || '';
    if (msg.startsWith("unauthenticated")) return res.status(401).json({ message: "Unauthorized" });
    if (msg.startsWith("permission-denied")) return res.status(403).json({ message: "Forbidden" });
    return res.status(500).json({ message: "Server error" });
  }
}
====[ END FILE: src/pages/api/admin/alerts.ts ]=====================================================

====[ START FILE: src/pages/api/admin/bootstrap.ts (393 B) ]========================================
// src/pages/api/admin/bootstrap.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { verifyAdmin } from '@/utils/verifyAdmin';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    await verifyAdmin(req);
    return res.status(200).json({ ok: true });
  } catch {
    return res.status(401).json({ ok: false });
  }
}
====[ END FILE: src/pages/api/admin/bootstrap.ts ]==================================================

====[ START FILE: src/pages/api/admin/dashboard.ts (2.7 KB) ]=======================================
// src/pages/api/admin/dashboard-stats.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyAdmin } from "@/utils/verifyAdmin";

const db = dbAdmin();

type DashboardStats = {
  totalStores: number;
  totalReviews: number;
  totalAlerts: number;
  publishedReviews: number;
  pendingReviews: number;
  fetchedAt: string;
};

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<DashboardStats | { message: string; error?: string }>
) {
  try {
    await verifyAdmin(req);

    if (req.method !== "GET") {
      return res.status(405).json({ message: "Method not allowed" });
    }

    let totalStores = 0;
    let totalReviews = 0;
    let totalAlerts = 0;
    let publishedReviews = 0;
    let pendingReviews = 0;

    try {
      const agg = await db.collection("stores").count().get();
      totalStores = agg.data().count;
    } catch (e) {
      console.warn("Count fallback: stores", e);
    }

    try {
      const agg = await db.collection("reviews").count().get();
      totalReviews = agg.data().count;
    } catch (e) {
      console.warn("Count fallback: reviews", e);
    }

    try {
      const agg = await db.collection("review_reports").count().get();
      totalAlerts = agg.data().count;
    } catch (e) {
      console.warn("Count fallback: review_reports", e);
    }

    try {
      const pubAgg = await db.collection("reviews").where("published", "==", true).count().get();
      publishedReviews = pubAgg.data().count;
    } catch (e) {
      console.warn("Count fallback: published reviews", e);
    }

    try {
      const pendAgg = await db.collection("reviews").where("published", "==", false).count().get();
      pendingReviews = pendAgg.data().count;
    } catch (e) {
      console.warn("Count fallback: pending reviews", e);
    }

    res.setHeader("Cache-Control", "private, max-age=30");
    return res.status(200).json({
      totalStores,
      totalReviews,
      totalAlerts,
      publishedReviews,
      pendingReviews,
      fetchedAt: new Date().toISOString(),
    });
  } catch (error) {
    const err = error instanceof Error ? error : new Error(String(error));
    console.error("Admin Dashboard Error:", err);
    if (err.message?.startsWith("permission-denied")) {
      return res.status(403).json({ message: "ليس لديك صلاحية", error: "Forbidden" });
    }
    if (err.message?.startsWith("unauthenticated")) {
      return res.status(401).json({ message: "غير مصرح", error: "Unauthorized" });
    }
    return res.status(500).json({ message: "Internal Server Error" });
  }
}
====[ END FILE: src/pages/api/admin/dashboard.ts ]==================================================

====[ START FILE: src/pages/api/admin/reports/resolve.ts (1.7 KB) ]=================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { verifyAdmin } from '@/utils/verifyAdmin';

type Body = {
  reportId?: string;
  action?: 'resolve' | 'delete';
};

export default async function handler(req: NextApiRequest, res: NextApiResponse<{ ok: true } | { message: string }>) {
  try {
    await verifyAdmin(req);
    if (req.method !== 'POST') return res.status(405).json({ message: 'Method not allowed' });

    const { reportId, action } = (req.body || {}) as Body;
    if (!reportId || (action !== 'resolve' && action !== 'delete')) {
      return res.status(400).json({ message: 'Invalid body' });
    }

    const db = dbAdmin();
    const ref = db.collection('review_reports').doc(reportId);
    const snap = await ref.get();
    if (!snap.exists) return res.status(404).json({ message: 'Report not found' });

    if (action === 'delete') {
      await ref.delete();
    } else {
      await ref.update({ resolved: true, resolvedAt: new Date() });
    }

    try {
      await db.collection('admin_audit_logs').add({
        action: `report-${action}`,
        reportId,
        createdAt: new Date(),
      });
    } catch (e) {
      console.warn('audit log failed', e);
    }

    return res.status(200).json({ ok: true });
  } catch (error) {
    console.error('resolve report error', error);
    const msg = (error as Error).message || '';
    if (msg.startsWith('unauthenticated')) return res.status(401).json({ message: 'Unauthorized' });
    if (msg.startsWith('permission-denied')) return res.status(403).json({ message: 'Forbidden' });
    return res.status(500).json({ message: 'Server error' });
  }
}
====[ END FILE: src/pages/api/admin/reports/resolve.ts ]============================================

====[ START FILE: src/pages/api/admin/review-reports.ts (2.6 KB) ]==================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { verifyAdmin } from '@/utils/verifyAdmin';

type Alert = {
  id: string;
  reason: string;
  reviewId: string;
  createdAt?: number;
  email?: string;
  name?: string;
  resolved?: boolean;
  resolvedAt?: number;
};

// Shape of the document in Firestore
type ReviewReportDoc = {
  reason?: string;
  reviewId?: string;
  createdAt?: FirebaseFirestore.Timestamp | number;
  email?: string;
  name?: string;
  resolved?: boolean;
  resolvedAt?: FirebaseFirestore.Timestamp | number;
};

// Type guard for Firestore Timestamp
function isTimestamp(v: unknown): v is FirebaseFirestore.Timestamp {
  return typeof v === 'object' && v !== null && 'toDate' in v && typeof (v as { toDate: unknown }).toDate === 'function';
}

// Convert Timestamp | number | unknown -> epoch ms | undefined
function toMillis(v: unknown): number | undefined {
  if (typeof v === 'number') return v;
  if (isTimestamp(v)) return v.toDate().getTime();
  return undefined;
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<{ alerts: Alert[] } | { message: string }>
) {
  try {
    await verifyAdmin(req);
    if (req.method !== 'GET') return res.status(405).json({ message: 'Method not allowed' });

    const db = dbAdmin();
    const { resolved } = req.query;

    let q: FirebaseFirestore.Query = db.collection('review_reports');

    if (resolved === 'true') {
      q = q.where('resolved', '==', true);
    } else if (resolved === 'false') {
      q = q.where('resolved', '==', false);
    }

    q = q.orderBy('createdAt', 'desc').limit(200);

    const snap = await q.get();
    const alerts: Alert[] = snap.docs.map((d) => {
      const data = d.data() as ReviewReportDoc;

      return {
        id: d.id,
        reason: data.reason ?? '',
        reviewId: data.reviewId ?? '',
        createdAt: toMillis(data.createdAt),
        email: data.email ?? undefined,
        name: data.name ?? undefined,
        resolved: Boolean(data.resolved),
        resolvedAt: toMillis(data.resolvedAt),
      };
    });

    return res.status(200).json({ alerts });
  } catch (error) {
    console.error('review-reports error', error);
    const msg = (error as Error).message || '';
    if (msg.startsWith('unauthenticated')) return res.status(401).json({ message: 'Unauthorized' });
    if (msg.startsWith('permission-denied')) return res.status(403).json({ message: 'Forbidden' });
    return res.status(500).json({ message: 'Server error' });
  }
}
====[ END FILE: src/pages/api/admin/review-reports.ts ]=============================================

====[ START FILE: src/pages/api/admin/reviews/[id].ts (5.6 KB) ]====================================
// src/pages/api/admin/reviews/[id].ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { verifyAdmin } from '@/utils/verifyAdmin';

function sanitizeText(s: string) {
  return s.replace(/<\s*script.*?>.*?<\s*\/\s*script\s*>/gi, '').trim();
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  try {
    await verifyAdmin(req);

    const { id } = req.query;
    if (!id || typeof id !== 'string' || !id.trim()) {
      return res.status(400).json({ message: 'معرف التقييم مطلوب وصحيح', error: 'Invalid Review ID' });
    }
    const reviewId = id.trim();

    const db = dbAdmin();
    const reviewRef = db.collection('reviews').doc(reviewId);
    const reviewDoc = await reviewRef.get();
    if (!reviewDoc.exists) {
      return res.status(404).json({ message: 'التقييم غير موجود', error: 'Not Found' });
    }
    const reviewData = reviewDoc.data() || {};

    if (req.method === 'GET') {
      const data = {
        id: reviewId,
        name: reviewData.name ?? 'مجهول',
        comment: reviewData.comment ?? '',
        stars: reviewData.stars ?? 0,
        storeName: reviewData.storeName ?? 'غير محدد',
        published: Boolean(reviewData.published),
        createdAt: reviewData.createdAt?.toDate?.()?.toISOString?.() || reviewData.createdAt,
        lastModified: reviewData.lastModified?.toDate?.()?.toISOString?.() || reviewData.lastModified,
        moderatorNote: reviewData.moderatorNote,
      };
      return res.status(200).json({ id: reviewId, message: 'تم استرجاع التقييم بنجاح', review: data });
    }

    if (req.method === 'PATCH') {
      const { published, moderatorNote } = req.body || {};
      if (published !== undefined && typeof published !== 'boolean') {
        return res.status(400).json({ message: 'قيمة النشر يجب أن تكون true أو false', error: 'Invalid Published' });
      }
      if (moderatorNote !== undefined && typeof moderatorNote !== 'string') {
        return res.status(400).json({ message: 'ملاحظة المشرف يجب أن تكون نص', error: 'Invalid Note' });
      }
      if (moderatorNote && moderatorNote.length > 2000) {
        return res.status(400).json({ message: 'ملاحظة المشرف طويلة جداً', error: 'Note Too Long' });
      }

      const updateData: Record<string, unknown> = { lastModified: new Date() };
      if (published !== undefined) updateData.published = published;
      if (moderatorNote !== undefined) updateData.moderatorNote = sanitizeText(moderatorNote);

      await reviewRef.update(updateData);

      try {
        await db.collection('admin_audit_logs').add({
          action: 'updateReview',
          reviewId,
          changes: updateData,
          createdAt: new Date(),
        });
      } catch (e) {
        console.error('Audit log failed', e);
      }

      const updated = (await reviewRef.get()).data() || {};
      return res.status(200).json({
        id: reviewId,
        message: published !== undefined
          ? (published ? 'تم نشر التقييم بنجاح' : 'تم إخفاء التقييم بنجاح')
          : 'تم تحديث التقييم بنجاح',
        review: {
          id: reviewId,
          name: updated.name ?? reviewData.name ?? 'مجهول',
          comment: updated.comment ?? reviewData.comment ?? '',
          stars: updated.stars ?? reviewData.stars ?? 0,
          storeName: updated.storeName ?? reviewData.storeName ?? 'غير محدد',
          published: updated.published ?? reviewData.published ?? false,
          createdAt:
            (updated.createdAt || reviewData.createdAt)?.toDate?.()?.toISOString?.() ||
            updated.createdAt || reviewData.createdAt,
          lastModified:
            (updated.lastModified as Date)?.toISOString?.() ||
            new Date().toISOString(),
          moderatorNote: updated.moderatorNote ?? reviewData.moderatorNote,
        }
      });
    }

    if (req.method === 'DELETE') {
      const { confirm, reason } = req.body || {};
      if (confirm !== true || !reason || typeof reason !== 'string' || !reason.trim()) {
        return res.status(400).json({ message: 'تأكيد الحذف وسبب مطلوبان', error: 'Confirmation Required' });
      }

      await reviewRef.delete();

      try {
        await db.collection('admin_audit_logs').add({
          action: 'deleteReview',
          reviewId,
          reason: sanitizeText(reason),
          metadata: {
            storeName: reviewData?.storeName,
            stars: reviewData?.stars,
            published: reviewData?.published,
          },
          createdAt: new Date(),
        });
      } catch (e) {
        console.error('Audit log failed', e);
      }

      return res.status(200).json({ id: reviewId, message: 'تم حذف التقييم بنجاح' });
    }

    return res.status(405).json({ message: 'الطريقة غير مدعومة', error: 'Method Not Allowed' });
  } catch (error) {
    console.error('Review API error:', error);
    const msg = (error as Error).message || '';
    if (msg.startsWith('unauthenticated')) {
      return res.status(401).json({ message: 'غير مصرح', error: 'Unauthorized' });
    }
    if (msg.startsWith('permission-denied')) {
      return res.status(403).json({ message: 'ليس لديك صلاحية', error: 'Forbidden' });
    }
    return res.status(500).json({ message: 'خطأ داخلي في الخادم', error: 'Internal Server Error' });
  }
}
====[ END FILE: src/pages/api/admin/reviews/[id].ts ]===============================================

====[ START FILE: src/pages/api/admin/reviews/bulk.ts (6.3 KB) ]====================================
// src/pages/api/admin/reviews/bulk.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyAdmin } from "@/utils/verifyAdmin";

const db = dbAdmin(); // Firebase Admin Firestore instance

type BulkAction = "publish" | "unpublish" | "delete" | "updateNotes";

interface BulkActionRequest {
  action: BulkAction;
  reviewIds: string[];
  moderatorNote?: string;
  reason?: string; // required for delete
}

interface BulkResponse {
  message: string;
  processed: number;
  failed: number;
  errors: Array<{ id?: string; error: string }>;
}

/** Basic sanitizer (for server-side). For production consider a robust sanitizer. */
function sanitizeText(s: string) {
  return s.replace(/<\s*script.*?>.*?<\s*\/\s*script\s*>/gi, "").trim();
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<BulkResponse | { message: string }>
) {
  try {
    if (req.method !== "POST") {
      return res.status(405).json({ message: "Method not allowed" });
    }

    // Verify admin (throws on failure)
    const decoded = await verifyAdmin(req);

    // Parse and validate body
    const body = (req.body || {}) as BulkActionRequest;
    const { action, reviewIds, moderatorNote, reason } = body;

    if (!action || !["publish", "unpublish", "delete", "updateNotes"].includes(action)) {
      return res.status(400).json({ message: "Invalid action" });
    }

    if (!Array.isArray(reviewIds) || reviewIds.length === 0) {
      return res.status(400).json({ message: "reviewIds must be a non-empty array" });
    }

    // safety limits
    const MAX_ITEMS = 50;
    if (reviewIds.length > MAX_ITEMS) {
      return res
        .status(400)
        .json({ message: `Cannot process more than ${MAX_ITEMS} items in one request` });
    }

    if (action === "delete" && (!reason || typeof reason !== "string" || reason.trim().length === 0)) {
      return res.status(400).json({ message: "Delete action requires a non-empty reason" });
    }

    if (action === "updateNotes" && (!moderatorNote || typeof moderatorNote !== "string")) {
      return res.status(400).json({ message: "updateNotes action requires moderatorNote" });
    }

    // Normalize and validate IDs
    const ids = reviewIds
      .map((id) => (typeof id === "string" ? id.trim() : ""))
      .filter(Boolean);
    if (ids.length !== reviewIds.length) {
      return res.status(400).json({ message: "Some reviewIds are invalid" });
    }

    const errors: Array<{ id?: string; error: string }> = [];
    let processedCount = 0;

    // Firestore batch limit = 500 operations.
    const BATCH_OP_LIMIT = 500;
    const batches: FirebaseFirestore.WriteBatch[] = [];
    let currentBatch = db.batch();
    let currentOps = 0;

    // Pre-fetch documents in parallel (since number is small)
    const refs = ids.map((id) => db.collection("reviews").doc(id));
    const snaps = await Promise.all(refs.map((r) => r.get()));

    for (let i = 0; i < ids.length; i++) {
      const id = ids[i];
      const snap = snaps[i];

      if (!snap.exists) {
        errors.push({ id, error: "Review not found" });
        continue;
      }

      const ref = refs[i];

      try {
        const now = new Date();
        switch (action) {
          case "publish":
            currentBatch.update(ref, { published: true, lastModified: now });
            currentOps++;
            break;
          case "unpublish":
            currentBatch.update(ref, { published: false, lastModified: now });
            currentOps++;
            break;
          case "updateNotes":
            currentBatch.update(ref, { moderatorNote: sanitizeText(moderatorNote!), lastModified: now });
            currentOps++;
            break;
          case "delete":
            currentBatch.delete(ref);
            currentOps++;
            break;
        }

        // If reached batch limit, push and start new one
        if (currentOps >= BATCH_OP_LIMIT) {
          batches.push(currentBatch);
          currentBatch = db.batch();
          currentOps = 0;
        }

        processedCount++;
      } catch (err) {
        const msg = err instanceof Error ? err.message : "Unknown error during prepare";
        errors.push({ id, error: msg });
      }
    }

    // push last batch if has ops
    if (currentOps > 0) batches.push(currentBatch);

    // Commit batches sequentially
    for (const b of batches) {
      try {
        await b.commit();
      } catch (err) {
        const msg = err instanceof Error ? err.message : "unknown";
        console.error("Batch commit failed:", err);
        errors.push({ error: `Batch commit failed: ${msg}` });
      }
    }

    // Write a single audit log summarizing the bulk action
    try {
      await db.collection("admin_audit_logs").add({
        action: `bulk-${action}`,
        adminUid: decoded.uid,
        reviewCountRequested: ids.length,
        reviewCountProcessed: processedCount - errors.filter((e) => !!e.id).length,
        reviewIds: ids,
        details:
          action === "delete"
            ? { reason: sanitizeText(reason || "") }
            : action === "updateNotes"
            ? { moderatorNote: sanitizeText(moderatorNote || "") }
            : {},
        errors,
        ip: req.headers["x-forwarded-for"] || req.socket.remoteAddress || null,
        createdAt: new Date(),
      });
    } catch (e) {
      console.error("Failed to write admin audit log (bulk):", e);
      // Do not fail the request if audit log cannot be written
    }

    return res.status(200).json({
      message: "Bulk operation completed",
      processed: processedCount - errors.filter((e) => !!e.id).length,
      failed: errors.length,
      errors,
    });
  } catch (error) {
    console.error("Bulk reviews API error:", error);
    if (error instanceof Error) {
      if (error.message.startsWith("permission-denied")) {
        return res.status(403).json({ message: "Forbidden" });
      }
      if (error.message.startsWith("unauthenticated")) {
        return res.status(401).json({ message: "Unauthorized" });
      }
      return res.status(400).json({ message: error.message || "Bad Request" });
    }
    return res.status(500).json({ message: "Internal Server Error" });
  }
}
====[ END FILE: src/pages/api/admin/reviews/bulk.ts ]===============================================

====[ START FILE: src/pages/api/admin/reviews/hide.ts (1.0 KB) ]====================================
// src/pages/api/admin/hide.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { db } from '@/lib/firebase';
import { doc, updateDoc } from 'firebase/firestore';
import { verifyAdmin } from '@/utils/verifyAdmin';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'PATCH') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  try {
    await verifyAdmin(req); // ✅ تحقق من صلاحية المشرف

    const { id } = req.query;

    if (!id || typeof id !== 'string') {
      return res.status(400).json({ message: 'Missing review ID' });
    }

    const reviewRef = doc(db, 'reviews', id);
    await updateDoc(reviewRef, {
      published: false,
    });

    return res.status(200).json({ message: 'Review hidden successfully' });
  } catch (error) {
    console.error('Hide review error:', error);
    return res.status(401).json({ message: (error as Error).message || 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/admin/reviews/hide.ts ]===============================================

====[ START FILE: src/pages/api/admin/reviews/index.ts (4.8 KB) ]===================================
// src/pages/api/admin/reviews/index.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { verifyAdmin } from '@/utils/verifyAdmin';

interface Review {
  id: string;
  name?: string;
  comment?: string;
  stars?: number;
  storeName?: string;
  published?: boolean;
  createdAt?: string;
  lastModified?: string;
  moderatorNote?: string;
}

interface ReviewsResponse {
  reviews: Review[];
  total: number;
  published: number;
  pending: number;
  averageRating: number;
  hasMore: boolean;
  nextCursor?: string | null;
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<ReviewsResponse | { message: string; error?: string }>
) {
  try {
    await verifyAdmin(req);

    if (req.method !== 'GET') {
      return res.status(405).json({ message: 'Method not allowed' });
    }

    const db = dbAdmin();

    const {
      limit: limitParam = '20',
      storeName,
      stars,
      published,
      search,
      sortBy = 'createdAt',
      sortOrder = 'desc',
      cursor // review id to startAfter
    } = req.query;

    const limitNum = Math.min(100, Math.max(1, parseInt(limitParam as string, 10)));
    const sortDirection = (sortOrder === 'asc' ? 'asc' : 'desc') as FirebaseFirestore.OrderByDirection;
    const searchTerm = (search as string | undefined)?.toLowerCase().trim();

    const validSortFields = ['createdAt', 'stars', 'name', 'storeName', 'lastModified'];
    const sortField = (validSortFields.includes(sortBy as string) ? (sortBy as string) : 'createdAt');

    let q: FirebaseFirestore.Query = db.collection('reviews');

    if (storeName && typeof storeName === 'string') {
      q = q.where('storeName', '==', storeName);
    }
    if (stars && !isNaN(Number(stars))) {
      q = q.where('stars', '==', Number(stars));
    }
    if (published === 'true') {
      q = q.where('published', '==', true);
    } else if (published === 'false') {
      q = q.where('published', '==', false);
    }

    q = q.orderBy(sortField, sortDirection);
    if (sortField !== 'createdAt') {
      // secondary order to stabilize
      q = q.orderBy('createdAt', 'desc');
    }

    q = q.limit(limitNum + 1);

    if (cursor && typeof cursor === 'string') {
      const cursorDoc = await db.collection('reviews').doc(cursor).get();
      if (cursorDoc.exists) {
        q = q.startAfter(cursorDoc);
      }
    }

    const snap = await q.get();

    let reviews = snap.docs.map((doc) => {
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      const d = doc.data() as any;
      const createdAt =
        d.createdAt?.toDate?.()?.toISOString?.() ?? (typeof d.createdAt === 'string' ? d.createdAt : undefined);
      const lastModified =
        d.lastModified?.toDate?.()?.toISOString?.() ?? (typeof d.lastModified === 'string' ? d.lastModified : undefined);
      return {
        id: doc.id,
        name: d.name ?? 'مجهول',
        comment: d.comment ?? '',
        stars: d.stars ?? 0,
        storeName: d.storeName ?? 'غير محدد',
        published: Boolean(d.published),
        createdAt,
        lastModified,
        moderatorNote: d.moderatorNote,
      } as Review;
    });

    const hasMore = reviews.length > limitNum;
    let nextCursor: string | null = null;
    if (hasMore) {
      const last = snap.docs[limitNum];
      nextCursor = last?.id ?? null;
      reviews = reviews.slice(0, limitNum);
    }

    if (searchTerm) {
      reviews = reviews.filter((r) => {
        const text = [r.name, r.comment, r.storeName, r.moderatorNote].filter(Boolean).join(' ').toLowerCase();
        return text.includes(searchTerm);
      });
    }

    const total = reviews.length;
    const publishedCount = reviews.filter((r) => r.published).length;
    const pendingCount = reviews.filter((r) => !r.published).length;
    const avg = total ? reviews.reduce((s, r) => s + (r.stars ?? 0), 0) / total : 0;

    return res.status(200).json({
      reviews,
      total,
      published: publishedCount,
      pending: pendingCount,
      averageRating: Math.round(avg * 10) / 10,
      hasMore,
      nextCursor,
    });
  } catch (error) {
    console.error('Admin reviews API error:', error);
    const msg = (error as Error).message || '';
    if (msg.startsWith('unauthenticated')) {
      return res.status(401).json({ message: 'غير مصرح', error: 'Unauthorized' });
    }
    if (msg.startsWith('permission-denied')) {
      return res.status(403).json({ message: 'ليس لديك صلاحية للوصول', error: 'Forbidden' });
    }
    return res.status(500).json({ message: 'خطأ داخلي في الخادم', error: 'Internal Server Error' });
  }
}
====[ END FILE: src/pages/api/admin/reviews/index.ts ]==============================================

====[ START FILE: src/pages/api/admin/salla/register-webhooks.ts (1.9 KB) ]=========================
import type { NextApiRequest, NextApiResponse } from 'next';
import { verifyAdmin } from '@/utils/verifyAdmin';

type SubscribePayload = {
  name: string;
  event: string;
  version?: number;           // 2 افتراضي
  url: string;
  secret?: string;            // لسياستك Signature
  headers?: { key: string; value: string }[];
  rule?: string;              // فلاتر اختيارية
};

async function subscribe(baseUrl: string, token: string, payload: SubscribePayload) {
  const r = await fetch(`${baseUrl}/webhooks/subscribe`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },
    body: JSON.stringify(payload),
  });
  const j = await r.json();
  if (!r.ok) throw new Error(`Subscribe failed ${r.status}: ${JSON.stringify(j)}`);
  return j as Record<string, unknown>;
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  await verifyAdmin(req);
  if (req.method !== 'POST') return res.status(405).json({ message: 'Method not allowed' });

  const {
    accessToken,
    webhookUrl = `${process.env.PUBLIC_BASE_URL ?? 'https://theqah.com.sa'}/api/salla/webhook`,
    secret = process.env.SALLA_WEBHOOK_SECRET || '',
    events = ['order.created','order.status.updated','order.cancelled'] as string[],
  } = (req.body || {}) as {
    accessToken: string;
    webhookUrl?: string;
    secret?: string;
    events?: string[];
  };

  const baseUrl = 'https://api.salla.dev/admin/v2';
  const results: Record<string, unknown>[] = [];

  for (const ev of events) {
    const resp = await subscribe(baseUrl, accessToken, {
      name: `theqah:${ev}`,
      event: ev,
      version: 2,
      url: webhookUrl,
      secret,
    });
    results.push({ event: ev, resp });
  }

  return res.status(200).json({ ok: true, results });
}
====[ END FILE: src/pages/api/admin/salla/register-webhooks.ts ]====================================

====[ START FILE: src/pages/api/admin/sms-credits.ts (1.1 KB) ]=====================================
// src/pages/api/admin/sms-credits.ts
import type { NextApiRequest, NextApiResponse } from "next";

export default async function handler(_req: NextApiRequest, res: NextApiResponse) {
  const base = (process.env.OURSMS_BASE_URL || "").replace(/\/+$/, "");
  const url  = `${base}/billing/credits`;
  const token = process.env.OURSMS_API_KEY;

  try {
    if (!token) throw new Error("Missing OURSMS_API_KEY");
    const r = await fetch(url, { headers: { Authorization: `Bearer ${token}` } });
    const text = await r.text();
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let json: any = null; try { json = JSON.parse(text); } catch {}

    if (!r.ok) {
      return res.status(r.status).json({ ok:false, error:`oursms_http_${r.status}`, debug:{ url, status:r.status, responseText:text, responseJson:json }});
    }
    return res.status(200).json({ ok:true, data: json ?? text });
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    return res.status(500).json({ ok:false, error:e?.message||"credits_failed" });
  }
}
====[ END FILE: src/pages/api/admin/sms-credits.ts ]================================================

====[ START FILE: src/pages/api/admin/stats.ts (5.1 KB) ]===========================================
// src/pages/api/admin/stats.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { verifyAdmin } from '@/utils/verifyAdmin';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    await verifyAdmin(req);

    if (req.method !== 'GET') {
      return res.status(405).json({ message: 'Method not allowed' });
    }

    const db = dbAdmin();

    const [
      storesSnap,
      reviewsSnap,
      alertsSnap,
      publishedReviewsSnap,
      unresolvedAlertsSnap,
      recentReviewsSnap
    ] = await Promise.all([
      db.collection('stores').get(),
      db.collection('reviews').get(),
      db.collection('review_reports').get(),
      db.collection('reviews').where('published', '==', true).get(),
      db.collection('review_reports').where('resolved', '==', false).get(),
      db.collection('reviews').orderBy('createdAt', 'desc').limit(10).get(),
    ]);

    const totalStores = storesSnap.size;
    const totalReviews = reviewsSnap.size;
    const totalAlerts = alertsSnap.size;
    const publishedReviews = publishedReviewsSnap.size;
    const pendingReviews = totalReviews - publishedReviews;
    const unresolvedAlerts = unresolvedAlertsSnap.size;

    let averageRating = 0;
    const starsDistribution: Record<number, number> = { 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 };

    if (reviewsSnap.size > 0) {
      let totalStars = 0;
      reviewsSnap.forEach((doc) => {
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        const data = doc.data() as any;
        const stars = Number(data.stars) || 0;
        totalStars += stars;
        if (stars >= 1 && stars <= 5) starsDistribution[stars] = (starsDistribution[stars] || 0) + 1;
      });
      averageRating = Math.round((totalStars / reviewsSnap.size) * 10) / 10;
    }

    const publishRate = totalReviews > 0 ? Math.round((publishedReviews / totalReviews) * 100) : 0;
    const alertRate = totalReviews > 0 ? Math.round((totalAlerts / totalReviews) * 100) : 0;
    const averageReviewsPerStore = totalStores > 0 ? Math.round(totalReviews / totalStores) : 0;

    const reviewStatusData = [
      { name: 'منشورة', value: publishedReviews, percentage: publishRate },
      { name: 'معلقة', value: pendingReviews, percentage: 100 - publishRate },
    ];
    const alertStatusData = [
      { name: 'محلولة', value: totalAlerts - unresolvedAlerts },
      { name: 'غير محلولة', value: unresolvedAlerts },
    ];

    const recentActivities = recentReviewsSnap.docs.slice(0, 5).map((doc) => {
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      const data = doc.data() as any;
      return {
        id: doc.id,
        type: 'review',
        storeName: data.storeName,
        stars: data.stars,
        createdAt: data.createdAt?.toDate?.()?.toISOString?.() || data.createdAt || null,
        published: data.published,
      };
    });

    const stats = {
      totalStores,
      totalReviews,
      totalAlerts,
      publishedReviews,
      pendingReviews,
      unresolvedAlerts,

      averageRating,
      publishRate,
      alertRate,
      averageReviewsPerStore,

      reviewStatusData,
      alertStatusData,
      starsDistribution: Object.entries(starsDistribution).map(([stars, count]) => ({
        stars: Number(stars),
        count: Number(count),
        percentage: totalReviews > 0 ? Math.round((Number(count) / totalReviews) * 100) : 0,
      })),

      recentActivities,
      lastUpdated: new Date().toISOString(),

      insights: {
        topPerformingMetric:
          publishRate > 80
            ? 'معدل نشر عالي'
            : alertRate < 5
              ? 'معدل بلاغات منخفض'
              : averageRating > 4
                ? 'تقييمات إيجابية'
                : 'يحتاج تحسين',
        recommendation:
          publishRate < 50
            ? 'ينصح بمراجعة التقييمات المعلقة'
            : unresolvedAlerts > 10
              ? 'ينصح بمعالجة البلاغات المعلقة'
              : totalStores < totalReviews / 10
                ? 'فرصة لإضافة المزيد من المتاجر'
                : 'الأداء جيد، استمر!',
        healthScore: Math.round(
          (publishRate * 0.4) +
          (Math.max(0, 100 - alertRate * 2) * 0.3) +
          (Math.min(100, averageRating * 20) * 0.3)
        ),
      },
    };

    return res.status(200).json(stats);
  } catch (error) {
    console.error('Admin Stats Error:', error);
    const msg = (error as Error).message || '';
    if (msg.startsWith('unauthenticated')) {
      return res.status(401).json({ message: 'غير مصرح', error: 'Unauthorized' });
    }
    if (msg.startsWith('permission-denied')) {
      return res.status(403).json({ message: 'ليس لديك صلاحية', error: 'Forbidden' });
    }
    return res.status(500).json({
      message: 'خطأ داخلي في الخادم',
      error: 'Internal Server Error',
    });
  }
}
====[ END FILE: src/pages/api/admin/stats.ts ]======================================================

====[ START FILE: src/pages/api/admin/stores.ts (4.6 KB) ]==========================================
// src/pages/api/admin/stores.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { verifyAdmin } from '@/utils/verifyAdmin';

interface Store {
  id: string;
  name?: string;
  email?: string;
  username?: string;
  connected?: boolean;
  createdAt?: string;
  lastActive?: string;
  status?: 'active' | 'inactive' | 'suspended';
}

interface StoresResponse {
  stores: Store[];
  total: number;   // approximate unless you add counting
  page: number;
  limit: number;
  hasMore: boolean;
  nextCursor?: string | null;
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<StoresResponse | { message: string; error?: string }>
) {
  try {
    await verifyAdmin(req);

    if (req.method !== 'GET') {
      return res.status(405).json({ message: 'Method not allowed' });
    }

    const db = dbAdmin();

    const {
      page = '1', // kept for backwards compatibility; we use cursor pagination internally
      limit: limitParam = '50',
      search = '',
      sortBy = 'createdAt',
      sortOrder = 'desc',
      filterConnected,
      status,
      cursor, // store id to startAfter
    } = req.query;

    const limitNum = Math.min(100, Math.max(1, parseInt(limitParam as string, 10)));
    const sortDirection = (sortOrder === 'asc' ? 'asc' : 'desc') as FirebaseFirestore.OrderByDirection;
    const searchTerm = (search as string).toLowerCase().trim();
    const pageNum = Math.max(1, parseInt(page as string, 10));

    const validSortFields = ['createdAt', 'name', 'email', 'lastActive'];
    const sortField = validSortFields.includes(sortBy as string) ? (sortBy as string) : 'createdAt';

    let q: FirebaseFirestore.Query = db.collection('stores');

    if (filterConnected === 'connected') {
      q = q.where('connected', '==', true);
    } else if (filterConnected === 'disconnected') {
      q = q.where('connected', '==', false);
    }

    if (status && ['active', 'inactive', 'suspended'].includes(status as string)) {
      q = q.where('status', '==', status);
    }

    // Simple prefix search on name (requires index & lowercase normalization in data)
    if (searchTerm) {
      q = q.where('name_lower', '>=', searchTerm).where('name_lower', '<=', searchTerm + '\uf8ff');
    }

    q = q.orderBy(sortField, sortDirection).limit(limitNum + 1);

    if (cursor && typeof cursor === 'string') {
      const cursorDoc = await db.collection('stores').doc(cursor).get();
      if (cursorDoc.exists) q = q.startAfter(cursorDoc);
    }

    const snapshot = await q.get();

    let stores: Store[] = snapshot.docs.map((doc) => {
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      const data = doc.data() as any;
      const createdAt =
        data.createdAt?.toDate?.()?.toISOString?.() ?? (typeof data.createdAt === 'string' ? data.createdAt : undefined);
      const lastActive =
        data.lastActive?.toDate?.()?.toISOString?.() ?? (typeof data.lastActive === 'string' ? data.lastActive : undefined);
      return {
        id: doc.id,
        name: data.name,
        email: data.email,
        username: data.username,
        connected: Boolean(data.connected),
        createdAt,
        lastActive,
        status: data.status || 'active',
      };
    });

    const hasMore = stores.length > limitNum;
    let nextCursor: string | null = null;
    if (hasMore) {
      const last = snapshot.docs[limitNum];
      nextCursor = last?.id ?? null;
      stores = stores.slice(0, limitNum);
    }

    // (optional) extra client-side filter for search if you don't have name_lower in DB
    // if (searchTerm) { ... }

    const response: StoresResponse = {
      stores,
      total: pageNum === 1 ? stores.length + (hasMore ? 1 : 0) : -1,
      page: pageNum,
      limit: limitNum,
      hasMore,
      nextCursor,
    };

    res.setHeader('Cache-Control', 'private, max-age=30');
    return res.status(200).json(response);
  } catch (error) {
    console.error('Admin Stores API Error:', error);
    const msg = (error as Error).message || '';
    if (msg.startsWith('unauthenticated')) {
      return res.status(401).json({ message: 'غير مصرح', error: 'Unauthorized' });
    }
    if (msg.startsWith('permission-denied')) {
      return res.status(403).json({ message: 'غير مصرح لك بالوصول لهذه البيانات', error: 'Forbidden' });
    }
    return res.status(500).json({ message: 'خطأ داخلي في الخادم', error: 'Internal Server Error' });
  }
}
====[ END FILE: src/pages/api/admin/stores.ts ]=====================================================

====[ START FILE: src/pages/api/admin/test-notify.ts (2.3 KB) ]=====================================
// src/pages/api/admin/test-notify.ts
import type { NextApiRequest, NextApiResponse } from "next";
import {
  tryChannels,
  type Channel,
  type TryChannelsResult,
  type Attempt,
} from "@/server/messaging/send-invite";
import { verifyAdmin } from "@/utils/verifyAdmin";

type Strategy = "all" | "first_success";

type Body = {
  to?: string;
  email?: string;
  locale?: "ar" | "en";
  url?: string;
  storeName?: string;
  customerName?: string;
  /** ترتيب القنوات المطلوب (اختياري) */
  order?: Channel[];
  inviteId?: string;
  strategy?: Strategy;
};

type ApiResult = {
  ok: boolean;
  firstSuccessChannel: Channel | null;
  attempts: Attempt[];
};

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<ApiResult | { error: string; message?: string }>
) {
  try {
    await verifyAdmin(req);
    if (req.method !== "POST") {
      return res.status(405).json({ error: "Method not allowed" });
    }

    const {
      to,
      email,
      url,
      storeName,
      customerName,
      inviteId,
      strategy,
      order,
    } = (req.body || {}) as Body;

    if (!to || !url || !storeName) {
      return res
        .status(400)
        .json({ error: "to, url, storeName are required" });
    }

    const result: TryChannelsResult = await tryChannels({
      phone: String(to),
      email: email ? String(email) : undefined,
      url: String(url),
      storeName: String(storeName),
      customerName: customerName ? String(customerName) : "عميل",
      country: "sa",
      inviteId: inviteId ? String(inviteId) : undefined,
      strategy: strategy === "first_success" ? "first_success" : "all",
      order, // ✅ بقت جزء من النوع
    });

    return res.status(200).json(result);
  } catch (error) {
    const msg = (error as Error).message || "";
    if (msg.startsWith("permission-denied")) {
      return res
        .status(403)
        .json({ error: "Forbidden", message: "ليس لديك صلاحية" });
    }
    if (msg.startsWith("unauthenticated")) {
      return res
        .status(401)
        .json({ error: "Unauthorized", message: "غير مصرح" });
    }
    return res.status(500).json({ error: "Internal Server Error" });
  }
}
====[ END FILE: src/pages/api/admin/test-notify.ts ]================================================

====[ START FILE: src/pages/api/admin/users.ts (1.8 KB) ]===========================================
// src/pages/api/admin/users.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { requireAdmin } from '@/server/auth/requireAdmin';
import { authAdmin, dbAdmin } from '@/lib/firebaseAdmin';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    await requireAdmin(req);
    const db = dbAdmin();

    if (req.method === 'GET') {
      const { q = '', limit = '50' } = req.query;
      const lim = Math.min(Number(limit) || 50, 200);

      // لو عندك users collection
      let qRef = db.collection('users').limit(lim);

      if (typeof q === 'string' && q.trim()) {
        // فلترة بسيطة على emailLower (يفضّل تخزينه أثناء التسجيل)
        const qLower = q.toLowerCase();
        qRef = db
          .collection('users')
          .where('emailLower', '>=', qLower)
          .where('emailLower', '<=', qLower + '\uf8ff')
          .limit(lim);
      }

      const snap = await qRef.get();
      const users = snap.docs.map((d) => ({ id: d.id, ...d.data() }));
      return res.status(200).json({ users });
    }

    if (req.method === 'POST') {
      const { uid, makeAdmin } = req.body || {};
      if (!uid || typeof makeAdmin !== 'boolean') {
        return res.status(400).json({ message: 'uid/makeAdmin required' });
      }

      const auth = authAdmin();
      await auth.setCustomUserClaims(uid, { admin: makeAdmin });
      return res.status(200).json({ ok: true });
    }

    return res.status(405).json({ message: 'Method not allowed' });
  } catch (e) {
    // استخدام المتغير يُسكت تحذير no-unused-vars ويحتفظ بالأثر للتشخيص
    console.error('Admin users API error:', e);
    return res.status(403).json({ message: 'forbidden' });
  }
}
====[ END FILE: src/pages/api/admin/users.ts ]======================================================

====[ START FILE: src/pages/api/ai/insights.ts (2.3 KB) ]===========================================
// src/pages/api/ai/insights.ts
import type { NextApiRequest, NextApiResponse } from "next";
import OpenAI from "openai";
import { requireUser } from "@/server/auth/requireUser";

type AnalyticsData = {
  totalOrders: number;
  totalReviews: number;
  positiveRate: number;
  ordersChart: { month: string; count: number }[];
  reviewsChart: { month: string; positive: number; negative: number }[];
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).json({ ok: false, message: "Method not allowed" });

  try {
    await requireUser(req); // لو محتاج uid استخدمه هنا

    const data = (req.body?.data ?? null) as AnalyticsData | null;
    if (!data) return res.status(400).json({ ok: false, message: "missing data" });

    const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
    const model = process.env.OPENAI_MODEL || "gpt-4o-mini";

    const content = [
      "حلّل بيانات لوحة التحكم التالية وأرجِع 4–6 نقاط عملية قصيرة بالعربية:",
      `إجمالي الطلبات: ${data.totalOrders}`,
      `إجمالي التقييمات: ${data.totalReviews}`,
      `نسبة الإيجابية: ${data.positiveRate}%`,
      `الطلبات الشهرية: ${data.ordersChart.map(x => `${x.month}:${x.count}`).join(", ")}`,
      `التقييمات الشهرية (+:-): ${data.reviewsChart.map(x => `${x.month}:${x.positive}/${x.negative}`).join(", ")}`,
      "صيّغ التوصيات بلهجة مهنية ولغة موجزة، مع إيموجي مناسب لكل نقطة."
    ].join("\n");

    const completion = await client.chat.completions.create({
      model,
      temperature: 0.3,
      max_tokens: 500,
      messages: [
        { role: "system", content: "أنت مساعد تحليلي يُنتج توصيات عملية موجزة." },
        { role: "user", content }
      ],
    });

    const text = completion.choices[0]?.message?.content?.trim() || "—";
    return res.status(200).json({ ok: true, text });
  } catch (e) {
    const msg = e instanceof Error ? e.message : String(e);
    return res.status(500).json({ ok: false, message: msg });
  }
}
====[ END FILE: src/pages/api/ai/insights.ts ]======================================================

====[ START FILE: src/pages/api/auth/exchange-onboarding.ts (4.0 KB) ]==============================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin, authAdmin } from "@/lib/firebaseAdmin";

type Body = { tokenId?: string; email?: string; password?: string };

type OnboardingDoc = {
  id?: string;
  storeUid?: string;               // "salla:123" (الأفضل)
  uid?: string;                    // للتوافق
  store?: { id?: number | string } | null;
  usedAt?: number | null;
  expiresAt?: number | null;
};

type Ok = { ok: true; userUid: string; storeUid: string; customToken: string };
type Err = { ok: false; error: string };

function msg(e: unknown) { return e instanceof Error ? e.message : String(e); }
function resolveStoreUid(d: OnboardingDoc | undefined): string | null {
  if (!d) return null;
  if (d.storeUid) return d.storeUid;
  if (d.uid && d.uid.startsWith("salla:")) return d.uid;
  const rawId = d.store?.id;
  if (rawId != null) return `salla:${String(rawId)}`;
  return null;
}

export default async function handler(req: NextApiRequest, res: NextApiResponse<Ok | Err>) {
  if (req.method !== "POST") return res.status(405).json({ ok: false, error: "Method Not Allowed" });

  try {
    const { tokenId, email, password } = (req.body || {}) as Body;
    if (!tokenId) return res.status(400).json({ ok: false, error: "tokenId is required" });
    if (!password || password.length < 6) {
      return res.status(400).json({ ok: false, error: "Password must be at least 6 characters" });
    }

    const db = dbAdmin();
    const adminAuth = authAdmin();

    // 1) اقرأ توكن الـ onboarding
    const tokSnap = await db.collection("onboarding_tokens").doc(tokenId).get();
    if (!tokSnap.exists) return res.status(401).json({ ok: false, error: "Invalid onboarding token" });

    const tok = tokSnap.data() as OnboardingDoc | undefined;
    if (tok?.usedAt) return res.status(401).json({ ok: false, error: "Token already used" });
    if (tok?.expiresAt && Date.now() > tok.expiresAt) {
      return res.status(401).json({ ok: false, error: "Token expired" });
    }

    const storeUid = resolveStoreUid(tok);
    if (!storeUid) return res.status(400).json({ ok: false, error: "Cannot resolve storeUid" });

    // 2) أنشئ/حدّث مستخدم Firebase
    let userUid: string;
    if (email) {
      const existing = await adminAuth.getUserByEmail(email).catch(() => null);
      if (existing) {
        userUid = existing.uid;
        await adminAuth.updateUser(userUid, { password, emailVerified: true, disabled: false });
      } else {
        const created = await adminAuth.createUser({ email, password, emailVerified: true, disabled: false });
        userUid = created.uid;
      }
    } else {
      const created = await adminAuth.createUser({ disabled: false });
      userUid = created.uid;
    }

    // 3) ثبّت الملكية على المستند الحقيقي
    await db.collection("stores").doc(storeUid).set({
      uid: storeUid,
      platform: "salla",
      ownerUid: userUid,
      updatedAt: Date.now(),
    }, { merge: true });

    // ✅ 4) اكتب alias على stores/{ownerUid} → storeUid
    await db.collection("stores").doc(userUid).set({
      ownerUid: userUid,
      platform: "salla",
      storeUid,               // يشير للمستند الحقيقي
      updatedAt: Date.now(),
    }, { merge: true });

    // (اختياري) ربط عكسي
    await db.collection("owners").doc(userUid).collection("stores").doc(storeUid)
      .set({ platform: "salla", linkedAt: Date.now() }, { merge: true })
      .catch(() => {});

    // علّم التوكن كمستخدم
    await tokSnap.ref.set({ usedAt: Date.now(), ownerUid: userUid, storeUid }, { merge: true });

    // 5) custom token
    const customToken = await adminAuth.createCustomToken(userUid);
    return res.status(200).json({ ok: true, userUid, storeUid, customToken });
  } catch (e) {
    return res.status(500).json({ ok: false, error: msg(e) });
  }
}
====[ END FILE: src/pages/api/auth/exchange-onboarding.ts ]=========================================

====[ START FILE: src/pages/api/auth/session.ts (5.1 KB) ]==========================================
// File: src/pages/api/auth/session.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { authAdmin } from '@/lib/firebaseAdmin';

type SameSiteOpt = 'Lax' | 'Strict' | 'None';

function cookieHeader(
  name: string,
  value: string,
  opts: {
    maxAgeSeconds?: number;
    secure?: boolean;
    path?: string;
    sameSite?: SameSiteOpt;
    httpOnly?: boolean;
    domain?: string;
    expires?: Date; // إذا لم تُمرّر، سنحسبها من maxAgeSeconds
  } = {}
) {
  const parts: string[] = [];

  // خزن القيمة بأمان (الكوكي ممكن يكون طويل جدًا)
  parts.push(`${name}=${value ? encodeURIComponent(value) : ''}`);

  const path = opts.path ?? '/';
  parts.push(`Path=${path}`);

  const sameSite = opts.sameSite ?? 'Lax';
  parts.push(`SameSite=${sameSite}`);

  // لو SameSite=None لازم Secure حسب مواصفات المتصفح
  const forceSecure = sameSite === 'None';
  const secure = (opts.secure ?? true) || forceSecure;
  if (secure) parts.push('Secure');

  const httpOnly = opts.httpOnly ?? true;
  if (httpOnly) parts.push('HttpOnly');

  if (opts.domain) parts.push(`Domain=${opts.domain}`);

  if (opts.maxAgeSeconds != null) {
    parts.push(`Max-Age=${opts.maxAgeSeconds}`);
    const exp =
      opts.expires ??
      new Date(Date.now() + Math.max(0, opts.maxAgeSeconds) * 1000);
    parts.push(`Expires=${exp.toUTCString()}`);
  } else if (opts.expires) {
    parts.push(`Expires=${opts.expires.toUTCString()}`);
  }

  return parts.join('; ');
}

function isHttpsReq(req: NextApiRequest) {
  const xf = (req.headers['x-forwarded-proto'] ?? '').toString();
  //eslint-disable-next-line @typescript-eslint/no-explicit-any
  return xf.includes('https') || (req.socket as any)?.encrypted === true;
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const https = isHttpsReq(req);
  const inProd = process.env.NODE_ENV === 'production';

  if (req.method === 'POST') {
    // خُد الـ ID token من Authorization أو من البودي
    const authz = req.headers.authorization || '';
    const m = authz.match(/^Bearer\s+(.+)$/i);
    const idToken = m?.[1] || (req.body?.idToken as string | undefined);

    if (!idToken) return res.status(400).json({ error: 'MISSING_ID_TOKEN' });

    try {
      // مدة السيشن 5 أيام
      const expiresInMs = 5 * 24 * 60 * 60 * 1000;
      const expiresInSec = Math.floor(expiresInMs / 1000);

      // تحقق أولي (يرمي لو غير صالح)
      const decoded = await authAdmin().verifyIdToken(idToken);

      // أنشئ session cookie
      const sessionCookie = await authAdmin().createSessionCookie(idToken, {
        expiresIn: expiresInMs,
      });

      res.setHeader(
        'Set-Cookie',
        cookieHeader('session', sessionCookie, {
          maxAgeSeconds: expiresInSec,
          secure: https || inProd,
          sameSite: 'Lax', // لو محتاج Cross-Site مثلاً من سكربت ويدجت خارجي، استخدم 'None'
          httpOnly: true,
          path: '/',
          // domain: '.your-domain.com', // اختياري
        })
      );

      // مفيد للـ CDNs / المتصفحات
      res.setHeader('Vary', 'Cookie');

      return res.status(200).json({ ok: true, uid: decoded.uid });
    } catch {
      return res.status(401).json({ error: 'SESSION_CREATE_FAILED' });
    }
  }

  if (req.method === 'GET') {
    // تحقّق من الجلسة الحالية
    try {
      const session = req.cookies?.session || '';
      if (!session) return res.status(401).json({ error: 'NO_SESSION' });

      // checkRevoked=true عشان نراعي إلغاءات سابقة
      const decoded = await authAdmin().verifySessionCookie(session, true);

      return res.status(200).json({
        ok: true,
        uid: decoded.uid,
        email: decoded.email ?? null,
      });
    } catch {
      return res.status(401).json({ error: 'INVALID_SESSION' });
    }
  }

  if (req.method === 'DELETE') {
    // حاول إلغاء جلسات المستخدم (اختياري لكنه أفضل أمنيًا)
    try {
      const session = req.cookies?.session || '';
      if (session) {
        const decoded = await authAdmin().verifySessionCookie(session, false);
        // إلغاء جميع الجلسات/الريفريش توكنز للمستخدم
        await authAdmin().revokeRefreshTokens(decoded.sub);
      }
    } catch {
      // تجاهل لو فشل التحقق؛ هنمسح الكوكي على أي حال
    }

    // امسح الكوكي (Max-Age=0 و Expires بالماضي)
    res.setHeader(
      'Set-Cookie',
      cookieHeader('session', '', {
        maxAgeSeconds: 0,
        secure: https || inProd,
        sameSite: 'Lax',
        httpOnly: true,
        path: '/',
        expires: new Date(0),
      })
    );
    res.setHeader('Vary', 'Cookie');
    return res.status(200).json({ ok: true });
  }

  return res.status(405).json({ error: 'METHOD_NOT_ALLOWED' });
}
====[ END FILE: src/pages/api/auth/session.ts ]=====================================================

====[ START FILE: src/pages/api/orders/add.ts (3.1 KB) ]============================================
// src/pages/api/orders/add.ts
import type { NextApiRequest, NextApiResponse } from "next";
import admin from "firebase-admin";               // ⬅️ جديد: للـ serverTimestamp
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyUser } from "@/utils/verifyUser";

type Body = {
  orderId: string;
  storeUid: string;
  productId: string;
  customer?: {
    name?: string;
    phone?: string;
    email?: string;
  };
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "POST") return res.status(405).json({ ok: false, error: "METHOD_NOT_ALLOWED" });

    // 1) Auth
    const { uid } = await verifyUser(req);

    // 2) Validate
    const { orderId, storeUid, productId, customer } = (req.body ?? {}) as Partial<Body>;
    if (!orderId || !storeUid || !productId) {
      return res.status(400).json({ ok: false, error: "MISSING_FIELDS" });
    }

    const db = dbAdmin();

    // 3) المتجر + ملكية
    const storeRef = db.collection("stores").doc(String(storeUid));
    const storeSnap = await storeRef.get();
    if (!storeSnap.exists) return res.status(404).json({ ok: false, error: "STORE_NOT_FOUND" });

    const storeData = storeSnap.data() || {};
    const ownerUids: string[] = Array.isArray(storeData.ownerUids) ? storeData.ownerUids : [];
    const isOwner = storeUid === uid || ownerUids.includes(uid);
    if (!isOwner) return res.status(403).json({ ok: false, error: "NOT_STORE_OWNER" });

    // 4) بيانات الطلب الموحّدة (تُستخدم في الجذري + الساب-كولكشن)
    const orderDoc = {
      orderId: String(orderId),
      storeUid: String(storeUid),
      storeName: String(storeData.name || storeData.storeName || "متجرك"),
      productId: String(productId),
      name: customer?.name ?? null,
      phone: customer?.phone ?? null,
      email: customer?.email ?? null,
      status: "created",
      reviewSent: false,
      reviewLink: null as string | null,
      reviewTokenId: null as string | null,
      createdAt: admin.firestore.FieldValue.serverTimestamp(),
      createdAtMs: Date.now(), // للفرز السريع عدديًا لو حبيت
    };

    // 5) كتابة مزدوجة (batch): nested + root
    const batch = db.batch();
    const nestedRef = storeRef.collection("orders").doc(String(orderId));
    const rootRef = db.collection("orders").doc(String(orderId));
    batch.set(nestedRef, orderDoc, { merge: true });
    batch.set(rootRef,  orderDoc, { merge: true });
    await batch.commit();

    return res.status(201).json({
      ok: true,
      id: String(orderId),
      locations: {
        root: `orders/${orderId}`,
        nested: `stores/${storeUid}/orders/${orderId}`,
      },
    });
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    const status = Number(e?.status) || 500;
    const message = e?.message || "INTERNAL";
    console.error("orders/add error:", message);
    return res.status(status).json({ ok: false, error: message });
  }
}
====[ END FILE: src/pages/api/orders/add.ts ]=======================================================

====[ START FILE: src/pages/api/orders/get.ts (2.3 KB) ]============================================
// src/pages/api/ai/insights.ts
import type { NextApiRequest, NextApiResponse } from "next";
import OpenAI from "openai";
import { requireUser } from "@/server/auth/requireUser";

type AnalyticsData = {
  totalOrders: number;
  totalReviews: number;
  positiveRate: number;
  ordersChart: { month: string; count: number }[];
  reviewsChart: { month: string; positive: number; negative: number }[];
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).json({ ok: false, message: "Method not allowed" });

  try {
    await requireUser(req); // لو محتاج uid استخدمه هنا

    const data = (req.body?.data ?? null) as AnalyticsData | null;
    if (!data) return res.status(400).json({ ok: false, message: "missing data" });

    const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
    const model = process.env.OPENAI_MODEL || "gpt-4o-mini";

    const content = [
      "حلّل بيانات لوحة التحكم التالية وأرجِع 4–6 نقاط عملية قصيرة بالعربية:",
      `إجمالي الطلبات: ${data.totalOrders}`,
      `إجمالي التقييمات: ${data.totalReviews}`,
      `نسبة الإيجابية: ${data.positiveRate}%`,
      `الطلبات الشهرية: ${data.ordersChart.map(x => `${x.month}:${x.count}`).join(", ")}`,
      `التقييمات الشهرية (+:-): ${data.reviewsChart.map(x => `${x.month}:${x.positive}/${x.negative}`).join(", ")}`,
      "صيّغ التوصيات بلهجة مهنية ولغة موجزة، مع إيموجي مناسب لكل نقطة."
    ].join("\n");

    const completion = await client.chat.completions.create({
      model,
      temperature: 0.3,
      max_tokens: 500,
      messages: [
        { role: "system", content: "أنت مساعد تحليلي يُنتج توصيات عملية موجزة." },
        { role: "user", content }
      ],
    });

    const text = completion.choices[0]?.message?.content?.trim() || "—";
    return res.status(200).json({ ok: true, text });
  } catch (e) {
    const msg = e instanceof Error ? e.message : String(e);
    return res.status(500).json({ ok: false, message: msg });
  }
}
====[ END FILE: src/pages/api/orders/get.ts ]=======================================================

====[ START FILE: src/pages/api/orders/import.ts (3.1 KB) ]=========================================
// src/pages/api/orders/import.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import formidable, { type Fields, type Files, type File } from 'formidable';
import fs from 'fs/promises';
import { parse as parseCsv } from 'csv-parse/sync';
import { addDoc, collection } from 'firebase/firestore';
import { db } from '@/lib/firebase';
import { verifyStore, type AuthedRequest } from '@/utils/verifyStore';

export const config = { api: { bodyParser: false } };

type OrderRecord = {
  name: string;
  phone: string;
  email?: string;
  orderId: string;
  productId: string;
  storeName: string;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // ✅ verifyStore now takes only (req) and throws on failure
  try {
    await verifyStore(req);
  } catch (e) {
    const err = e as Error & { status?: number };
    return res.status(err.status ?? 401).json({ message: err.message || 'Unauthorized' });
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  const form = new formidable.IncomingForm();

  try {
    // ✅ formidable v3 Promise API: parse(req) → [fields, files]
    const [, files]: [Fields, Files] = await form.parse(req);

    const csvFile = files.csv as File | File[] | undefined;
    if (!csvFile) return res.status(400).json({ message: 'CSV upload error (no file)' });

    const fileObj = Array.isArray(csvFile) ? csvFile[0] : csvFile;
    if (!fileObj?.filepath) return res.status(400).json({ message: 'CSV upload error (invalid file)' });

    const filePath = fileObj.filepath;
    const buf = await fs.readFile(filePath);

    const records = parseCsv(buf, {
      columns: true,
      skip_empty_lines: true,
      trim: true,
    }) as OrderRecord[];

    const { storeId } = req as AuthedRequest;

    let inserted = 0;
    let skipped = 0;

    for (const raw of records) {
      const name = String(raw.name ?? '').trim();
      const phone = String(raw.phone ?? '').trim();
      const email = raw.email ? String(raw.email).trim() : undefined;
      const orderId = String(raw.orderId ?? '').trim();
      const productId = String(raw.productId ?? '').trim();
      const storeName = String(raw.storeName ?? '').trim();

      if (!name || !phone || !orderId || !productId || !storeName) {
        skipped++;
        continue;
      }

      await addDoc(collection(db, 'orders'), {
        name,
        phone,
        email: email || undefined,
        orderId,
        productId,
        storeName,
        storeId: storeId ?? null,
        sent: false,
        createdAt: new Date().toISOString(),
      });

      inserted++;
    }

    // best-effort cleanup
    try { await fs.unlink(filePath); } catch {}

    return res.status(200).json({
      message: 'Orders imported successfully',
      inserted,
      skipped,
      total: records.length,
    });
  } catch (e) {
    console.error('Import error:', e);
    return res.status(400).json({ message: 'CSV parse/upload error' });
  }
}
====[ END FILE: src/pages/api/orders/import.ts ]====================================================

====[ START FILE: src/pages/api/orders/index.ts (1.6 KB) ]==========================================
// src/pages/api/orders/index.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { requireUser } from '@/server/auth/requireUser';

type OrderDoc = {
  name?: string;
  phone?: string;
  email?: string;
  createdAt?: number | string;
  reviewSent?: boolean;
  storeUid: string;
};

type OrderDTO = {
  id: string;
  name: string;
  phone: string;
  email: string;
  createdAt: number;
  sent: boolean;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'GET') return res.status(405).json({ message: 'Method not allowed' });
  try {
    const { uid } = await requireUser(req);
    const db = dbAdmin();

    const snap = await db.collection('orders')
      .where('storeUid', '==', uid)
      .orderBy('createdAt', 'desc')
      .limit(200)
      .get();

    const orders: OrderDTO[] = snap.docs.map((d) => {
      const x = d.data() as OrderDoc;
      const created =
        typeof x.createdAt === 'number'
          ? x.createdAt
          : (typeof x.createdAt === 'string' ? Date.parse(x.createdAt) : Date.now());
      return {
        id: d.id,
        name: x.name || '',
        phone: x.phone || '',
        email: x.email || '',
        createdAt: Number.isFinite(created) ? created : Date.now(),
        sent: !!x.reviewSent,
      };
    });

    res.status(200).json({ orders });
  } catch (e) {
    console.error('orders list error', e);
    res.status(401).json({ message: 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/orders/index.ts ]=====================================================

====[ START FILE: src/pages/api/orders/send-review.ts (9.5 KB) ]====================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyUser } from "@/utils/verifyUser";
import { createShortLink } from "@/server/short-links";
import { createReviewToken } from "@/server/review-tokens";
import { sendEmailDmail as sendEmail } from "@/server/messaging/email-dmail";
import { sendSms, buildInviteSMS } from "@/server/messaging/send-sms";

type OrderDoc = {
  storeUid: string;
  storeName?: string;
  productId?: string | null;
  name?: string;
  phone?: string;
  email?: string;
  reviewSent?: boolean;
  reviewLink?: string;
  reviewTokenId?: string;
};

type Channel = "sms" | "email";
type ChannelResult = { channel: Channel; ok: boolean; error?: string };

type Ok = {
  ok: true;
  link: string;
  partial: boolean;
  channels: { sms?: boolean; email?: boolean };
  results: ChannelResult[];
  debug?: Record<string, unknown>;
};
type Err = {
  ok: false;
  message: string;
  results?: ChannelResult[];
  debug?: Record<string, unknown>;
};

function errMsg(e: unknown): string {
  if (e instanceof Error) return e.message;
  if (typeof e === "string") return e;
  try { return JSON.stringify(e); } catch { return String(e); }
}

function buildReviewEmailHTML(customerName: string, storeName: string, reviewUrl: string) {
  const pre = "قيّم تجربتك خلال دقيقة — اضغط الزر بالأسفل";
  return `<!doctype html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="utf-8">
  <meta name="x-apple-disable-message-reformatting">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>قيّم تجربتك</title>
</head>
<body style="margin:0;padding:0;background:#f6f7f9;">
  <div style="display:none;overflow:hidden;line-height:1px;opacity:0;max-height:0;max-width:0;">
    ${pre} ‏‏​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
  </div>
  <table role="presentation" width="100%" cellpadding="0" cellspacing="0" style="background:#f6f7f9;">
    <tr>
      <td align="center" style="padding:24px;">
        <table role="presentation" width="100%" cellpadding="0" cellspacing="0" style="max-width:600px;background:#ffffff;border-radius:12px;border:1px solid #e5e7eb;overflow:hidden;">
          <tr>
            <td style="padding:20px 24px; text-align:right; font-family:Tahoma, Arial, sans-serif;">
              <img src="https://www.theqah.com.sa/logo.png" alt="ثقة" width="28" height="28" style="vertical-align:middle;border:none;margin-left:8px;">
              <span style="font-size:16px;font-weight:bold;color:#0f172a;">ثقة</span>
            </td>
          </tr>
          <tr>
            <td style="padding:0 24px 10px 24px; text-align:right; font-family:Tahoma, Arial, sans-serif;">
              <h1 style="margin:0 0 6px 0; font-size:20px; color:#0f172a;">مرحباً ${customerName || "عميلنا العزيز"}،</h1>
              <p style="margin:0; font-size:14px; color:#334155;">
                قيّم تجربتك من <strong>${storeName}</strong> وساهم في إسعاد يتيم!
              </p>
            </td>
          </tr>
          <tr>
            <td align="right" style="padding:18px 24px 6px 24px; font-family:Tahoma, Arial, sans-serif;">
              <a href="${reviewUrl}" style="display:inline-block;background:#16a34a;color:#ffffff;text-decoration:none;padding:12px 20px;border-radius:8px;font-size:15px;">
                اضغط للتقييم الآن
              </a>
            </td>
          </tr>
          <tr>
            <td style="padding:10px 24px 0 24px; text-align:right; font-family:Tahoma, Arial, sans-serif;">
              <p style="margin:0;font-size:12px;color:#64748b;">
                أو افتح هذا الرابط: <a href="${reviewUrl}" style="color:#0ea5e9;">${reviewUrl}</a>
              </p>
            </td>
          </tr>
          <tr>
            <td style="padding:24px; text-align:right; font-family:Tahoma, Arial, sans-serif;">
              <p style="margin:0;font-size:12px;color:#94a3b8;">شكراً لك — فريق ثقة</p>
            </td>
          </tr>
        </table>
        <table role="presentation" width="100%" cellpadding="0" cellspacing="0" style="max-width:600px;margin-top:12px;">
          <tr>
            <td style="text-align:center;font-family:Tahoma, Arial, sans-serif;color:#94a3b8;font-size:11px;">
              إذا لم تكن أنت المقصود بهذه الرسالة، يمكنك تجاهلها.
            </td>
          </tr>
        </table>
      </td>
    </tr>
  </table>
</body>
</html>`;
}

export default async function handler(req: NextApiRequest, res: NextApiResponse<Ok | Err>) {
  if (req.method !== "POST") {
    return res.status(405).json({ ok: false, message: "Method not allowed" });
  }

  //eslint-disable-next-line @typescript-eslint/no-explicit-any
  const debugFlag = req.query.debug === "1" || (req.body && (req.body as any).debug === true);

  try {
    const { uid } = await verifyUser(req);

    const { id } = (req.body ?? {}) as { id?: string };
    if (!id) return res.status(400).json({ ok: false, message: "id required" });

    const db = dbAdmin();
    const docRef = db.collection("orders").doc(id);
    const snap = await docRef.get();
    if (!snap.exists) return res.status(404).json({ ok: false, message: "Order not found" });

    const order = snap.data() as OrderDoc;
    if (order.storeUid !== uid) return res.status(403).json({ ok: false, message: "Forbidden" });
    if (order.reviewSent) return res.status(409).json({ ok: false, message: "Already sent" });

    const token = await createReviewToken({
      orderId: id,
      storeUid: uid,
      productId: order.productId ?? "",
      name: order.name || "عميل",
      expiresAt: Date.now() + 30 * 24 * 60 * 60 * 1000,
    });

    const base = (process.env.APP_BASE_URL || process.env.NEXT_PUBLIC_APP_URL || process.env.NEXT_PUBLIC_BASE_URL || "").replace(/\/+$/, "");
    if (!base) return res.status(500).json({ ok: false, message: "BASE_URL not configured" });

    const reviewUrl = `${base}/review/${token.id}`;

    let publicUrl = reviewUrl;
    try {
      publicUrl = await createShortLink(reviewUrl);
    } catch {
      publicUrl = reviewUrl;
    }

    const storeName = order.storeName || "متجرك";
    const customerName = order.name || "عميلنا العزيز";

    const smsText = buildInviteSMS(storeName, publicUrl);
    const emailHtml = buildReviewEmailHTML(customerName, storeName, publicUrl);

    const haveSms = Boolean(order.phone);
    const haveEmail = Boolean(order.email);

    const canSms = Boolean(process.env.OURSMS_API_KEY);
    const canEmail =
      Boolean(process.env.DMAIL_SMTP_HOST) &&
      Boolean(process.env.DMAIL_SMTP_USER) &&
      Boolean(process.env.DMAIL_SMTP_PASS);

    const trySms = haveSms && canSms;
    const tryEmail = haveEmail && canEmail;

    const debugInfo: Record<string, unknown> = debugFlag
      ? {
          id, uid, haveSms, haveEmail, canSms, canEmail,
          envSeen: {
            OURSMS_API_KEY: !!process.env.OURSMS_API_KEY,
            OURSMS_BASE_URL: process.env.OURSMS_BASE_URL,
            OURSMS_SENDER: process.env.OURSMS_SENDER,
            DMAIL_SMTP_HOST: !!process.env.DMAIL_SMTP_HOST,
            DMAIL_SMTP_PORT: process.env.DMAIL_SMTP_PORT,
            DMAIL_SMTP_USER: !!process.env.DMAIL_SMTP_USER,
            DMAIL_FROM: process.env.DMAIL_FROM,
          },
          base, reviewUrl, publicUrl,
        }
      : {};

    if (!trySms && !tryEmail) {
      return res.status(400).json({
        ok: false,
        message: "No deliverable channels",
        results: [
          { channel: "sms",   ok: false, error: !haveSms ? "no phone" : !canSms ? "provider not configured" : "skipped" },
          { channel: "email", ok: false, error: !haveEmail ? "no email" : !canEmail ? "provider not configured" : "skipped" },
        ],
        debug: debugInfo,
      });
    }

    async function attempt(channel: Channel, fn: () => Promise<{ ok: boolean }>): Promise<ChannelResult> {
      try {
        const r = await fn();
        return { channel, ok: !!r?.ok };
      } catch (e) {
        return { channel, ok: false, error: errMsg(e) };
      }
    }

    const attempts: Array<Promise<ChannelResult>> = [];
    if (trySms)   attempts.push(attempt("sms",   () => sendSms(String(order.phone), smsText, { defaultCountry: "SA" })));
    if (tryEmail) attempts.push(attempt("email", () => sendEmail(String(order.email), "قيّم تجربتك معنا ✨", emailHtml)));

    const results = await Promise.all(attempts);
    const smsOk = results.find((r) => r.channel === "sms")?.ok || false;
    const emailOk = results.find((r) => r.channel === "email")?.ok || false;

    if (!(smsOk || emailOk)) {
      return res.status(502).json({ ok: false, message: "All channels failed", results, debug: debugInfo });
    }

    await docRef.update({
      reviewSent: true,
      reviewLink: publicUrl,
      reviewTokenId: token.id,
    });

    return res.status(200).json({
      ok: true,
      link: publicUrl,
      partial: Boolean(smsOk) !== Boolean(emailOk),
      channels: { sms: smsOk || undefined, email: emailOk || undefined },
      results,
      debug: debugInfo,
    });
  } catch (e: unknown) {
    return res.status(401).json({ ok: false, message: errMsg(e) });
  }
}
====[ END FILE: src/pages/api/orders/send-review.ts ]===============================================

====[ START FILE: src/pages/api/public/pixel.ts (1.1 KB) ]==========================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "GET") return res.status(405).end();

    const store = typeof req.query.store === "string" ? req.query.store : "";
    const p = typeof req.query.p === "string" ? req.query.p : "";
    const ua = req.headers["user-agent"] || "";
    const ip = (req.headers["x-forwarded-for"] as string)?.split(",")[0]?.trim() || req.socket.remoteAddress || "";

    if (store) {
      const db = dbAdmin();
      await db.collection("widget_impressions").add({
        storeUid: store,
        path: p || null,
        ua,
        ip,
        at: Date.now(),
      }).catch(() => {});
    }

    // 1x1 gif
    const buf = Buffer.from(
      "R0lGODlhAQABAIAAAAAAAP///ywAAAAAAQABAAACAUwAOw==",
      "base64"
    );
    res.setHeader("Content-Type", "image/gif");
    res.setHeader("Cache-Control", "no-store");
    return res.status(200).send(buf);
  } catch {
    return res.status(200).end(); // لا نفشل الواجهة
  }
}
====[ END FILE: src/pages/api/public/pixel.ts ]=====================================================

====[ START FILE: src/pages/api/public/reviews.ts (3.9 KB) ]========================================
// src/pages/api/public/reviews/index.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

// -------- helpers --------
type QueryLike = NextApiRequest["query"];
const getStr = (q: QueryLike, keys: string[], fallback = ""): string => {
  for (const k of keys) {
    const v = q[k];
    if (typeof v === "string") return v;
    if (Array.isArray(v) && typeof v[0] === "string") return v[0];
  }
  return fallback;
};

const parseQuery = (q: QueryLike) => {
  const storeUid = getStr(q, ["storeUid", "storeId", "store", "s"]);
  const productId = getStr(q, ["productId", "product", "p", "sku"], "");
  const limit = Math.min(100, Math.max(1, Number(getStr(q, ["limit"], "20")) || 20));
  const sort = (getStr(q, ["sort", "order"], "desc").toLowerCase() === "asc" ? "asc" : "desc") as "asc" | "desc";
  const sinceDays = Math.max(0, Number(getStr(q, ["sinceDays", "days", "since"], "")) || 0);
  return { storeUid, productId, limit, sort, sinceDays };
};

// -------- public shape --------
type PublicReview = {
  id: string;
  productId: string | null;
  stars: number;
  text: string;
  publishedAt: number;     // ms
  trustedBuyer: boolean;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // CORS / preflight
  if (req.method === "OPTIONS") {
    res.setHeader("Access-Control-Allow-Methods", "GET,OPTIONS");
    res.setHeader("Access-Control-Allow-Headers", "Content-Type, x-theqah-widget");
    res.setHeader("Access-Control-Allow-Origin", "*");
    return res.status(200).end();
  }

  if (req.method !== "GET") return res.status(405).json({ error: "method_not_allowed" });

  const { storeUid, productId, limit, sort, sinceDays } = parseQuery(req.query);
  if (!storeUid) {
    res.setHeader("Access-Control-Allow-Origin", "*");
    return res.status(400).json({ error: "MISSING_PARAMS", need: ["storeUid"] });
  }

  try {
    const db = dbAdmin();

    let q: FirebaseFirestore.Query = db
      .collection("reviews")
      .where("storeUid", "==", storeUid)
      .where("status", "==", "published");

    if (productId) q = q.where("productId", "==", productId);

    const now = Date.now();
    const cutoff = sinceDays > 0 ? now - sinceDays * 24 * 60 * 60 * 1000 : 0;
    if (cutoff > 0) q = q.where("publishedAt", ">=", cutoff);

    q = q.orderBy("publishedAt", sort as FirebaseFirestore.OrderByDirection).limit(limit);

    const snap = await q.get();

    const items: PublicReview[] = snap.docs.map((d) => {
      const data = d.data() as Record<string, unknown>;
      const stars = Math.max(0, Math.min(5, Number(data["stars"] ?? 0)));
      const text =
        (typeof data["text"] === "string" && data["text"]) ||
        (typeof data["comment"] === "string" && data["comment"]) ||
        "";
      const publishedAt =
        (typeof data["publishedAt"] === "number" && data["publishedAt"]) ||
        (typeof data["createdAt"] === "number" && data["createdAt"]) ||
        (data["createdAt"] ? Date.parse(String(data["createdAt"])) : 0);

      const trustedBuyer = Boolean(
        (typeof data["trustedBuyer"] === "boolean" && data["trustedBuyer"]) ||
        (typeof data["buyerVerified"] === "boolean" && data["buyerVerified"])
      );

      return {
        id: d.id,
        productId: typeof data["productId"] === "string" ? data["productId"] : null,
        stars,
        text,
        publishedAt,
        trustedBuyer,
      };
    });

    res.setHeader("Access-Control-Allow-Origin", "*");
    res.setHeader("Cache-Control", "public, max-age=60, s-maxage=300");
    return res.status(200).json({ items });
  } catch (e) {
    const message = e instanceof Error ? e.message : String(e);
    console.error("public/reviews error:", message);
    res.setHeader("Access-Control-Allow-Origin", "*");
    return res.status(500).json({ error: "PUBLIC_LIST_FAILED", message });
  }
}
====[ END FILE: src/pages/api/public/reviews.ts ]===================================================

====[ START FILE: src/pages/api/public/reviews/resolve.ts (5.0 KB) ]================================
// src/pages/api/public/reviews/resolve.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

type StoreDoc = {
  uid?: string;
  storeUid?: string;
  storeId?: number | string;
  salla?: {
    uid?: string;
    storeId?: number | string;
    domain?: string;        // مثال: https://demostore.salla.sa/dev-xxxxxx
    connected?: boolean;
    installed?: boolean;
  };
};

// كاش اختياري لتقليل قراءات Firestore
type CacheVal = { uid: string; t: number };
//eslint-disable-next-line @typescript-eslint/no-explicit-any
const g: any = global as any;
//eslint-disable-next-line @typescript-eslint/no-explicit-any
const MEM: Map<string, CacheVal> = g.__THEQAH_RESOLVE_MEM__ || new Map();
g.__THEQAH_RESOLVE_MEM__ = MEM;
const TTL = 10 * 60 * 1000; // 10 دقائق
function cacheGet(k: string) {
  const v = MEM.get(k);
  if (v && Date.now() - v.t < TTL) return v.uid;
  if (v) MEM.delete(k);
  return null;
}
function cacheSet(k: string, uid: string) {
  MEM.set(k, { uid, t: Date.now() });
}

// نطبع الدومين بإزالة الـ trailing slash فقط (ونمنع أي lowercase أو تعديل للمسار)
function normalizeDomainInput(raw: string) {
  let s = raw.trim();
  // لازم يكون شكل URL كامل ببروتوكول
  if (!/^https?:\/\//.test(s)) return null;
  // إزالة سلاش أخير فقط
  s = s.replace(/\/+$/, "");
  return s;
}

// نتأكد أن شكل الدومين فيه مسار dev-xxxxx (لأن بدايات الدومينات متشابهة)
function looksLikeDevDomain(url: string) {
  try {
    const u = new URL(url);
    const firstSeg = u.pathname.split("/").filter(Boolean)[0] || "";
    return firstSeg.startsWith("dev-");
  } catch {
    return false;
  }
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // CORS للودجت
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "GET,OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");
  res.setHeader("Access-Control-Max-Age", "86400");

  // كاش 5 دقائق (يناسب إن الـ mapping ثابت تقريبًا)
  res.setHeader("Cache-Control", "public, max-age=300, s-maxage=300");

  if (req.method === "OPTIONS") return res.status(200).end();
  if (req.method !== "GET") return res.status(405).json({ error: "method_not_allowed" });

  try {
    // مدخلين فقط:
    // 1) storeUid الكامل (مثال: salla:982747175)
    // 2) domain الكامل (مثال: https://demostore.salla.sa/dev-6pvf7vguhv84lfoi)
    const storeUidRaw = typeof req.query.storeUid === "string" ? req.query.storeUid.trim() : "";
    const domainRaw   = typeof req.query.domain   === "string" ? req.query.domain.trim()   : "";

    // 1) لو storeUid موجود → رجّعه مباشرة
    if (storeUidRaw) {
      cacheSet(`uid:${storeUidRaw}`, storeUidRaw);
      return res.status(200).json({ storeUid: storeUidRaw });
    }

    // 2) لازم domain كامل
    if (!domainRaw) {
      return res.status(400).json({ error: "MISSING_DOMAIN_OR_UID" });
    }

    const domain = normalizeDomainInput(domainRaw);
    if (!domain) {
      return res.status(400).json({ error: "INVALID_DOMAIN_FORMAT", hint: "must start with http(s):// and be a full URL" });
    }

    // لو البدايات متشابهة، نلزم وجود مسار dev-xxxxx لتجنّب التضارب
    if (!looksLikeDevDomain(domain)) {
      return res.status(400).json({
        error: "DOMAIN_TOO_GENERIC",
        hint: "send the full domain including /dev-xxxxx to avoid collisions",
      });
    }

    const hit = cacheGet(`dom:${domain}`);
    if (hit) return res.status(200).json({ storeUid: hit });

    const db = dbAdmin();

    // مطابقة صارمة على salla.domain + يكون المتجر متصل ومثبت
    const snap = await db.collection("stores")
      .where("salla.connected", "==", true)
      .where("salla.installed", "==", true)
      .where("salla.domain", "==", domain) // مساواة حرفيًا
      .limit(1)
      .get();

    if (snap.empty) {
      return res.status(404).json({ error: "STORE_NOT_FOUND", domain });
    }

    const data = snap.docs[0].data() as StoreDoc;
    const uid =
      data.uid ||
      data.storeUid ||
      data.salla?.uid ||
      (data.salla?.storeId ? `salla:${data.salla.storeId}` : undefined) ||
      (data.storeId != null ? `salla:${String(data.storeId)}` : undefined);

    if (!uid) {
      return res.status(404).json({ error: "UID_NOT_FOUND_FOR_STORE", domain });
    }

    cacheSet(`dom:${domain}`, uid);
    return res.status(200).json({ storeUid: uid });
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    console.error("resolve_error", e?.message || e);
    return res.status(500).json({ error: "RESOLVE_FAILED" });
  }
}
====[ END FILE: src/pages/api/public/reviews/resolve.ts ]===========================================

====[ START FILE: src/pages/api/public/widget.ts (6.3 KB) ]=========================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

function allowCors(res: NextApiResponse) {
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "GET, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");
}

function jsEscape(s: string) {
  return (s || "").replace(/\\/g,"\\\\").replace(/`/g,"\\`");
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method === "OPTIONS") {
    allowCors(res);
    return res.status(204).end();
  }
  if (req.method !== "GET") return res.status(405).send("Method Not Allowed");

  allowCors(res);
  res.setHeader("Content-Type", "application/javascript; charset=utf-8");
  res.setHeader("Cache-Control", "public, max-age=300"); // 5m

  const storeParam = typeof req.query.store === "string" ? req.query.store.trim() : "";
  const color = typeof req.query.color === "string" ? `#${req.query.color.replace(/[^0-9a-fA-F]/g,"")}` : "#10b981"; // Emerald
  const pos   = typeof req.query.pos === "string" ? req.query.pos : "br"; // br | bl

  const db = dbAdmin();

  // 1) نحاول إيجاد المتجر
  let storeUid = "";
  let storeName = "متجرك";
  let publicReviewUrl = ""; // رابط صفحة تقييم/ملف عام – غيّره حسب مسارك

  if (storeParam) {
    // الشكل المتوقّع: salla:9827...
    storeUid = storeParam;
    try {
      const sDoc = await db.collection("stores").doc(storeUid).get();
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      const s = sDoc.data() as any;
      storeName = s?.salla?.storeName || s?.storeName || storeName;

      // لو عندك صفحة عامة للمتجر عندك (مثلاً /s/{id} أو /store/{id})
      publicReviewUrl = `${(process.env.NEXT_PUBLIC_APP_URL || process.env.APP_BASE_URL || "").replace(/\/+$/,"")}/s/${encodeURIComponent(storeUid)}`;
    } catch {}
  }

  // 2) ودجت بسيط: زر دائري ثابت + نافذة منبثقة تعرض CTA
  const js = `
(function(){
  try {
    if (window.__theqah_widget_loaded__) return;
    window.__theqah_widget_loaded__ = true;

    var color = "${jsEscape(color)}";
    var corner = "${jsEscape(pos)}"; // "br" or "bl"
    var storeUid = "${jsEscape(storeUid)}";
    var storeName = "${jsEscape(storeName)}";
    var reviewUrl = "${jsEscape(publicReviewUrl)}" || window.location.origin;

    // Styles
    var css = \`
#theqah-badge{position:fixed;z-index:2147483000;bottom:18px;\${corner==="bl" ? "left:18px" : "right:18px"};width:56px;height:56px;border-radius:9999px;background:\${color};box-shadow:0 10px 25px rgba(0,0,0,.15);display:flex;align-items:center;justify-content:center;cursor:pointer;transition:transform .2s ease,box-shadow .2s ease;}
#theqah-badge:hover{transform:translateY(-2px);box-shadow:0 14px 30px rgba(0,0,0,.2);}
#theqah-badge svg{width:28px;height:28px;color:#fff}
#theqah-modal-mask{position:fixed;inset:0;background:rgba(0,0,0,.35);backdrop-filter:saturate(120%) blur(2px);z-index:2147483000;display:none;align-items:center;justify-content:center;padding:16px}
#theqah-card{max-width:420px;width:100%;background:#fff;border-radius:16px;box-shadow:0 20px 50px rgba(0,0,0,.25);overflow:hidden;transform:translateY(10px);opacity:.98}
#theqah-hdr{background:linear-gradient(135deg,\${color},#059669);padding:18px 20px;color:#fff}
#theqah-hdr h3{margin:0;font-size:18px}
#theqah-body{padding:18px 20px;color:#111827;line-height:1.7}
#theqah-cta{display:inline-flex;align-items:center;gap:8px;background:\${color};color:#fff;padding:10px 14px;border-radius:12px;text-decoration:none;font-weight:600}
#theqah-foot{padding:14px 20px;background:#fafafa;color:#6b7280;font-size:12px;display:flex;justify-content:space-between;align-items:center}
#theqah-close{background:transparent;border:none;color:#fff;cursor:pointer;font-size:16px;opacity:.9}
\`;

    var style = document.createElement('style');
    style.setAttribute('data-theqah','widget');
    style.appendChild(document.createTextNode(css));
    document.head.appendChild(style);

    // Badge
    var badge = document.createElement('button');
    badge.id = 'theqah-badge';
    badge.setAttribute('aria-label','تقييمات وثقة');
    badge.innerHTML = '<svg viewBox="0 0 24 24" fill="none"><path d="M12 2l3.09 6.26L22 9.27l-5 4.9L18.18 22 12 18.77 5.82 22 7 14.17l-5-4.9 6.91-1.01L12 2z" fill="currentColor"/></svg>';
    document.body.appendChild(badge);

    // Modal
    var mask = document.createElement('div');
    mask.id = 'theqah-modal-mask';
    mask.innerHTML = \`
      <div id="theqah-card" role="dialog" aria-modal="true" aria-label="مراجعات ${jsEscape(storeName)}">
        <div id="theqah-hdr">
          <button id="theqah-close" title="إغلاق">✕</button>
          <h3>قيّم تجربتك مع \${storeName}</h3>
        </div>
        <div id="theqah-body">
          <p>سيسعدنا رأيك! اضغط الزر بالأسفل لفتح صفحة التقييم.</p>
          <p><a id="theqah-cta" href="\${reviewUrl}" target="_blank" rel="noopener">التقييم الآن</a></p>
        </div>
        <div id="theqah-foot">
          <span>مدعوم بواسطة ثقة</span>
          <a href="\${reviewUrl}" target="_blank" rel="noopener" style="text-decoration:underline">عرض التقييمات</a>
        </div>
      </div>
    \`;
    document.body.appendChild(mask);

    function openModal(){ mask.style.display='flex'; }
    function closeModal(){ mask.style.display='none'; }

    badge.addEventListener('click', openModal);
    mask.addEventListener('click', function(e){ if(e.target === mask) closeModal(); });
    var btnClose = mask.querySelector('#theqah-close');
    if (btnClose) btnClose.addEventListener('click', closeModal);

    // Pixel (اختياري)
    try {
      var u = new URL((document.currentScript && document.currentScript.src) || location.href);
      var api = u.origin || location.origin;
      var px = api + '/api/public/pixel?store=' + encodeURIComponent(storeUid) + '&p=' + encodeURIComponent(location.pathname);
      var i = new Image(); i.src = px;
    } catch(e){}
  } catch(e) { /* no-op */ }
})();
`;

  res.send(js);
}
====[ END FILE: src/pages/api/public/widget.ts ]====================================================

====[ START FILE: src/pages/api/report-review.ts (1.1 KB) ]=========================================
// src/pages/api/report-review.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import withCors from "@/server/withCors";

type Body = {
  reviewId?: string;
  reason?: string;
  name?: string;
  email?: string;
};

async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).json({ message: "Method Not Allowed" });

  const { reviewId, reason, name, email } = (req.body || {}) as Body;
  if (!reviewId || !reason) return res.status(400).json({ message: "reviewId and reason are required" });

  const db = dbAdmin();
  await db.collection("review_reports").add({
    reviewId: String(reviewId),
    reason: String(reason).slice(0, 2000),
    name: name ? String(name).slice(0, 200) : undefined,
    email: email ? String(email).slice(0, 200) : undefined,
    createdAt: Date.now(),
    resolved: false,
  });

  res.setHeader("Cache-Control", "no-store");
  return res.status(200).json({ ok: true });
}

export default withCors(handler);
====[ END FILE: src/pages/api/report-review.ts ]====================================================

====[ START FILE: src/pages/api/review-token.ts (1.4 KB) ]==========================================
// src/pages/api/review-token.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const token = String(req.query.token || "").trim();
    if (!token) return res.status(400).json({ error: "missing_token" });

    const db = dbAdmin();
    const snap = await db.collection("review_tokens").doc(token).get();
    if (!snap.exists) return res.status(404).json({ error: "not_found" });
//eslint-disable-next-line @typescript-eslint/no-explicit-any
    const t = snap.data() as any;
    // (اختياري) حاول تجيب اسم المتجر
    let storeName: string | undefined;
    if (t?.storeUid) {
      try {
        const s = await db.collection("stores").doc(String(t.storeUid)).get();
        storeName = (s.data()?.name as string) || undefined;
      } catch {}
    }

    return res.status(200).json({
      tokenId: token,
      orderId: t?.orderId ?? null,
      storeName: storeName ?? t?.storeName ?? null,
      customer: t?.customer ?? null,
      expired: t?.expiresAt ? Date.now() > Number(t.expiresAt) : false,
      voided: Boolean(t?.voidedAt),
    });
  }
  //eslint-disable-next-line @typescript-eslint/no-unused-vars 
  catch (e) {
    return res.status(500).json({ error: "server_error" });
  }
}
====[ END FILE: src/pages/api/review-token.ts ]=====================================================

====[ START FILE: src/pages/api/reviews/[id]/reply.ts (2.4 KB) ]====================================
// src/pages/api/reviews/[id]/reply.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

// TODO: استبدلها بتحقق صلاحيات فعلي (مالك المتجر/طاقمه)
async function requireStoreOwner(req: NextApiRequest): Promise<{ storeId: string; userId: string; }> {
  const storeId = (req.headers["x-store-id"] as string) || "";
  const userId = (req.headers["x-user-id"] as string) || "";
  if (!storeId || !userId) throw new Error("unauthorized");
  return { storeId, userId };
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const db = dbAdmin();
  const { id } = req.query as { id: string };

  if (req.method === "POST") {
    try {
      const { storeId, userId } = await requireStoreOwner(req);
      const { text } = (req.body || {}) as { text?: string };
      const t = String(text || "").trim();
      if (!t) return res.status(400).json({ ok:false, error:"text_required" });

      // تأكد المراجعة موجودة ومن نفس المتجر (يمكن إضافة check storeId على وثيقة review)
      const reviewRef = db.collection("reviews").doc(id);
      const reviewSnap = await reviewRef.get();
      if (!reviewSnap.exists) return res.status(404).json({ ok:false, error:"review_not_found" });

      const replyRef = reviewRef.collection("replies").doc();
      await replyRef.set({
        id: replyRef.id,
        reviewId: id,
        storeId,
        userId,
        text: t.slice(0, 2000),
        createdAt: Date.now(),
      });

      // last_replied_at للمراجعة
      await reviewRef.set({ lastRepliedAt: Date.now() }, { merge: true });

      return res.json({ ok:true, id: replyRef.id });
    } catch (e) {
      const msg = String(e || "");
      const code = msg.includes("unauthorized") ? 401 : 500;
      return res.status(code).json({ ok:false, error: msg.includes("unauthorized") ? "unauthorized":"server_error" });
    }
  }

  if (req.method === "GET") {
    // ترجع سلسلة الردود
    const replies = await db.collection("reviews").doc(id).collection("replies")
      .orderBy("createdAt","asc").get();
    return res.json({
      ok:true,
      items: replies.docs.map(d => d.data()),
    });
  }

  return res.status(405).json({ ok:false, error:"method_not_allowed" });
}
====[ END FILE: src/pages/api/reviews/[id]/reply.ts ]===============================================

====[ START FILE: src/pages/api/reviews/export-csv.ts (5.2 KB) ]====================================
// src/pages/api/reviews/export-csv.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyUser } from "@/utils/verifyUser";

type Row = {
  id: string;
  storeUid: string | null;
  productId: string | null;
  orderId: string | null;
  buyerVerified: boolean;
  stars: number;
  text: string;
  images: string[];
  createdAt: number | string;
  published: boolean;
  status: string;
};

function escapeCsv(v: unknown): string {
  if (v == null) return "";
  const s = String(v).replace(/"/g, '""');
  return `"${s}"`;
}

function toTimestamp(v: number | string | undefined): number {
  if (v == null) return 0;
  return typeof v === "number" ? v : Date.parse(v);
}

// ---- Safe coercion helpers (no any) ----
const asString = (v: unknown): string | null => (typeof v === "string" ? v : null);
const asNumber = (v: unknown): number =>
  typeof v === "number" ? v : Number(v ?? 0) || 0;
const asBoolean = (v: unknown): boolean => (typeof v === "boolean" ? v : false);
const asStringArray = (v: unknown): string[] =>
  Array.isArray(v) ? v.filter((x): x is string => typeof x === "string") : [];

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "GET") return res.status(405).end();

    const { uid } = await verifyUser(req);

    // optional filters
    const { productId, minStars, maxStars, from, to } = req.query as {
      productId?: string;
      minStars?: string;
      maxStars?: string;
      from?: string;
      to?: string;
    };

    // stars bounds
    const lo = Math.max(1, Math.min(5, Number(minStars || 1)));
    const hi = Math.max(lo, Math.min(5, Number(maxStars || 5)));

    const fromTs = from ? Date.parse(from) : 0;
    const toTs = to ? Date.parse(to) : Number.MAX_SAFE_INTEGER;

    const db = dbAdmin();
    let q = db.collection("reviews").where("storeUid", "==", uid);
    if (productId) q = q.where("productId", "==", productId);

    const snap = await q.get();

    const rows: Row[] = snap.docs
      .map((d) => {
        const data = d.data() as Record<string, unknown>;

        const storeUid = asString(data["storeUid"]);
        const productIdVal = asString(data["productId"]);
        const orderId = asString(data["orderId"]);

        const buyerVerified =
          asBoolean(data["buyerVerified"]) ||
          asBoolean(data["trustedBuyer"]); // alias support

        const stars = asNumber(data["stars"]);

        const text =
          asString(data["text"]) ??
          (asString(data["comment"]) ?? ""); // alias support

        const images = asStringArray(data["images"]);

        const createdAtRaw =
          (data["createdAt"] as number | string | undefined) ??
          (data["created"] as number | string | undefined) ??
          "";

        const status = asString(data["status"]) ?? "";

        const published =
          asBoolean(data["published"]) || status === "published";

        return {
          id: d.id,
          storeUid,
          productId: productIdVal,
          orderId,
          buyerVerified,
          stars,
          text,
          images,
          createdAt: createdAtRaw,
          published,
          status,
        };
      })
      .filter((r) => {
        const okStars = r.stars >= lo && r.stars <= hi;
        const t = toTimestamp(
          typeof r.createdAt === "number" ? r.createdAt : String(r.createdAt || "")
        );
        const okRange = t >= fromTs && t <= toTs;
        return okStars && okRange;
      })
      .sort(
        (a, b) =>
          toTimestamp(
            typeof b.createdAt === "number" ? b.createdAt : String(b.createdAt || "")
          ) -
          toTimestamp(
            typeof a.createdAt === "number" ? a.createdAt : String(a.createdAt || "")
          )
      );

    // CSV (+ Arabic-friendly BOM for Excel)
    const header = [
      "id",
      "storeUid",
      "productId",
      "orderId",
      "buyerVerified",
      "stars",
      "text",
      "images",
      "createdAt",
      "published",
      "status",
    ];

    const csv = [
      header.join(","),
      ...rows.map((r) =>
        [
          escapeCsv(r.id),
          escapeCsv(r.storeUid ?? ""),
          escapeCsv(r.productId ?? ""),
          escapeCsv(r.orderId ?? ""),
          escapeCsv(r.buyerVerified ? "true" : "false"),
          escapeCsv(r.stars),
          escapeCsv(r.text),
          escapeCsv(r.images.join(" | ")),
          escapeCsv(r.createdAt),
          escapeCsv(r.published ? "true" : "false"),
          escapeCsv(r.status || (r.published ? "published" : "")),
        ].join(",")
      ),
    ].join("\n");

    res.setHeader("Content-Type", "text/csv; charset=utf-8");
    res.setHeader(
      "Content-Disposition",
      `attachment; filename="reviews-${uid}.csv"`
    );
    return res.status(200).send("\ufeff" + csv); // BOM
  } catch (err) {
    const message = err instanceof Error ? err.message : String(err);
    console.error(err);
    return res.status(500).json({ error: "EXPORT_CSV_FAILED", message });
  }
}
====[ END FILE: src/pages/api/reviews/export-csv.ts ]===============================================

====[ START FILE: src/pages/api/reviews/export-pdf.ts (5.5 KB) ]====================================
// src/pages/api/reviews/export-pdf.ts
import type { NextApiRequest, NextApiResponse } from "next";
import PDFDocument from "pdfkit";
import path from "path";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyUser } from "@/utils/verifyUser";

export const config = { api: { responseLimit: "12mb" } };

type PdfRow = {
  id: string;
  productId: string | null;
  stars: number;
  orderId: string | null;
  buyerVerified: boolean;
  published: boolean;
  status: string;
  text: string;
  createdAt: number | string;
};

function toTimestamp(v: number | string | undefined): number {
  if (v == null) return 0;
  return typeof v === "number" ? v : Date.parse(v);
}

// Helpers to safely coerce unknown values
const asStringOrNull = (v: unknown): string | null =>
  typeof v === "string" ? v : null;

const asNumber = (v: unknown): number =>
  typeof v === "number" ? v : Number(v ?? 0) || 0;

const asBoolean = (v: unknown): boolean =>
  typeof v === "boolean" ? v : false;

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "GET") return res.status(405).end();

    const { uid } = await verifyUser(req);

    const { productId, from, to } = req.query as {
      productId?: string;
      from?: string;
      to?: string;
    };

    const fromTs = from ? Date.parse(from) : 0;
    const toTs = to ? Date.parse(to) : Number.MAX_SAFE_INTEGER;

    const db = dbAdmin();
    let q = db.collection("reviews").where("storeUid", "==", uid);
    if (productId) q = q.where("productId", "==", productId);

    const snap = await q.get();

    const rows: PdfRow[] = snap.docs
      .map((d) => {
        const data = d.data() as Record<string, unknown>;

        const productIdVal = asStringOrNull(data.productId);
        const stars = asNumber(data.stars);
        const orderIdVal = asStringOrNull(data.orderId);

        const statusVal = typeof data.status === "string" ? data.status : "";

        const publishedVal =
          typeof data.published === "boolean"
            ? data.published
            : statusVal === "published";

        const buyerVerifiedVal =
          typeof data.buyerVerified === "boolean"
            ? data.buyerVerified
            : asBoolean((data as Record<string, unknown>).trustedBuyer);

        const textVal =
          typeof data.text === "string"
            ? data.text
            : typeof (data as Record<string, unknown>).comment === "string"
            ? String((data as Record<string, unknown>).comment)
            : "";

        const createdAtRaw =
          (data.createdAt as number | string | undefined) ??
          (data.created as number | string | undefined) ??
          0;

        return {
          id: d.id,
          productId: productIdVal,
          stars,
          orderId: orderIdVal,
          buyerVerified: buyerVerifiedVal,
          published: publishedVal,
          status: statusVal,
          text: textVal,
          createdAt: createdAtRaw,
        };
      })
      .filter((r) => {
        const t = toTimestamp(r.createdAt);
        return t >= fromTs && t <= toTs;
      })
      .sort((a, b) => toTimestamp(b.createdAt) - toTimestamp(a.createdAt));

    res.setHeader("Content-Type", "application/pdf");
    res.setHeader("Content-Disposition", `attachment; filename="reviews-${uid}.pdf"`);

    const doc = new PDFDocument({ size: "A4", margin: 36 });
    doc.pipe(res);

    // محاولة تسجيل خط عربي (اختياري) لو الملف موجود في public/fonts
    try {
      const fontPath = path.join(process.cwd(), "public", "fonts", "Tajawal-Regular.ttf");
      // registerFont متاحة في أنواع pdfkit الحديثة
      doc.registerFont("arabic", fontPath);
      doc.font("arabic");
    } catch {
      // fallback لخط النظام إذا لم يتوفر الخط
    }

    doc.fontSize(18).text("تقارير التقييمات (ثقة)", { align: "center" });
    doc.moveDown(0.5);
    doc.fontSize(10).text(`Store UID: ${uid}`, { align: "center" });
    doc.moveDown();

    const pageBottom = () => doc.page.height - doc.page.margins.bottom;

    rows.forEach((r, i) => {
      // فاصل صفحات بسيط
      if (doc.y > pageBottom() - 120) doc.addPage();

      doc.moveDown(0.5);
      doc
        .fontSize(12)
        .text(`#${i + 1} — ${r.productId ?? "—"} — ${r.stars}★`, { align: "right" });

      doc
        .fontSize(10)
        .text(
          `Order: ${r.orderId ?? "—"} | Verified: ${r.buyerVerified ? "Yes" : "No"} | ` +
            `Status: ${r.status || (r.published ? "published" : "—")}`,
          { align: "right" }
        );

      if (r.text) {
        doc.moveDown(0.2).fontSize(11).text(r.text, { align: "right" });
      }

      const when = toTimestamp(r.createdAt);
      if (when) {
        doc
          .moveDown(0.2)
          .fontSize(9)
          .fillColor("#555")
          .text(`Created: ${new Date(when).toLocaleString()}`, { align: "right" })
          .fillColor("#000");
      }

      doc.moveDown(0.3);
      doc
        .strokeColor("#ddd")
        .lineWidth(1)
        .moveTo(36, doc.y)
        .lineTo(doc.page.width - 36, doc.y)
        .stroke();
    });

    doc.end();
  } catch (err) {
    const message = err instanceof Error ? err.message : String(err);
    console.error(err);
    return res.status(500).json({ error: "EXPORT_PDF_FAILED", message });
  }
}
====[ END FILE: src/pages/api/reviews/export-pdf.ts ]===============================================

====[ START FILE: src/pages/api/reviews/list.ts (1.4 KB) ]==========================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { requireUser } from '@/server/auth/requireUser';

type Review = {
  stars: number;
  comment: string;
  lang: string;
  createdAt: string;
  trustedBuyer: boolean;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'GET') return res.status(405).json({ message: 'Method not allowed' });

  try {
    const { uid } = await requireUser(req);
    const db = dbAdmin();

    const snap = await db
      .collection('reviews')
      .where('storeUid', '==', uid)
      .orderBy('createdAt', 'desc')
      .limit(200)
      .get();

    const reviews: Review[] = snap.docs.map((d) => {
      const r = d.data() as Record<string, unknown>;
      const createdAtRaw = r.createdAt;
      const createdAt =
        typeof createdAtRaw === 'number'
          ? new Date(createdAtRaw).toISOString()
          : (createdAtRaw as string) || new Date().toISOString();

      return {
        stars: Number(r.stars) || 0,
        comment: (r.comment as string) || '',
        lang: (r.lang as string) || 'ar',
        createdAt,
        trustedBuyer: r.trustedBuyer === true,
      };
    });

    return res.status(200).json({ reviews });
  } catch (e) {
    console.error('reviews/list error', e);
    return res.status(401).json({ message: 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/reviews/list.ts ]=====================================================

====[ START FILE: src/pages/api/reviews/moderate.ts (6.2 KB) ]======================================
// src/pages/api/reviews/moderate.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { checkReviewModeration } from "@/server/moderation/checkReview";
import { sendEmailDmail as sendEmail } from "@/server/messaging/email-dmail";
import { sendSms } from "@/server/messaging/send-sms";


type ReviewDoc = {
  id?: string; // قد لا يكون محفوظ داخل المستند
  orderId: string;
  text: string;
  stars: number;
  tokenId?: string | null;
  platform?: "salla" | "zid" | "manual";
  status: "pending" | "published" | "rejected";
  images?: string[];
  createdAt: number;
  moderatedAt?: number;
  moderationReasons?: string[];
  moderationCategory?: string;
  trustedBuyer?: boolean;
};

type InviteDoc = {
  tokenId?: string | null;
  customer?: {
    name?: string | null;
    mobile?: string | number | null;
    email?: string | null;
  };
};

type ModerationVerdict = {
  allowed: boolean;
  reasons?: string[];
  category?: string;
};

type PostSuccess =
  | { ok: true; published: true; trustedBuyer: boolean }
  | { ok: true; rejected: true; reasons?: string[]; category?: string }
  | { ok: true; skipped: true; status: ReviewDoc["status"] };

type GetItemResult =
  | { id: string; published: true; trustedBuyer: boolean }
  | { id: string; rejected: true; reasons?: string[]; category?: string };

type GetSuccess = { ok: true; processed: number; results: GetItemResult[] };

type ErrorResponse = { ok: false; error: string };

async function notifyRejectionViaToken(
  db: FirebaseFirestore.Firestore,
  tokenId?: string | null,
  reason?: string
): Promise<void> {
  if (!tokenId) return;

  // نجيب بيانات العميل من دعوة المراجعة
  const inviteSnap = await db
    .collection("review_invites")
    .where("tokenId", "==", tokenId)
    .limit(1)
    .get();
  if (inviteSnap.empty) return;

  const inv = inviteSnap.docs[0].data() as InviteDoc;

  const name = inv?.customer?.name || "عميلنا العزيز";
  const msg = `عذراً ${name}، تمت مراجعة تقييمك ولم يتم قبوله بسبب: ${
    reason || "مخالفة سياسة المحتوى"
  }. يمكنك إرسال تقييم جديد بصياغة مناسبة.`;
  const mobile = inv?.customer?.mobile
    ? String(inv.customer.mobile).replace(/\s+/g, "")
    : null;
  const email = inv?.customer?.email || null;

  const tasks: Array<Promise<unknown>> = [];
  if (mobile) {
    tasks.push(sendSms(mobile, msg));
  }
  if (email) {
    const html = `<div dir="rtl" style="font-family:Tahoma,Arial"><p>${msg}</p></div>`;
    tasks.push(sendEmail(email, "مراجعتك لم تُقبل", html));
  }
  await Promise.allSettled(tasks);
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<PostSuccess | GetSuccess | ErrorResponse>
) {
  // استخدام بسيط:
  // - POST {reviewId} لمراجعة عنصر واحد
  // - أو GET لمعالجة أول 20 مراجعة معلّقة (للاستخدام من كرون أو زر في الداشبورد)
  const db = dbAdmin();

  if (req.method === "POST") {
    const { reviewId } = (req.body || {}) as { reviewId?: string };
    if (!reviewId) return res.status(400).json({ ok: false, error: "reviewId_required" });

    const ref = db.collection("reviews").doc(String(reviewId));
    const snap = await ref.get();
    if (!snap.exists) return res.status(404).json({ ok: false, error: "not_found" });

    const review = snap.data() as ReviewDoc;
    if (review.status !== "pending") {
      return res.json({ ok: true, skipped: true, status: review.status });
    }

    const verdict: ModerationVerdict = await checkReviewModeration(review.text || "");
    if (verdict.allowed) {
      // لو فيه token صالح → اعتبره "مشتري موثّق"
      const trustedBuyer = Boolean(review.tokenId);
      await ref.set(
        {
          status: "published",
          trustedBuyer,
          moderatedAt: Date.now(),
          moderationReasons: verdict.reasons || [],
        },
        { merge: true }
      );
      return res.json({ ok: true, published: true, trustedBuyer });
    } else {
      await ref.set(
        {
          status: "rejected",
          moderatedAt: Date.now(),
          moderationReasons: verdict.reasons,
          moderationCategory: verdict.category,
        },
        { merge: true }
      );
      await notifyRejectionViaToken(db, review.tokenId, verdict.reasons?.[0]);
      return res.json({
        ok: true,
        rejected: true,
        reasons: verdict.reasons,
        category: verdict.category,
      });
    }
  }

  if (req.method === "GET") {
    const q = await db
      .collection("reviews")
      .where("status", "==", "pending")
      .orderBy("createdAt", "asc")
      .limit(20)
      .get();

    const results: GetItemResult[] = [];
    for (const doc of q.docs) {
      const r = doc.data() as ReviewDoc;
      const verdict: ModerationVerdict = await checkReviewModeration(r.text || "");
      if (verdict.allowed) {
        const trustedBuyer = Boolean(r.tokenId);
        await doc.ref.set(
          {
            status: "published",
            trustedBuyer,
            moderatedAt: Date.now(),
            moderationReasons: verdict.reasons || [],
          },
          { merge: true }
        );
        results.push({ id: doc.id, published: true, trustedBuyer });
      } else {
        await doc.ref.set(
          {
            status: "rejected",
            moderatedAt: Date.now(),
            moderationReasons: verdict.reasons,
            moderationCategory: verdict.category,
          },
          { merge: true }
        );
        await notifyRejectionViaToken(db, r.tokenId, verdict.reasons?.[0]);
        results.push({
          id: doc.id,
          rejected: true,
          reasons: verdict.reasons,
          category: verdict.category,
        });
      }
    }
    return res.json({ ok: true, processed: results.length, results });
  }

  return res.status(405).json({ ok: false, error: "method_not_allowed" });
}
====[ END FILE: src/pages/api/reviews/moderate.ts ]=================================================

====[ START FILE: src/pages/api/reviews/submit.ts (6.1 KB) ]========================================
// src/pages/api/reviews/submit.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin"; // استخدم نفس util المؤكد عندك
// لو عندك getDb ويشتغل تمام استخدمه بدل dbAdmin().firestore()
import { moderateReview } from "@/server/moderation"; // هنخليها اختيارية

type ReviewBody = {
  orderId?: string;
  stars?: number;
  text?: string;
  images?: string[];
  tokenId?: string;
  platform?: "salla" | "zid" | "manual" | "web";
};

const isNonEmptyString = (v: unknown): v is string =>
  typeof v === "string" && v.trim().length > 0;

const isImagesArray = (v: unknown): v is string[] =>
  Array.isArray(v) && v.every((u) => typeof u === "string" && u.length > 0);

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).json({ error: "method_not_allowed" });

  try {
    const body: ReviewBody = typeof req.body === "string" ? JSON.parse(req.body) : (req.body || {});
    const { orderId, stars, text, images, tokenId, platform } = body;

    if (!isNonEmptyString(orderId)) return res.status(400).json({ error: "missing_orderId" });
    const s = Number(stars);
    if (!Number.isFinite(s) || s < 1 || s > 5) return res.status(400).json({ error: "invalid_stars" });
    if (images !== undefined && !isImagesArray(images)) return res.status(400).json({ error: "images_must_be_array" });

    const imgs = isImagesArray(images) ? images : [];
    const safeImages = imgs.filter((u) => /^https:\/\/ucarecdn\.com\//.test(u)).slice(0, 10);
    const now = Date.now();

    const db = dbAdmin(); // Firestore Admin instance

    const result = await db.runTransaction(async (tx) => {
      // لو مفيش tokenId: نسجّل تقييم غير موثّق (trustedBuyer=false)
      if (!isNonEmptyString(tokenId)) {
        const reviewRef = db.collection("reviews").doc();
        tx.set(reviewRef, {
          id: reviewRef.id,
          orderId,
          stars: s,
          text: isNonEmptyString(text) ? text : "",
          images: safeImages,
          tokenId: null,
          storeUid: null,
          productId: null,
          platform: platform || "web",
          trustedBuyer: false,
          status: "published",
          published: true,
          publishedAt: now,
          createdAt: now,
          moderation: null,
        });
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        return { reviewId: reviewRef.id, tok: null as any };
      }

      // مع وجود tokenId: تحقق صارم
      const tokRef = db.collection("review_tokens").doc(String(tokenId));
      const tokSnap = await tx.get(tokRef);
      if (!tokSnap.exists) throw new Error("token_not_found");
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      const tok = tokSnap.data() as any;

      if (tok.usedAt) throw new Error("token_already_used");
      if (tok.voidedAt || tok.voided) throw new Error("token_voided");
      if (tok.expiresAt && now > Number(tok.expiresAt)) throw new Error("token_expired");

      if (tok.orderId && String(tok.orderId) !== String(orderId)) {
        throw new Error("token_order_mismatch");
      }

      // منع تكرار تقييم لنفس orderId (اختياري لكن مفيد)
      const dup = await db.collection("reviews").where("orderId", "==", String(orderId)).limit(1).get();
      if (!dup.empty) throw new Error("duplicate_review");

      const reviewRef = db.collection("reviews").doc();
      tx.set(reviewRef, {
        id: reviewRef.id,
        orderId,
        stars: s,
        text: isNonEmptyString(text) ? text : "",
        images: safeImages,
        tokenId: String(tokenId),
        storeUid: tok.storeUid ?? null,
        productId: tok.productId ?? null,
        productIds: tok.productIds ?? [],
        platform: platform || tok.platform || "web",
        trustedBuyer: true,
        status: "published",
        published: true,
        publishedAt: now,
        createdAt: now,
        moderation: null,
      });
      tx.update(tokRef, { usedAt: now });

      return { reviewId: reviewRef.id, tok };
    });

    // الموديريشن — خليها “لا تمنع” لو وقعت
    try {
      const mod = await moderateReview({
        text: isNonEmptyString(body.text) ? body.text : "",
        images: safeImages,
        stars: s,
      });
      await db.collection("reviews").doc(result.reviewId).set(
        mod?.ok
          ? { moderation: { model: mod.model, score: mod.score, flags: mod.flags } }
          : { moderation: { model: mod?.model || "none", score: mod?.score ?? 0, flags: mod?.flags ?? ["failed"], reason: mod?.reason || "moderation_failed" } },
        { merge: true }
      );
      // لو عايز تمنع بدل ما تسجل، رجّع 400 هنا بدل set فقط.
    } catch {
      await db.collection("reviews").doc(result.reviewId).set(
        { moderation: { model: "none", score: 0, flags: ["moderation_error"] } },
        { merge: true }
      );
    }

    return res.status(201).json({ ok: true, id: result.reviewId, published: true });
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    const msg = String(e?.message || e || "error");

    // خريطة أخطاء واضحة للفورنت
    if (msg === "token_not_found")       return res.status(400).json({ error: "token_not_found" });
    if (msg === "token_already_used")    return res.status(409).json({ error: "token_already_used" });
    if (msg === "token_expired")         return res.status(410).json({ error: "token_expired" });
    if (msg === "token_voided")          return res.status(410).json({ error: "token_voided" });
    if (msg === "token_order_mismatch")  return res.status(400).json({ error: "token_order_mismatch" });
    if (msg === "duplicate_review")      return res.status(409).json({ error: "duplicate_review" });

    console.error("reviews/submit error:", e);
    return res.status(500).json({ error: "internal_error" });
  }
}
====[ END FILE: src/pages/api/reviews/submit.ts ]===================================================

====[ START FILE: src/pages/api/salla/callback.ts (10.2 KB) ]=======================================
// src/pages/api/salla/callback.ts
import type { NextApiRequest, NextApiResponse } from "next";
import crypto from "crypto";
import { dbAdmin } from "@/lib/firebaseAdmin";

const SALLA_TOKEN_URL = process.env.SALLA_TOKEN_URL || "https://accounts.salla.sa/oauth2/token";
const DEFAULT_API_BASE = (process.env.SALLA_API_BASE || "https://api.salla.sa").replace(/\/+$/, "");
const CLIENT_ID = process.env.SALLA_CLIENT_ID!;
const CLIENT_SECRET = process.env.SALLA_CLIENT_SECRET!;
const REDIRECT_URI = process.env.SALLA_REDIRECT_URI!;

const APP_BASE = (
  process.env.APP_BASE_URL ||
  process.env.NEXT_PUBLIC_APP_URL ||
  process.env.NEXT_PUBLIC_BASE_URL ||
  ""
).replace(/\/+$/, "");

const AFTER_PATH = process.env.SALLA_AFTER_CONNECT_PATH || "/dashboard?salla=connected";

type TokenResp = {
  token_type: "Bearer";
  access_token: string;
  refresh_token?: string;
  expires_in?: number;
  scope?: string;
};

type SallaStoreInfo = {
  data?: {
    id?: number | string;
    name?: string;
    domain?: string;
    type?: "demo" | "real" | string;
  };
};

function withTimeout(ms: number) {
  const controller = new AbortController();
  const t = setTimeout(() => controller.abort(), ms);
  return { signal: controller.signal, cancel: () => clearTimeout(t) };
}
const toErr = (e: unknown) => (e instanceof Error ? e.message : String(e));
const redact = (tok?: string | null) =>
  !tok ? null : tok.length <= 12 ? `${tok.length}ch:${tok}` : `${tok.length}ch:${tok.slice(0,6)}…${tok.slice(-6)}`;
const randHex = (len=16) => crypto.randomBytes(len).toString("hex");

async function fetchWithTrace(url: string, init: RequestInit, opts?: { label?: string; timeoutMs?: number }) {
  const label = opts?.label || "fetch";
  const timeoutMs = opts?.timeoutMs ?? 15000;
  const { signal, cancel } = withTimeout(timeoutMs);
  const startedAt = Date.now();
  let text = "", ok = false, status = 0, errMsg = "";
  const headers: Record<string,string> = {};
  try {
    const r = await fetch(url, { ...init, signal });
    status = r.status;
    r.headers.forEach((v,k)=>{ headers[k.toLowerCase()] = v; });
    text = await r.text();
    if (text.length > 1024) text = text.slice(0,1024) + "…[truncated]";
    ok = r.ok;
  } catch (e) { errMsg = toErr(e); }
  finally { cancel(); }
  const elapsed = Date.now() - startedAt;
  console.error(`[salla/callback][${label}] url=${url}
  method=${init.method || "GET"}
  status=${status} ok=${ok} elapsed_ms=${elapsed}
  headers=${JSON.stringify(headers)}
  error=${errMsg || "none"}
  body_snippet=${text ? JSON.stringify(text) : "none"}`);
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return { ok, status, headers, text, res: null as any, elapsed, error: errMsg || null };
}

function decideApiBase(info: SallaStoreInfo | null | undefined): string {
  const type = (info?.data?.type || "").toLowerCase();
  const domain = String(info?.data?.domain || "");
  if (type === "demo") return "https://api.salla.dev";
  if (domain.includes("salla.dev")) return "https://api.salla.dev";
  return "https://api.salla.sa";
}

function cookieStr(name: string, value: string, maxAgeSec: number) {
  // ملاحظة: لا نستخدم HttpOnly لأننا نقرأ الكوكي بالعميل
  return `${name}=${encodeURIComponent(value)}; Path=/; Max-Age=${maxAgeSec}; SameSite=Lax; Secure`;
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const debugRequested = req.query.debug === "1";
  try {
    if (req.method !== "GET") return res.status(405).send("Method Not Allowed");

    const code  = typeof req.query.code  === "string" ? req.query.code  : undefined;
    const state = typeof req.query.state === "string" ? req.query.state : undefined;
    if (!code) return res.status(400).send("Missing code");

    if (!CLIENT_ID || !CLIENT_SECRET || !REDIRECT_URI) {
      console.error("[salla/callback] missing_oauth_env");
      return res.status(500).send("Salla OAuth env vars are not configured");
    }
    if (!APP_BASE) console.warn("[salla/callback] APP_BASE not configured");

    const db = dbAdmin();

    // state → ownerUid (اختياري)
    let presetUid: string | null = null;
    let returnTo: string | null = null;
    let ownerUid: string | null = null;
    if (state) {
      try {
        const stRef = db.collection("salla_oauth_state").doc(state);
        const stSnap = await stRef.get();
        if (stSnap.exists) {
          const st = stSnap.data() as { uid?: string; returnTo?: string; ownerUid?: string } | undefined;
          presetUid = typeof st?.uid === "string" ? st.uid : null;
          returnTo  = typeof st?.returnTo === "string" ? st.returnTo : null;
          ownerUid  = typeof st?.ownerUid === "string" ? st.ownerUid : null;
          await stRef.delete().catch(() => {});
        } else {
          try {
            const parsed = JSON.parse(decodeURIComponent(state)) as { uid?: string; returnTo?: string; ownerUid?: string };
            if (typeof parsed?.uid === "string") presetUid = parsed.uid;
            if (typeof parsed?.returnTo === "string") returnTo = parsed.returnTo;
            if (typeof parsed?.ownerUid === "string") ownerUid = parsed.ownerUid;
          } catch {}
        }
      } catch (e) { console.error("[salla/callback] state_read_error", toErr(e)); }
    }

    // 1) token exchange
    const tokenForm = new URLSearchParams({
      grant_type: "authorization_code",
      code, client_id: CLIENT_ID, client_secret: CLIENT_SECRET, redirect_uri: REDIRECT_URI,
    }).toString();

    const tokenTrace = await fetchWithTrace(
      SALLA_TOKEN_URL,
      { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: tokenForm },
      { label: "token_exchange", timeoutMs: 15000 }
    );
    if (!tokenTrace.ok) return res.status(tokenTrace.status || 502).send("token_exchange_failed");

    let tokens: Partial<TokenResp> = {};
    try { tokens = JSON.parse(tokenTrace.text || "{}") as Partial<TokenResp>; }
    catch { return res.status(502).send("token_parse_error"); }
    if (!tokens.access_token) return res.status(500).send("missing_access_token");

    // 2) store info
    const meUrl = `${DEFAULT_API_BASE}/admin/v2/store/info`;
    const meTrace = await fetchWithTrace(
      meUrl,
      { method: "GET", headers: { Authorization: `Bearer ${tokens.access_token}` } },
      { label: "store_info", timeoutMs: 15000 }
    );
    if (!meTrace.ok) return res.status(meTrace.status || 502).send("fetch_store_error");

    const info = JSON.parse(meTrace.text || "{}") as SallaStoreInfo;
    const storeId     = info?.data?.id;
    const storeName   = info?.data?.name || null;
    const storeDomain = info?.data?.domain || null;
    if (!storeId) return res.status(502).send("cannot_resolve_store_id");

    const apiBaseForStore = decideApiBase(info);
    const uid = presetUid || `salla:${storeId}`;

    const expiresIn = Number(tokens.expires_in || 0);
    const expiresAt = expiresIn ? Date.now() + expiresIn * 1000 : null;

    await db.collection("salla_tokens").doc(uid).set({
      uid, provider: "salla", storeId,
      accessToken: tokens.access_token,
      refreshToken: tokens.refresh_token || null,
      expiresIn: expiresIn || null,
      expiresAt,
      scope: tokens.scope || null,
      obtainedAt: Date.now(),
      storeName, storeDomain, apiBase: apiBaseForStore,
    }, { merge: true });

    // المستند الحقيقي
    await db.collection("stores").doc(uid).set({
      uid,
      platform: "salla",
      ownerUid: ownerUid || null,
      salla: {
        storeId,
        connected: true,
        installed: true,
        installedAt: Date.now(),
        storeName,
        domain: storeDomain,
        apiBase: apiBaseForStore,
      },
      uninstalledAt: null, // نلغي أي قيمة قديمة
      connectedAt: Date.now(),
      updatedAt: Date.now(),
    }, { merge: true });

    // ✅ alias على stores/{ownerUid} لو معروف
    if (ownerUid) {
      await db.collection("stores").doc(ownerUid).set({
        ownerUid,
        platform: "salla",
        storeUid: uid,           // يشير للمستند الحقيقي
        storeName,
        updatedAt: Date.now(),
      }, { merge: true });
    }

    // webhooks (اختياري)
    if (APP_BASE) {
      try {
        const subUrl = `${APP_BASE}/api/salla/subscribe?uid=${encodeURIComponent(uid)}`;
        await fetchWithTrace(
          subUrl,
          { method: "POST", headers: { "Content-Type": "application/json", "x-cron-secret": process.env.CRON_SECRET || "" } },
          { label: "webhooks_subscribe", timeoutMs: 10000 }
        );
      } catch (e) { console.warn("[salla/callback] webhook_subscribe_exception", toErr(e)); }
    }

    // 3) Onboarding token (يحمل storeUid) — اختياري
    let onboardingUrl: string | null = null;
    try {
      const tokenId = randHex(16);
      const now = Date.now();
      await db.collection("onboarding_tokens").doc(tokenId).set({
        id: tokenId,
        storeUid: uid,
        uid,
        createdAt: now,
        expiresAt: now + 15 * 60 * 1000,
        usedAt: null,
        store: { id: storeId, name: storeName, domain: storeDomain },
        purpose: "set_password_after_salla_connect",
      });
      if (APP_BASE) onboardingUrl = `${APP_BASE}/onboarding/set-password?t=${tokenId}`;
    } catch (e) { console.warn("[salla/callback] onboarding_token_error", toErr(e)); }

    // 🔒 اضبط الكوكيّات قبل التحويل
    res.setHeader("Set-Cookie", [
      cookieStr("salla_store_uid", uid, 60 * 60 * 24 * 365), // سنة
      cookieStr("salla_connected", "1", 60 * 60),            // ساعة
    ]);

    const destBase = APP_BASE || "";
    const dest = (onboardingUrl || `${destBase}${AFTER_PATH}`) + `&uid=${encodeURIComponent(uid)}`;

    if (debugRequested) {
      return res.status(200).json({ ok: true, uid, ownerUid, storeId, storeName, storeDomain, redirect_to: dest });
    }
    return res.redirect(302, dest);
  } catch (e) {
    console.error("salla_callback_error", toErr(e));
    return res.status(500).send(toErr(e) || "internal_error");
  }
}
====[ END FILE: src/pages/api/salla/callback.ts ]===================================================

====[ START FILE: src/pages/api/salla/connect.ts (1.8 KB) ]=========================================
// src/pages/api/salla/connect.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { getAuth } from "firebase-admin/auth";

const AUTH_BASE = process.env.SALLA_AUTH_URL || "https://accounts.salla.sa/oauth2/authorize";
const CLIENT_ID = process.env.SALLA_CLIENT_ID!;
const REDIRECT_URI = process.env.SALLA_REDIRECT_URI!;
const SCOPE = "settings.read customers.read orders.read products.read webhooks.read_write offline_access";

function randomId(n = 16) {
  return Array.from(crypto.getRandomValues(new Uint8Array(n))).map(b => b.toString(16).padStart(2,"0")).join("");
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "POST") return res.status(405).json({ ok: false, error: "Method Not Allowed" });

    // تحقق من التوكن
    const idToken = req.headers.authorization?.replace(/^Bearer\s+/i, "");
    if (!idToken) return res.status(401).json({ ok: false, error: "Missing idToken" });
    const auth = getAuth();
    const decoded = await auth.verifyIdToken(idToken);
    const ownerUid = decoded.uid;

    const db = dbAdmin();

    const stateId = randomId(16);
    await db.collection("salla_oauth_state").doc(stateId).set({
      ownerUid,
      createdAt: Date.now(),
      // returnTo: "/dashboard?salla=connected" // إن حبيت
    });

    const url = new URL(AUTH_BASE);
    url.searchParams.set("response_type", "code");
    url.searchParams.set("client_id", CLIENT_ID);
    url.searchParams.set("redirect_uri", REDIRECT_URI);
    url.searchParams.set("scope", SCOPE);
    url.searchParams.set("state", stateId);

    return res.status(200).json({ ok: true, url: url.toString() });
  } catch (e) {
    return res.status(500).json({ ok: false, error: (e as Error).message });
  }
}
====[ END FILE: src/pages/api/salla/connect.ts ]====================================================

====[ START FILE: src/pages/api/salla/disconnect.ts (5.1 KB) ]======================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyStore, type AuthedRequest } from "@/utils/verifyStore";

const FALLBACK_API_BASE = (process.env.SALLA_API_BASE || "https://api.salla.sa").replace(/\/+$/, "");

// (اختياري) محاولة إلغاء الاشتراكات لو API يسمح — نبقيها لينة ولا نفشل الطلب عند الخطأ
async function tryCleanupWebhooks(params: {
  apiBase: string;
  accessToken?: string | null;
  sinkUrl: string;
}) {
  const { apiBase, accessToken, sinkUrl } = params;
  if (!accessToken) return;

  // ملاحظة: نقاط حذف/قائمة الاشتراكات قد تختلف بين البيئات/الإصدارات.
  // نحاول أفضل جهد: لو فيه endpoint لـ "subscriptions" بنسحبه ونحذف كل ما يطابق الـ sinkUrl.
  try {
    const list = await fetch(`${apiBase}/admin/v2/webhooks/subscriptions`, {
      headers: { Authorization: `Bearer ${accessToken}` },
    });
    const text = await list.text();
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    let data: any = null;
    try {
      data = text ? JSON.parse(text) : null;
    } catch {
      /* ignore */
    }
    const subs: Array<{ id: number; url?: string }> = data?.data || [];
    const toDelete = subs.filter((s) => (s.url || "").trim() === sinkUrl.trim());

    // نحذف واحد-واحد (لو فيه endpoint /unsubscribe)
    for (const s of toDelete) {
      try {
        await fetch(`${apiBase}/admin/v2/webhooks/unsubscribe`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${accessToken}`,
          },
          body: JSON.stringify({ id: s.id }),
        });
      } catch {
        // تجاهل
      }
    }
  } catch {
    // تجاهل أي خطأ هنا — لا نفشل عملية الفصل
  }
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "POST") return res.status(405).json({ ok: false, error: "Method Not Allowed" });

    // نتحقق من مالك المتجر (نفس آلية /api/store/settings)
    try {
      await verifyStore(req);
    } catch (e) {
      const err = e as Error & { status?: number };
      return res.status(err.status ?? 401).json({ ok: false, error: err.message || "Unauthorized" });
    }

    const { storeId } = req as AuthedRequest; // هذا هو ownerUid
    if (!storeId) return res.status(400).json({ ok: false, error: "Missing storeId" });

    const db = dbAdmin();

    // نجيب مستند منصة سلة الخاص بهذا المالك
    const storeSnap = await db
      .collection("stores")
      .where("platform", "==", "salla")
      .where("ownerUid", "==", storeId)
      .limit(1)
      .get();

    if (storeSnap.empty) {
      // لا يوجد ربط
      return res.status(200).json({ ok: true, already: true });
    }

    const storeDoc = storeSnap.docs[0];
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    const storeData = storeDoc.data() as any;
    const uid: string = storeData?.uid || storeDoc.id; // غالبًا "salla:STORE_ID"
    const apiBase = (storeData?.salla?.apiBase || FALLBACK_API_BASE).replace(/\/+$/, "");

    // نقرأ التوكنات لمحاولة تنظيف الاشتراكات
    const tokenSnap = await db.collection("salla_tokens").doc(uid).get();
    const accessToken: string | undefined = tokenSnap.exists ? (tokenSnap.data()?.accessToken as string | undefined) : undefined;

    const base =
      (process.env.APP_BASE_URL ||
        process.env.NEXT_PUBLIC_APP_URL ||
        process.env.NEXT_PUBLIC_BASE_URL ||
        "").replace(/\/+$/, "");
    const token = (process.env.SALLA_WEBHOOK_TOKEN || "").trim();
    const sinkUrl = `${base}/api/salla/webhook${token ? `?t=${encodeURIComponent(token)}` : ""}`;

    // (اختياري) نحاول إزالة الاشتراكات المرتبطة بـ sinkUrl
    await tryCleanupWebhooks({ apiBase, accessToken: accessToken || null, sinkUrl });

    // 1) تعطيل حالة الربط في stores
    await storeDoc.ref.set(
      {
        salla: {
          //eslint-disable-next-line @typescript-eslint/no-explicit-any
          ...((storeData?.salla as any) || {}),
          connected: false,
          uninstalledAt: Date.now(),
        },
        updatedAt: Date.now(),
      },
      { merge: true }
    );

    // 2) إبطال التوكنات (لا نحذف الوثيقة بالكامل للحفاظ على التعقّب والسجل)
    if (tokenSnap.exists) {
      await tokenSnap.ref.set(
        {
          revokedAt: Date.now(),
          accessToken: null,
          refreshToken: null,
        },
        { merge: true }
      );
    }

    return res.status(200).json({ ok: true });
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    return res.status(500).json({ ok: false, error: e?.message || String(e) });
  }
}
====[ END FILE: src/pages/api/salla/disconnect.ts ]=================================================

====[ START FILE: src/pages/api/salla/refresh.ts (2.3 KB) ]=========================================
// src/pages/api/salla/refresh.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { getDb } from "@/server/firebase-admin";

/**
 * ENV:
 *  - SALLA_TOKEN_URL
 *  - SALLA_CLIENT_ID
 *  - SALLA_CLIENT_SECRET
 */
export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).json({ error: "Method Not Allowed" });
  try {
    const uid = (req.query.uid as string) || (req.body?.uid as string);
    if (!uid) return res.status(400).json({ error: "missing_uid" });

    const db = getDb();
    const doc = await db.collection("stores").doc(uid).get();
    const refresh = doc.data()?.salla?.tokens?.refresh_token as string | undefined;
    if (!refresh) return res.status(400).json({ error: "no_refresh_token" });

    const tokenUrl = process.env.SALLA_TOKEN_URL!;
    const clientId = process.env.SALLA_CLIENT_ID!;
    const clientSec = process.env.SALLA_CLIENT_SECRET!;
    if (!tokenUrl || !clientId || !clientSec) {
      return res.status(500).json({ error: "missing_env" });
    }

    const resp = await fetch(tokenUrl, {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams({
        grant_type: "refresh_token",
        refresh_token: refresh,
        client_id: clientId,
        client_secret: clientSec,
      }).toString(),
    });

    const data = await resp.json();
    if (!resp.ok) {
      return res.status(resp.status).json({ error: "refresh_failed", details: data });
    }

    const access = String(data.access_token || "");
    const newRef = (data.refresh_token as string) || refresh;
    const expiresIn = Number(data.expires_in || 0);
    const expiresAt = expiresIn ? Date.now() + expiresIn * 1000 : null;

    await doc.ref.set(
      {
        salla: {
          connected: true,
          tokens: {
            access_token: access,
            refresh_token: newRef,
            expires_at: expiresAt,
            obtained_at: Date.now(),
          },
        },
      },
      { merge: true }
    );

    res.status(200).json({ ok: true, expiresAt });
  } catch (e: unknown) {
    const message = e instanceof Error ? e.message : String(e);
    res.status(500).json({ error: "internal", message });
  }
}
====[ END FILE: src/pages/api/salla/refresh.ts ]====================================================

====[ START FILE: src/pages/api/salla/status.ts (3.9 KB) ]==========================================
// src/pages/api/salla/status.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

type StatusOk = {
  ok: true;
  connected: boolean;
  uid?: string | null;
  storeId?: string | number | null;
  storeName?: string | null;
  domain?: string | null;
  apiBase?: string | null;
  reason?: string;
};
type StatusFail = { ok: false; error: string };

function asMsg(e: unknown) {
  return e instanceof Error ? e.message : String(e);
}

function parseCookies(raw?: string | null): Record<string, string> {
  const out: Record<string, string> = {};
  if (!raw) return out;
  raw.split(/;\s*/).forEach((p) => {
    const i = p.indexOf("=");
    if (i > -1) out[decodeURIComponent(p.slice(0, i).trim())] = decodeURIComponent(p.slice(i + 1).trim());
  });
  return out;
}

function normalizeConnected(docData: Record<string, unknown> | undefined): boolean {
  const s = (docData?.salla || {}) as Record<string, unknown>;
  const connectedFlag = Boolean(s.connected);
  const installedAt = Number(s.installedAt ?? docData?.installedAt ?? 0) || 0;
  const uninstalledAt = Number(docData?.uninstalledAt ?? 0) || 0;
  if (!connectedFlag) return false;
  if (!installedAt) return true;
  if (!uninstalledAt) return true;
  return uninstalledAt < installedAt;
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<StatusOk | StatusFail>
) {
  try {
    const db = dbAdmin();

    const qUid = typeof req.query.uid === "string" ? req.query.uid : undefined;
    const cookies = parseCookies(req.headers.cookie || "");
    const cUid = cookies["salla_store_uid"];
    const ownerUid = typeof req.query.ownerUid === "string" ? req.query.ownerUid : undefined;

    let uid: string | undefined = qUid || cUid;

    // alias: stores/{ownerUid} => { storeUid }
    if (!uid && ownerUid) {
      const aliasDoc = await db.collection("stores").doc(ownerUid).get();
      if (aliasDoc.exists) {
        const alias = aliasDoc.data() || {};
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        const storeUid = (alias as any).storeUid as string | undefined;
        if (storeUid) uid = storeUid;
      }
    }

    if (uid) {
      const doc = await db.collection("stores").doc(uid).get();
      if (doc.exists) {
        const data = doc.data() || {};
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        const s = (data as any).salla || {};
        return res.status(200).json({
          ok: true,
          connected: normalizeConnected(data),
          uid: doc.id,
          storeId: s.storeId ?? null,
          storeName: s.storeName ?? null,
          domain: s.domain ?? null,
          apiBase: s.apiBase ?? null,
          reason: "read_by_uid",
        });
      }

      // fallback: salla_tokens/{uid}
      const tok = await db.collection("salla_tokens").doc(uid).get();
      if (tok.exists) {
        const t = tok.data() || {};
        return res.status(200).json({
          ok: true,
          connected: true,
          uid,
          //eslint-disable-next-line @typescript-eslint/no-explicit-any
          storeId: (t as any).storeId ?? null,
          //eslint-disable-next-line @typescript-eslint/no-explicit-any
          storeName: (t as any).storeName ?? null,
          //eslint-disable-next-line @typescript-eslint/no-explicit-any
          domain: (t as any).storeDomain ?? null,
          //eslint-disable-next-line @typescript-eslint/no-explicit-any
          apiBase: (t as any).apiBase ?? null,
          reason: "fallback_by_tokens",
        });
      }

      return res.status(200).json({ ok: true, connected: false, uid, reason: "not_found" });
    }

    return res.status(200).json({ ok: true, connected: false, reason: "no_uid" });
  } catch (e) {
    return res.status(500).json({ ok: false, error: asMsg(e) });
  }
}
====[ END FILE: src/pages/api/salla/status.ts ]=====================================================

====[ START FILE: src/pages/api/salla/subscribe.ts (5.1 KB) ]=======================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

const FALLBACK_API_BASE = (process.env.SALLA_API_BASE || "https://api.salla.sa").replace(/\/+$/, "");
const CRON_SECRET = process.env.CRON_SECRET || "";

// قائمة أحداث واقعية ومفيدة
const DESIRED_EVENTS = [
  // أوامر ودفع
  "order.payment.updated",
  "order.status.updated",
  "order.cancelled",
  "order.refunded",

  // شحن
  "shipment.updated",
  "shipment.created",

  // تحديث منتج (اختياري لكنه مفيد)
  "product.updated",

  // أحداث إدارة التطبيق (قد تكون غير متاحة لحسابات معينة)
  "app.installed",
  "app.uninstalled",
  "app.settings.updated",
] as const;
type Desired = typeof DESIRED_EVENTS[number];

// Helper لاستدعاء Salla API مع توثيق Bearer
async function sallaFetch<T>(base: string, path: string, token: string, init: RequestInit = {}) {
  const r = await fetch(`${base}${path}`, {
    ...init,
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
      ...(init.headers || {}),
    },
  });
  const text = await r.text();
  let json: T | null = null;
  try {
    json = text ? (JSON.parse(text) as T) : null;
  } catch {
    /* ignore */
  }
  return { ok: r.ok, status: r.status, json, text };
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "POST") return res.status(405).json({ error: "Method Not Allowed" });
    if (!CRON_SECRET || req.headers["x-cron-secret"] !== CRON_SECRET) {
      return res.status(401).json({ error: "Unauthorized" });
    }

    const uid = typeof req.query.uid === "string" ? req.query.uid : (req.body?.uid as string | undefined);
    if (!uid) return res.status(400).json({ error: "missing_uid" });

    const db = dbAdmin();

    // نقرأ التوكن و apiBase المخزن للمتجر
    const tokSnap = await db.collection("salla_tokens").doc(uid).get();
    if (!tokSnap.exists) return res.status(404).json({ error: "token_doc_not_found" });
    const tok = tokSnap.data() as {
      accessToken?: string;
      apiBase?: string;
    };
    const accessToken = tok?.accessToken;
    const apiBase = (tok?.apiBase || FALLBACK_API_BASE).replace(/\/+$/, "");
    if (!accessToken) return res.status(401).json({ error: "no_access_token_for_uid" });

    // نبني Sink URL ونمرّر التوكن كـ query علشان النداءات اللي بدون Authorization header
    const base =
      (process.env.APP_BASE_URL ||
        process.env.NEXT_PUBLIC_APP_URL ||
        process.env.NEXT_PUBLIC_BASE_URL ||
        "").replace(/\/+$/, "");
    if (!base) return res.status(500).json({ error: "APP_BASE_URL not configured" });

    const token = (process.env.SALLA_WEBHOOK_TOKEN || "").trim();
    const sinkUrl = `${base}/api/salla/webhook${token ? `?t=${encodeURIComponent(token)}` : ""}`;

    // 1) جلب قائمة الأحداث المتاحة
    const list = await sallaFetch<{ status: number; success: boolean; data: Array<{ event: string }> }>(
      apiBase,
      "/admin/v2/webhooks/events",
      accessToken
    );
    if (!list.ok) {
      return res.status(list.status || 502).json({ error: "list_events_failed", body: list.text });
    }

    const available = new Set((list.json?.data || []).map((e) => e.event));
    const toSubscribe = DESIRED_EVENTS.filter((e) => available.has(e)) as Desired[];
    const skipped = DESIRED_EVENTS.filter((e) => !available.has(e));

    // 2) الاشتراك حدثًا-بحدث لتفادي 422 بسبب تعدد الأحداث في طلب واحد
    const results: Array<{ event: string; ok: boolean; status: number; id?: number; body?: unknown }> = [];
    for (const ev of toSubscribe) {
      const sub = await sallaFetch<{ status: number; success: boolean; data?: { id: number } }>(
        apiBase,
        "/admin/v2/webhooks/subscribe",
        accessToken,
        {
          method: "POST",
          body: JSON.stringify({
            name: `TheQah ${ev}`,
            event: ev,
            url: sinkUrl,
            version: 2,
            headers: [
              { key: "x-webhook-source", value: "theqah" },
              { key: "Authorization", value: `Bearer ${process.env.SALLA_WEBHOOK_TOKEN || ""}` },
              { key: "x-webhook-token", value: `${process.env.SALLA_WEBHOOK_TOKEN || ""}` },
            ],
          }),
        }
      );

      if (sub.ok) {
        results.push({ event: ev, ok: true, status: 200, id: sub.json?.data?.id });
      } else {
        results.push({ event: ev, ok: false, status: sub.status, body: sub.text });
      }
    }

    return res.status(200).json({
      ok: true,
      sinkUrl,
      subscribed: results,
      skipped,
      available: [...available],
      apiBase,
      uid,
    });
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    return res.status(500).json({ error: "internal", message: e?.message || String(e) });
  }
}
====[ END FILE: src/pages/api/salla/subscribe.ts ]==================================================

====[ START FILE: src/pages/api/salla/verify.ts (2.2 KB) ]==========================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

const REDACT = (s?: string | null) =>
  !s ? null : s.length <= 12 ? `${s.length}ch:${s}` : `${s.length}ch:${s.slice(0,6)}…${s.slice(-6)}`;

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const uid = typeof req.query.uid === "string" ? req.query.uid : null;
    if (!uid) return res.status(400).json({ error: "missing uid" });

    const db = dbAdmin();
    const tok = await db.collection("salla_tokens").doc(uid).get();
    const store = await db.collection("stores").doc(uid).get();

    const t = tok.exists ? tok.data() || {} : {};
    const s = store.exists ? store.data() || {} : {};

    return res.json({
      ok: true,
      uid,
      tokens: {
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        access_token: REDACT((t as any).accessToken),
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        refresh_token: REDACT((t as any).refreshToken),
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        expiresAt: (t as any).expiresAt || null,
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        obtainedAt: (t as any).obtainedAt || null,
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        scope: (t as any).scope || null,
      },
      store: {
        /*eslint-disable-next-line @typescript-eslint/no-explicit-any*/
        platform: (s as any).platform || null,
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        connected: !!(s as any)?.salla?.connected,
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        installed: !!(s as any)?.salla?.installed,
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        connectedAt: (s as any).connectedAt || null,
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        updatedAt: (s as any).updatedAt || null,
      },
      
    });
  } catch (e) {
    return res.status(500).json({ ok: false, error: e instanceof Error ? e.message : String(e) });
  }
}
====[ END FILE: src/pages/api/salla/verify.ts ]=====================================================

====[ START FILE: src/pages/api/salla/webhook.ts (17.2 KB) ]========================================
// src/pages/api/salla/webhook.ts
import type { NextApiRequest, NextApiResponse } from "next";
import crypto from "crypto";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { createShortLink } from "@/server/short-links";
import { sendEmailDmail as sendEmail } from "@/server/messaging/email-dmail";
import { sendSms, buildInviteSMS } from "@/server/messaging/send-sms";

export const config = { api: { bodyParser: false } };

// -------------------- Types --------------------
type UnknownRecord = Record<string, unknown>;

interface SallaCustomer { name?: string; email?: string; mobile?: string; }
interface SallaItem { id?: string|number; product?: { id?: string|number }|null; product_id?: string|number; }
interface SallaOrder {
  id?: string|number; order_id?: string|number; number?: string|number;
  status?: string; order_status?: string; new_status?: string; shipment_status?: string;
  payment_status?: string;
  customer?: SallaCustomer; items?: SallaItem[];
  store?: { id?: string|number; name?: string } | null;
  merchant?: { id?: string|number; name?: string } | null;
}
interface SallaWebhookBody {
  event: string;
  merchant?: string | number;     // لأحداث app.*
  data?: SallaOrder | UnknownRecord;
}

type SallaAppEvent =
  | "app.store.authorize"
  | "app.installed"
  | "app.updated"
  | "app.uninstalled"
  | "app.trial.started"
  | "app.trial.expired"
  | "app.trial.canceled"
  | "app.subscription.started"
  | "app.subscription.expired"
  | "app.subscription.canceled"
  | "app.subscription.renewed"
  | "app.feedback.created"
  | "app.settings.updated";

// -------------------- Consts & helpers --------------------
const WEBHOOK_TOKEN = (process.env.SALLA_WEBHOOK_TOKEN || "").trim();
const DONE  = new Set(["paid","fulfilled","delivered","completed","complete"]);
const CANCEL= new Set(["canceled","cancelled","refunded","returned"]);
const lc = (x: unknown) => String(x ?? "").toLowerCase();
const keyOf = (event: string, orderId?: string, status?: string) =>
  `salla:${lc(event)}:${orderId ?? "none"}:${status ?? ""}`;

function readRawBody(req: NextApiRequest): Promise<Buffer> {
  return new Promise((resolve, reject) => {
    const chunks: Buffer[] = [];
    req.on("data", (c) => chunks.push(Buffer.isBuffer(c) ? c : Buffer.from(c)));
    req.on("end", () => resolve(Buffer.concat(chunks)));
    req.on("error", reject);
  });
}
function timingSafeEq(a: string, b: string) {
  const A = Buffer.from(a);
  const B = Buffer.from(b);
  if (A.length !== B.length) return false;
  return crypto.timingSafeEqual(A, B);
}
function getHeader(req: NextApiRequest, name: string): string {
  const v = req.headers[name.toLowerCase()];
  return Array.isArray(v) ? v[0] || "" : (v || "");
}
function extractProvidedToken(req: NextApiRequest): string {
  const auth = getHeader(req, "authorization").trim();
  if (auth.toLowerCase().startsWith("bearer ")) return auth.slice(7).trim();
  const h1 = getHeader(req, "x-webhook-token").trim();
  if (h1) return h1;
  const h2 = getHeader(req, "x-salla-token").trim();
  if (h2) return h2;
  const q = typeof req.query.t === "string" ? req.query.t.trim() : "";
  return q;
}
function pickName(obj: unknown): string | undefined {
  if (obj && typeof obj === "object" && "name" in obj) {
    const n = (obj as { name?: unknown }).name;
    return typeof n === "string" ? n : undefined;
  }
  return undefined;
}
function getStoreOrMerchantName(ev: UnknownRecord): string | undefined {
  return pickName(ev["store"]) ?? pickName(ev["merchant"]);
}
function pickStoreUidFromSalla(o: UnknownRecord): string | undefined {
  const store = o["store"] as UnknownRecord | undefined;
  const merchant = o["merchant"] as UnknownRecord | undefined;
  const sid = store?.["id"] ?? merchant?.["id"];
  return sid !== undefined ? `salla:${String(sid)}` : undefined;
}
function extractProductIds(items?: SallaItem[]): string[] {
  if (!Array.isArray(items)) return [];
  const ids = new Set<string>();
  for (const it of items) {
    const raw = it?.product_id ?? it?.product?.id ?? it?.id;
    if (raw !== undefined && raw !== null) ids.add(String(raw));
  }
  return [...ids];
}

// -------------------- Order snapshot & invites --------------------
async function upsertOrderSnapshot(
  db: FirebaseFirestore.Firestore,
  order: SallaOrder,
  storeUid?: string | null
) {
  const orderId = String(order.id ?? order.order_id ?? "");
  if (!orderId) return;
  await db.collection("orders").doc(orderId).set({
    id: orderId,
    number: order.number ?? null,
    status: lc(order.status ?? order.order_status ?? order.new_status ?? order.shipment_status ?? ""),
    paymentStatus: lc(order.payment_status ?? ""),
    customer: {
      name: order.customer?.name ?? null,
      email: order.customer?.email ?? null,
      mobile: order.customer?.mobile ?? null,
    },
    storeUid: storeUid ?? null,
    platform: "salla",
    updatedAt: Date.now(),
  }, { merge: true });
}

async function ensureInviteForOrder(
  db: FirebaseFirestore.Firestore,
  order: SallaOrder,
  eventRaw: UnknownRecord
) {
  const orderId = String(order.id ?? order.order_id ?? "");
  if (!orderId) return;

  // idempotency على دعوات الطلب
  const invitesSnap = await db.collection("review_invites")
    .where("orderId","==",orderId).limit(1).get();
  if (!invitesSnap.empty) return;

  let storeUid: string | null = pickStoreUidFromSalla(eventRaw) || null;
  if (!storeUid) {
    try {
      const o = await db.collection("orders").doc(orderId).get();
      storeUid = (o.data()?.storeUid as string) || null;
    } catch { storeUid = null; }
  }

  const productIds = extractProductIds((order as SallaOrder).items);
  const mainProductId = productIds[0] || orderId;

  const tokenId = crypto.randomBytes(10).toString("hex");
  const base =
    (process.env.APP_BASE_URL || process.env.NEXT_PUBLIC_APP_URL || process.env.NEXT_PUBLIC_BASE_URL || "").replace(/\/+$/,"");
  if (!base) throw new Error("BASE_URL not configured");

  const reviewUrl = `${base}/review/${tokenId}`;
  const publicUrl = await createShortLink(reviewUrl).catch(() => reviewUrl);

  await db.collection("review_tokens").doc(tokenId).set({
    id: tokenId,
    platform: "salla",
    orderId,
    storeUid,
    productId: mainProductId,
    productIds,
    createdAt: Date.now(),
    usedAt: null,
    publicUrl,
    targetUrl: reviewUrl,
    channel: "multi",
  });

  const buyer = order.customer ?? {};
  await db.collection("review_invites").add({
    tokenId, orderId, platform: "salla",
    storeUid, productId: mainProductId, productIds,
    customer: { name: buyer.name ?? null, email: buyer.email ?? null, mobile: buyer.mobile ?? null },
    sentAt: Date.now(), deliveredAt: null, clicks: 0, publicUrl,
  });

  const storeName = getStoreOrMerchantName(eventRaw) ?? "متجرك";
  const smsText = buildInviteSMS(storeName, publicUrl);

  // نرسل القناتين معًا (متوازي) + إعدادات السعودية للـSMS
  const tasks: Array<Promise<unknown>> = [];
  if (buyer.mobile) {
    const mobile = String(buyer.mobile).replace(/\s+/g, "");
    tasks.push(
      sendSms(mobile, smsText, {
        defaultCountry: "SA",
        msgClass: "transactional",
        priority: 1,
        requestDlr: true,
      })
    );
  }
  if (buyer.email) {
    const name = buyer.name || "عميلنا العزيز";
    const emailHtml = `
      <div dir="rtl" style="font-family:Tahoma,Arial,sans-serif;line-height:1.7">
        <p>مرحباً ${name},</p>
        <p>قيّم تجربتك من <strong>${storeName}</strong>.</p>
        <p><a href="${publicUrl}" style="background:#16a34a;color:#fff;padding:10px 18px;border-radius:6px;text-decoration:none">اضغط للتقييم الآن</a></p>
        <p style="color:#64748b">فريق ثقة</p>
      </div>`;
    tasks.push(sendEmail(buyer.email, "قيّم تجربتك معنا", emailHtml));
  }
  await Promise.allSettled(tasks);
}

async function voidInvitesForOrder(db: FirebaseFirestore.Firestore, orderId: string, reason: string) {
  if (!orderId) return;
  const q = await db.collection("review_tokens").where("orderId","==",orderId).get();
  const batch = db.batch();
  q.docs.forEach((d) => batch.update(d.ref, { voidedAt: Date.now(), voidReason: reason }));
  await batch.commit();
}

// -------------------- Handle app.* events (Easy OAuth) --------------------
async function handleAppEvent(
  db: FirebaseFirestore.Firestore,
  event: SallaAppEvent,
  merchant: string | number | undefined,
  data: UnknownRecord
) {
  const uid = merchant != null ? `salla:${String(merchant)}` : "salla:unknown";

  await db.collection("salla_app_events").add({ uid, event, merchant: merchant ?? null, data, at: Date.now() });

  if (event === "app.store.authorize") {
    // سلة ترسل التوكنات مباشرة عبر الويبهوك (النمط السهل)
    const payload = (data ?? {}) as Record<string, unknown>;

    const access_token  = typeof payload["access_token"] === "string" ? String(payload["access_token"]) : "";
    const refresh_token = typeof payload["refresh_token"] === "string" ? String(payload["refresh_token"]) : null;
    const scope         = typeof payload["scope"] === "string" ? String(payload["scope"]) : null;

    // expires قد تكون مدة (ثواني) أو طابع زمني Unix (ثواني)
    let expiresAt: number | null = null;
    const nowSec = Math.floor(Date.now() / 1000);
    const rawExp = payload["expires"];

    if (typeof rawExp === "number") {
      expiresAt = rawExp > (nowSec + 3600) ? rawExp * 1000 : Date.now() + rawExp * 1000;
    } else if (typeof rawExp === "string" && rawExp.trim() !== "" && !Number.isNaN(Number(rawExp))) {
      const n = Number(rawExp);
      expiresAt = n > (nowSec + 3600) ? n * 1000 : Date.now() + n * 1000;
    } else {
      expiresAt = null;
    }

    if (access_token) {
      await db.collection("salla_tokens").doc(uid).set({
        uid,
        provider: "salla",
        storeId: merchant ?? null,
        accessToken: access_token,
        refreshToken: refresh_token,
        expiresAt,
        expiresRaw: rawExp ?? null, // للاحتفاظ بالقيمة الأصلية للتشخيص
        scope,
        obtainedAt: Date.now(),
        app: {
          id: payload["id"] ?? null,
          name: payload["app_name"] ?? null,
          description: payload["app_description"] ?? null,
          type: payload["app_type"] ?? null,
          tokenType: payload["token_type"] ?? null,
        },
      }, { merge: true });
    }

    await db.collection("stores").doc(uid).set({
      uid,
      platform: "salla",
      salla: {
        storeId: merchant ?? null,
        connected: true,
        installed: true,
        installedAt: Date.now(),
        lastAuthorizeAt: Date.now(),
        scope,
      },
      connectedAt: Date.now(),
      updatedAt: Date.now(),
    }, { merge: true });

    // بريد ترحيبي للتاجر (اختياري) لو كان البريد متاحًا بالحِمل
    const merchantEmail = typeof (data as UnknownRecord)["merchant_email"] === "string"
      ? String((data as UnknownRecord)["merchant_email"])
      : (typeof (data as UnknownRecord)["email"] === "string" ? String((data as UnknownRecord)["email"]) : null);
    const storeName = typeof (data as UnknownRecord)["store_name"] === "string"
      ? String((data as UnknownRecord)["store_name"])
      : (typeof (data as UnknownRecord)["merchant_name"] === "string" ? String((data as UnknownRecord)["merchant_name"]) : "متجرك");

    if (merchantEmail) {
      try {
        const appUrl = (process.env.NEXT_PUBLIC_APP_URL || process.env.APP_BASE_URL || "").replace(/\/+$/, "");
        const html = `
          <div dir="rtl" style="font-family:Tahoma,Arial,sans-serif;line-height:1.8">
            <h2>مرحبًا بك في ثقة 🎉</h2>
            <p>تم ربط تطبيق ثقة بمتجرك <strong>${storeName}</strong> على سلة بنجاح.</p>
            <p>
              <a href="${appUrl}/dashboard?store=${encodeURIComponent(uid)}"
                 style="background:#16a34a;color:#fff;padding:10px 14px;border-radius:8px;text-decoration:none">
                 الدخول للوحة التحكم
              </a>
            </p>
            <p style="color:#64748b">لو واجهت أي مشكلة، راسلنا.</p>
          </div>`;
        await sendEmail(merchantEmail, "تم ربط تطبيق ثقة بمتجرك", html);
      } catch (e) {
        console.warn("welcome_email_failed", e instanceof Error ? e.message : String(e));
      }
    }
  }

  if (event === "app.installed") {
    await db.collection("stores").doc(uid).set({
      uid,
      platform: "salla",
      salla: { storeId: merchant ?? null, installed: true, installedAt: Date.now() },
      updatedAt: Date.now(),
    }, { merge: true });
  }

  if (event === "app.uninstalled") {
    await db.collection("stores").doc(uid).set({
      uid,
      platform: "salla",
      salla: { storeId: merchant ?? null, installed: false, connected: false, uninstalledAt: Date.now() },
      updatedAt: Date.now(),
    }, { merge: true });
  }

  if (event.startsWith("app.trial.") || event.startsWith("app.subscription.")) {
    await db.collection("stores").doc(uid).set({
      uid,
      platform: "salla",
      salla: { storeId: merchant ?? null, subscription: { lastEvent: event, data, updatedAt: Date.now() } },
      updatedAt: Date.now(),
    }, { merge: true });
  }

  if (event === "app.settings.updated") {
    await db.collection("stores").doc(uid).set({
      uid,
      platform: "salla",
      salla: { storeId: merchant ?? null, settings: (data as UnknownRecord)["settings"] ?? {} },
      updatedAt: Date.now(),
    }, { merge: true });
  }

  if (event === "app.feedback.created") {
    await db.collection("stores").doc(uid).collection("app_feedback").add({ at: Date.now(), data });
  }
}

// -------------------- Handler --------------------
export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).json({ error: "Method Not Allowed" });

  // ✅ يقبل Bearer / x-webhook-token / x-salla-token / ?t=
  const provided = extractProvidedToken(req);
  if (!WEBHOOK_TOKEN || !provided || !timingSafeEq(provided, WEBHOOK_TOKEN)) {
    return res.status(401).json({ error: "invalid_webhook_token" });
  }

  const raw = await readRawBody(req);
  const db = dbAdmin();

  let body: SallaWebhookBody = { event: "" };
  try {
    body = JSON.parse(raw.toString("utf8") || "{}") as SallaWebhookBody;
  } catch {
    return res.status(400).json({ error: "invalid_json" });
  }

  const event = String(body.event || "");
  const dataRaw = (body.data ?? {}) as UnknownRecord;
  const asOrder = dataRaw as SallaOrder;

  // Idempotency لكل الأحداث
  const idemKey = crypto.createHash("sha256").update(provided + "|").update(raw).digest("hex");
  const idemRef = db.collection("webhooks_salla").doc(idemKey);
  if ((await idemRef.get()).exists) return res.status(200).json({ ok: true, deduped: true });
  await idemRef.set({
    at: Date.now(),
    event,
    orderId: String(asOrder.id ?? asOrder.order_id ?? "") || null,
    status: lc(asOrder.status ?? asOrder.order_status ?? asOrder.new_status ?? asOrder.shipment_status ?? ""),
    paymentStatus: lc(asOrder.payment_status ?? ""),
    merchant: body.merchant ?? null,
  });

  // فرع Easy OAuth (app.*)
  if (event.startsWith("app.")) {
    await handleAppEvent(db, event as SallaAppEvent, body.merchant, dataRaw);
    await db.collection("processed_events").doc(keyOf(event)).set({ at: Date.now(), event, processed: true }, { merge: true });
    return res.status(200).json({ ok: true });
  }

  // أوامر الطلبات / الشحن
  const orderId = String(asOrder.id ?? asOrder.order_id ?? "");
  const status = lc(asOrder.status ?? asOrder.order_status ?? asOrder.new_status ?? asOrder.shipment_status ?? "");
  const paymentStatus = lc(asOrder.payment_status ?? "");
  const storeUidFromEvent = pickStoreUidFromSalla(dataRaw) || null;

  await upsertOrderSnapshot(db, asOrder, storeUidFromEvent);

  // القواعد التشغيلية
  if (event === "order.payment.updated") {
    if (["paid","authorized","captured"].includes(paymentStatus)) {
      await ensureInviteForOrder(db, asOrder, dataRaw);
    }
  } else if (event === "shipment.updated") {
    if (DONE.has(status) || ["delivered","completed"].includes(status)) {
      await ensureInviteForOrder(db, asOrder, dataRaw);
    }
  } else if (event === "order.status.updated") {
    if (DONE.has(status)) {
      await ensureInviteForOrder(db, asOrder, dataRaw);
    }
  } else if (event === "order.cancelled") {
    await voidInvitesForOrder(db, orderId, "order_cancelled");
  } else if (event === "order.refunded") {
    await voidInvitesForOrder(db, orderId, "order_refunded");
  }

  await db.collection("processed_events")
    .doc(keyOf(event, orderId, status))
    .set({ at: Date.now(), event, processed: true, status }, { merge: true });

  return res.status(200).json({ ok: true });
}
====[ END FILE: src/pages/api/salla/webhook.ts ]====================================================

====[ START FILE: src/pages/api/settings/validate.ts (1.4 KB) ]=====================================
// src/pages/api/settings/validate.ts
import type { NextApiRequest, NextApiResponse } from 'next'

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method Not Allowed' })
  }

  const {
    email,
    store_name,
    whatsapp_number,
    logo_url,
    enable_auto_reviews,
  } = req.body

  // Email validation
  if (!email || typeof email !== 'string' || !email.includes('@')) {
    return res.status(400).json({ message: 'Invalid email address' })
  }

  // Store name required
  if (!store_name || typeof store_name !== 'string' || store_name.length < 3) {
    return res.status(400).json({ message: 'Store name must be at least 3 characters' })
  }

  // WhatsApp number (basic)
  if (!whatsapp_number || !/^\+?\d{10,15}$/.test(whatsapp_number)) {
    return res.status(400).json({ message: 'Invalid WhatsApp number' })
  }

  // Logo URL check (if provided)
  if (logo_url && typeof logo_url === 'string' && !logo_url.startsWith('https://')) {
    return res.status(400).json({ message: 'Logo URL must be a valid HTTPS link' })
  }

  // Optional boolean field check
  if (enable_auto_reviews && typeof enable_auto_reviews !== 'boolean') {
    return res.status(400).json({ message: 'enable_auto_reviews must be a boolean' })
  }

  return res.status(200).json({ valid: true })
}
====[ END FILE: src/pages/api/settings/validate.ts ]================================================

====[ START FILE: src/pages/api/sms/inbound.ts (653 B) ]============================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method!=='POST') return res.status(405).end();
  const { from, body, secret } = req.body || {};
  if (secret !== process.env.OURSMS_INBOUND_SECRET) return res.status(401).end();

  if ((body || '').toString().trim().toUpperCase() === 'STOP') {
    const p = (from || '').replace(/[^\d]/g,'');
    await dbAdmin().collection('optouts_sms').doc(p).set({ createdAt: Date.now() }, { merge:true });
  }
  res.status(200).json({ ok:true });
}
====[ END FILE: src/pages/api/sms/inbound.ts ]======================================================

====[ START FILE: src/pages/api/sms/status.ts (4.6 KB) ]============================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { info, warn } from '@/lib/logger';

function asString(v: unknown): string {
  if (typeof v === 'string') return v;
  if (Array.isArray(v)) return String(v[0] ?? '');
  if (v == null) return '';
  return String(v);
}

function normPhone(p?: string) {
  const msisdn = (p || '').replace(/[^\d]/g, '');
  return msisdn; // بنحتفظ بالأرقام فقط (مثل 9665XXXXXXXX)
}

function normStatus(s?: string) {
  const x = (s || '').toLowerCase();
  if (['delivered', 'delivrd', 'success', 'delivered_ok'].includes(x)) return 'delivered';
  if (['failed', 'undelivered', 'rejected', 'expired', 'blocked', 'error'].includes(x)) return 'failed';
  if (['sent', 'accepted', 'queued', 'submitted', 'pending', 'process', 'processing'].includes(x)) return 'pending';
  return x || 'unknown';
}

function parseIso(ts?: string) {
  const t = Date.parse(String(ts || ''));
  return Number.isFinite(t) ? t : Date.now();
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    // التحقق من السر: نقبل من الهيدر أو الكويري أو البودي
    const shared = process.env.OURSMS_DLR_SHARED_SECRET;
    const provided =
      (req.headers['x-oursms-secret'] as string) ||
      (asString((req.query || {}).secret)) ||
      (asString((req.body || {}).secret));
    if (shared && (!provided || provided !== shared)) {
      return res.status(401).json({ ok: false, error: 'unauthorized' });
    }

    if (req.method !== 'POST') return res.status(405).end();

    const body = req.body as unknown;
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    const list: Array<Record<string, unknown>> = Array.isArray((body as any)?.statuses)
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
      ? (body as any).statuses
      : [];

    if (!Array.isArray(list) || list.length === 0) {
      // fallback: بعض المزودين يرسلون حدثًا واحدًا بلا مصفوفة
      const single = (body && typeof body === 'object') ? (body as Record<string, unknown>) : null;
      if (single && (single.status || single.msgId || single.dest)) {
        list.push(single as Record<string, unknown>);
      }
    }

    if (list.length === 0) {
      return res.status(400).json({ ok: false, error: 'bad_payload' });
    }

    let processed = 0;

    // عالج كل حالة
    await Promise.all(
      list.map(async (it) => {
        const phone = normPhone(asString(it.dest || it.msisdn || it.to || it.phone));
        const messageId = asString(it.msgId || it.message_id || it.id || it.msgid);
        const jobId = asString(it.jobId || it.batchId || '');
        const statusRaw = asString(it.status || it.dlr || it.state);
        const status = normStatus(statusRaw);
        const msgDate = parseIso(asString(it.msgDate));
        const statusDate = parseIso(asString(it.statusDate));

        const logDocId = messageId || `${phone}:${statusDate}`;
        await dbAdmin().collection('sms_logs').doc(logDocId).set(
          {
            provider: 'oursms',
            phone,
            messageId: messageId || null,
            jobId: jobId || null,
            status,
            msgDate,
            statusDate,
            raw: {
              jobId, messageId, phone, status, msgDate, statusDate,
            },
            at: Date.now(),
          },
          { merge: true }
        );

        // حدّث أقرب دعوة خلال آخر 48 ساعة بنفس الرقم
        try {
          const since = Date.now() - 48 * 60 * 60 * 1000;
          const invSnap = await dbAdmin()
            .collection('review_invites')
            .where('customerPhone', '==', phone)
            .where('createdAt', '>=', since)
            .limit(1)
            .get();

          if (!invSnap.empty) {
            await invSnap.docs[0].ref.set(
              { lastDeliveryStatus: status, deliveryAt: statusDate },
              { merge: true }
            );
          }
        } catch (e) {
          warn('sms.dlr_invite_update_failed', { err: (e as Error).message?.slice(0, 200) });
        }

        processed++;
        info('sms.dlr', { status, phone, messageId, jobId });
      })
    );

    return res.status(200).json({ ok: true, processed });
  } catch (e: unknown) {
    const msg = e instanceof Error ? e.message : String(e);
    warn('sms.dlr_error', { err: msg });
    return res.status(500).json({ ok: false, error: msg });
  }
}
====[ END FILE: src/pages/api/sms/status.ts ]=======================================================

====[ START FILE: src/pages/api/store/app-settings.ts (1.3 KB) ]====================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { db } from '@/lib/firebase';
import { doc, getDoc, setDoc } from 'firebase/firestore';
import { verifyUser } from '@/utils/verifyUser';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const { uid } = await verifyUser(req);
    const storeRef = doc(db, 'stores', uid);
    const snap = await getDoc(storeRef);
    const app = snap.exists() ? snap.data().app || {} : {};

    if (req.method === 'GET') {
      return res.status(200).json({ app });
    }

    if (req.method === 'POST') {
      const {
        sender_name,
        default_send_method,
        sms_template,
        whatsapp_template,
        email_template,
      } = req.body;

      await setDoc(storeRef, {
        app: {
          sender_name,
          default_send_method,
          sms_template,
          whatsapp_template,
          email_template,
        },
      }, { merge: true });

      return res.status(200).json({ message: 'تم الحفظ', app: req.body });
    }

    return res.status(405).json({ message: 'Method not allowed' });
  } catch (err) {
    console.error('App-settings API error:', err);
    return res.status(401).json({ error: 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/store/app-settings.ts ]===============================================

====[ START FILE: src/pages/api/store/connection.ts (857 B) ]=======================================
// src/pages/api/store/connection.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { db } from '@/lib/firebase';
import { doc, getDoc } from 'firebase/firestore';
import { verifyUser } from '@/utils/verifyUser';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const { uid } = await verifyUser(req);
    const docRef = doc(db, 'stores', uid);
    const snap = await getDoc(docRef);

    if (!snap.exists()) {
      return res.status(404).json({ connected: false });
    }

    const salla = snap.data().salla;
    const connected = !!salla?.connected;
    const connectedAt = salla?.connected_at || null;

    return res.status(200).json({ connected, connectedAt });
  } catch {
    return res.status(401).json({ connected: false, error: 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/store/connection.ts ]=================================================

====[ START FILE: src/pages/api/store/dashboard.ts (3.9 KB) ]=======================================
// src/pages/api/store/dashboard.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyStore } from "@/utils/verifyStore";

type AnalyticsData = {
  totalOrders: number;
  totalReviews: number;
  positiveRate: number; // %
  ordersChart: { month: string; count: number }[];
  reviewsChart: { month: string; positive: number; negative: number }[];
};

function toTs(v: unknown): number {
  if (typeof v === "number") return v;
  if (typeof v === "string") {
    const n = Number(v);
    return Number.isFinite(n) ? n : Date.parse(v);
  }
  return 0;
}

function monthKey(ts: number): string {
  const d = new Date(ts);
  return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, "0")}`;
}

function lastNMonthsKeys(n: number): string[] {
  const out: string[] = [];
  const d = new Date();
  d.setDate(1);
  for (let i = 0; i < n; i++) {
    out.unshift(`${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, "0")}`);
    d.setMonth(d.getMonth() - 1);
  }
  return out;
}

// type guard للتخلّص من any
function hasStatus(e: unknown): e is { status: number } {
  if (typeof e !== "object" || e === null) return false;
  const v = (e as Record<string, unknown>).status;
  return typeof v === "number";
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "GET") return res.status(405).json({ message: "Method not allowed" });

    const { uid } = await verifyStore(req);
    const db = dbAdmin();

    const [ordersSnap, reviewsSnap] = await Promise.all([
      db.collection("orders").where("storeId", "==", uid).get(),
      db.collection("reviews").where("storeUid", "==", uid).get(),
    ]);

    const totalOrders = ordersSnap.size;
    const totalReviews = reviewsSnap.size;

    let pos = 0; // ⬅︎ شيلنا neg لأنه غير مستخدم
    const months = lastNMonthsKeys(12);
    const ordersBuckets = new Map<string, number>(months.map((m) => [m, 0]));
    const reviewsPosBuckets = new Map<string, number>(months.map((m) => [m, 0]));
    const reviewsNegBuckets = new Map<string, number>(months.map((m) => [m, 0]));

    ordersSnap.docs.forEach((d) => {
      const data = d.data() as Record<string, unknown>;
      const ts = toTs(data.createdAt) || toTs(data.created);
      const k = monthKey(ts || Date.now());
      if (ordersBuckets.has(k)) ordersBuckets.set(k, (ordersBuckets.get(k) || 0) + 1);
    });

    reviewsSnap.docs.forEach((d) => {
      const data = d.data() as Record<string, unknown>;
      const stars = typeof data.stars === "number" ? data.stars : Number(data.stars || 0);
      const ts = toTs(data.createdAt) || toTs(data.created);
      const k = monthKey(ts || Date.now());

      if (stars >= 4) pos += 1;

      if (reviewsPosBuckets.has(k)) {
        if (stars >= 4) reviewsPosBuckets.set(k, (reviewsPosBuckets.get(k) || 0) + 1);
      }
      if (reviewsNegBuckets.has(k)) {
        if (stars > 0 && stars <= 2) reviewsNegBuckets.set(k, (reviewsNegBuckets.get(k) || 0) + 1);
      }
    });

    const positiveRate = totalReviews ? Math.round((pos / totalReviews) * 100) : 0;

    const ordersChart = months.map((m) => ({ month: m, count: ordersBuckets.get(m) || 0 }));
    const reviewsChart = months.map((m) => ({
      month: m,
      positive: reviewsPosBuckets.get(m) || 0,
      negative: reviewsNegBuckets.get(m) || 0,
    }));

    const payload: AnalyticsData = { totalOrders, totalReviews, positiveRate, ordersChart, reviewsChart };
    return res.status(200).json(payload);
  } catch (e: unknown) {
    const status = hasStatus(e) ? e.status : 500;
    const message = e instanceof Error ? e.message : String(e);

    console.error("DASHBOARD_ERROR:", message); // شيلنا eslint-disable لأنه غير مطلوب
    return res.status(status).json({ error: "DASHBOARD_FAILED", message });
  }
}
====[ END FILE: src/pages/api/store/dashboard.ts ]==================================================

====[ START FILE: src/pages/api/store/info.ts (2.6 KB) ]============================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { authAdmin } from "@/lib/firebaseAdmin";
//eslint-disable-next-line @typescript-eslint/no-explicit-any
type Ok = { ok: true; store: any };
type Err = { ok: false; error: string };

async function verify(req: NextApiRequest) {
  const h = req.headers.authorization || "";
  const m = h.match(/^Bearer (.+)$/i);
  const token = m?.[1];
  if (!token) return null;
  try {
    const dec = await authAdmin().verifyIdToken(token);
    return { uid: dec.uid as string, email: (dec.email ?? null) as string | null };
  } catch { return null; }
}

export default async function handler(req: NextApiRequest, res: NextApiResponse<Ok | Err>) {
  try {
    const db = dbAdmin();
    const uidParam = typeof req.query.uid === "string" ? req.query.uid : undefined;

    // 1) أولوية: uid في الكويري
    let idToRead: string | null = uidParam || null;

    // 2) وإلا استخدم uid الخاص بالمستخدم (لو الهيدر موجود)
    if (!idToRead) {
      const user = await verify(req);
      if (!user) return res.status(401).json({ ok: false, error: "UNAUTHENTICATED" });
      idToRead = user.uid;
    }

    if (!idToRead) return res.status(400).json({ ok: false, error: "Missing uid" });

    // اقرأ المستند
    let snap = await db.collection("stores").doc(idToRead).get();
    if (!snap.exists) return res.status(404).json({ ok: false, error: "Store not found" });

    let data = snap.data() || {};

    // لو ده alias عنده storeUid → ارجع للمستند الحقيقي
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    const alias = (data as any).storeUid as string | undefined;
    if (alias) {
      const real = await db.collection("stores").doc(alias).get();
      if (real.exists) {
        data = { ...(real.data() || {}), aliasOf: idToRead };
        snap = real;
      }
    }
  //eslint-disable-next-line @typescript-eslint/no-explicit-any
    const s = (data as any).salla || {};
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    const name = s.storeName ?? (data as any).storeName ?? null;

    return res.status(200).json({
      ok: true,
      store: {
        storeUid: snap.id,
        name,
        salla: s,
        domain: s.domain ?? null,
        //eslint-disable-next-line @typescript-eslint/no-explicit-any
        platform: (data as any).platform ?? "salla",
      },
    });
  } catch (e) {
    return res.status(500).json({ ok: false, error: e instanceof Error ? e.message : String(e) });
  }
}
====[ END FILE: src/pages/api/store/info.ts ]=======================================================

====[ START FILE: src/pages/api/store/settings.ts (1.7 KB) ]========================================
import type { NextApiRequest, NextApiResponse } from "next";
import { doc, getDoc, setDoc } from "firebase/firestore";
import { db } from "@/lib/firebase";
import { verifyStore, type AuthedRequest } from "@/utils/verifyStore";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    await verifyStore(req);
  } catch (e) {
    const err = e as Error & { status?: number };
    return res.status(err.status ?? 401).json({ message: err.message || "Unauthorized" });
  }

  const { storeId } = req as AuthedRequest;
  if (!storeId) return res.status(400).json({ message: "Missing storeId" });

  const storeRef = doc(db, "stores", storeId);

  try {
    if (req.method === "GET") {
      const snapshot = await getDoc(storeRef);
      if (!snapshot.exists()) return res.status(200).json({ settings: {} });

      const data = snapshot.data();
      return res.status(200).json({
        settings: data?.settings || {},
      });
    }

    if (req.method === "POST") {
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      const body = (req.body ?? {}) as any;
      // نتوقع { settings: { salla: { reviewTemplate: "..." } } }
      if (typeof body !== "object") return res.status(400).json({ message: "Invalid payload" });

      await setDoc(
        storeRef,
        { settings: body.settings ?? {} },
        { merge: true }
      );
      return res.status(200).json({ ok: true });
    }

    res.setHeader("Allow", ["GET", "POST"]);
    return res.status(405).json({ message: "Method not allowed" });
  } catch (e) {
    console.error("Settings Error:", e);
    return res.status(500).json({ message: "Internal Server Error" });
  }
}
====[ END FILE: src/pages/api/store/settings.ts ]===================================================

====[ START FILE: src/pages/api/store/update-info.ts (986 B) ]======================================
// src/pages/api/store/update-info.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { db } from '@/lib/firebase';
import { getAuthFromRequest } from '@/utils/getAuthFromRequest';
import { doc, updateDoc } from 'firebase/firestore';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method Not Allowed' });
  }

  try {
    const { uid } = await getAuthFromRequest(req);
    const { name, email, phone, description, domain, logoUrl } = req.body;

    await updateDoc(doc(db, 'stores', uid), {
      name,
      email,
      phone,
      description,
      domain,
      logoUrl,
    });

    return res.status(200).json({ message: 'Store info updated' });
  } catch (error) {
    console.error('Update store info error:', error);
    return res.status(401).json({ message: (error as Error).message || 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/store/update-info.ts ]================================================

====[ START FILE: src/pages/api/support-ticket.ts (1.3 KB) ]========================================
// src/pages/api/support-ticket.ts
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") {
    return res.status(405).json({ message: "Method Not Allowed" });
  }

  const { name, email, message } = (req.body ?? {}) as {
    name?: unknown;
    email?: unknown;
    message?: unknown;
  };

  // تحققات بسيطة + تنظيف
  const n = typeof name === "string" ? name.trim() : "";
  const e = typeof email === "string" ? email.trim() : "";
  const m = typeof message === "string" ? message.trim() : "";

  if (!n || !e || !m) {
    return res.status(400).json({ message: "Missing fields" });
  }

  try {
    const db = dbAdmin(); // يهيّئ Firebase Admin داخليًا لو لسه

    await db.collection("support_tickets").add({
      name: n,
      email: e,
      message: m,
      createdAt: Date.now(), // بديل بسيط عن admin.firestore.Timestamp.now()
    });

    return res.status(200).json({ message: "Ticket submitted successfully" });
  } catch (error) {
    console.error("Error saving ticket:", error);
    return res.status(500).json({ message: "Something went wrong" });
  }
}
====[ END FILE: src/pages/api/support-ticket.ts ]===================================================

====[ START FILE: src/pages/api/test/sms.ts (3.0 KB) ]==============================================
import type { NextApiRequest, NextApiResponse } from "next";
import { buildInviteSMS, sendSMSViaOursms } from "@/server/messaging/send-sms"; // لو عندك الموديولات دي

type AnyBody = Record<string, unknown> | null | undefined;

function parseBody(req: NextApiRequest): AnyBody {
  try {
    if (typeof req.body === "string") return JSON.parse(req.body || "{}");
    if (req.body && typeof req.body === "object") return req.body as Record<string, unknown>;
  } catch {}
  return {};
}

function grabStrings(x: unknown): string[] {
  if (typeof x === "string" && x.trim()) return [x.trim()];
  if (Array.isArray(x)) return x.map(String).map(s => s.trim()).filter(Boolean);
  return [];
}

function normalizeRecipients(req: NextApiRequest): string[] {
  const b = parseBody(req) || {};
  const q = req.query || {};
  const candidates = [
// eslint-disable-next-line @typescript-eslint/no-explicit-any
    (b as any).to, (b as any).dest, (b as any).dests,
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    (b as any).phone, (b as any).phones, (b as any).msisdn,
    q.to, q.dest, q.dests, q.phone, q.phones, q.msisdn
  ];
  const out = new Set<string>();
  for (const c of candidates) grabStrings(c).forEach(v => out.add(v));
  return Array.from(out);
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") {
    return res.status(405).json({ ok: false, error: "method_not_allowed" });
  }

  try {
    const body = parseBody(req) || {};
    const recipients = normalizeRecipients(req);

    if (recipients.length === 0) {
      return res.status(400).json({
        ok: false,
        error: "missing_to",
        hint: "أرسل الحقل to كنص أو مصفوفة. مقبولة أيضاً: dest, dests, phone, phones, msisdn. تأكد من Content-Type: application/json"
      });
    }
// eslint-disable-next-line @typescript-eslint/no-explicit-any
    const storeName = String((body as any).store ?? "") || undefined;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const link = String((body as any).link ?? "") || "https://example.com/review";
    const text: string =
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
      (typeof (body as any).text === "string" && (body as any).text.trim())
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
        ? String((body as any).text)
        : buildInviteSMS(storeName, link); // رسالتك الموحّدة

    const result = await sendSMSViaOursms({
      to: recipients,               // يقبل مصفوفة
      text,
      msgClass: "transactional",
      priority: 0,
      requestDlr: false,
    });

    return res.status(200).json(result);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    return res.status(500).json({
      ok: false,
      error: "sms_failed",
      message: e?.message || String(e),
    });
  }
}
====[ END FILE: src/pages/api/test/sms.ts ]=========================================================

====[ START FILE: src/pages/api/zid/callback.ts (3.0 KB) ]==========================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { consumeZidState } from '@/server/zid/state';
import { dbAdmin } from '@/lib/firebaseAdmin';

const TOKEN_URL = process.env.ZID_TOKEN_URL || 'https://oauth.zid.sa/oauth/token';

type ZidTokenResponse = {
  access_token?: string;
  refresh_token?: string;
  token_type?: string;
  scope?: string;
  expires_in?: number; // seconds
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    const { code, state } = req.query;
    if (!code || !state || typeof code !== 'string' || typeof state !== 'string') {
      return res.status(400).send('Missing code/state');
    }

    // تحقّق من state
    const check = await consumeZidState(state);
    if (!check.ok) {
      return res.redirect('/dashboard?zid_error=invalid_state');
    }
    const uid = check.uid;

    // بدّل الكود بتوكن
    const clientId = process.env.ZID_CLIENT_ID!;
    const clientSecret = process.env.ZID_CLIENT_SECRET!;
    const redirectUri = process.env.ZID_REDIRECT_URI!;
    if (!clientId || !clientSecret || !redirectUri) {
      return res.redirect('/dashboard?zid_error=server_config');
    }

    let tokenJson: ZidTokenResponse;
    try {
      const r = await fetch(TOKEN_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
          grant_type: 'authorization_code',
          code,
          client_id: clientId,
          client_secret: clientSecret,
          redirect_uri: redirectUri,
        }),
      });

      const raw = (await r.json()) as unknown;
      tokenJson = raw as ZidTokenResponse;

      if (!r.ok) {
        console.error('ZID token exchange failed:', tokenJson);
        return res.redirect('/dashboard?zid_error=token_exchange');
      }
    } catch (err) {
      console.error('ZID token request error:', err);
      return res.redirect('/dashboard?zid_error=token_request');
    }

    const db = dbAdmin();
    const expiresAt =
      typeof tokenJson.expires_in === 'number'
        ? Date.now() + tokenJson.expires_in * 1000
        : Date.now() + 3600 * 1000;

    // خزّن التوكنات
    await db.collection('zid_tokens').doc(uid).set(
      {
        access_token: tokenJson.access_token ?? null,
        refresh_token: tokenJson.refresh_token ?? null,
        token_type: tokenJson.token_type ?? 'Bearer',
        scope: tokenJson.scope ?? null,
        expires_at: expiresAt,
        updated_at: Date.now(),
      },
      { merge: true }
    );

    // علّم المتجر "متصل"
    await db.collection('stores').doc(uid).set(
      {
        zid: { connected: true, updatedAt: Date.now() },
      },
      { merge: true }
    );

    return res.redirect('/dashboard?zid=connected');
  } catch (err) {
    console.error('zid/callback error', err);
    return res.redirect('/dashboard?zid_error=unknown');
  }
}
====[ END FILE: src/pages/api/zid/callback.ts ]=====================================================

====[ START FILE: src/pages/api/zid/disconnect.ts (835 B) ]=========================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { requireUser } from '@/server/auth/requireUser';
import { dbAdmin } from '@/lib/firebaseAdmin';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') return res.status(405).json({ message: 'Method not allowed' });

  try {
    const { uid } = await requireUser(req);
    const db = dbAdmin();

    await db.collection('zid_tokens').doc(uid).delete().catch(() => null);
    await db.collection('stores').doc(uid).set(
      { zid: { connected: false, updatedAt: Date.now() } },
      { merge: true }
    );

    return res.status(200).json({ ok: true });
  } catch (e) {
    console.error('zid/disconnect error', e);
    return res.status(401).json({ message: 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/zid/disconnect.ts ]===================================================

====[ START FILE: src/pages/api/zid/refresh.ts (2.7 KB) ]===========================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { dbAdmin } from '@/lib/firebaseAdmin';
import { requireUser } from '@/server/auth/requireUser';

const TOKEN_URL = process.env.ZID_TOKEN_URL || 'https://oauth.zid.sa/oauth/token';
const CRON_SECRET = process.env.CRON_SECRET;

async function refreshOne(uid: string) {
  const db = dbAdmin();
  const ref = db.collection('zid_tokens').doc(uid);
  const snap = await ref.get();
  if (!snap.exists) throw new Error('no_token');

  //eslint-disable-next-line @typescript-eslint/no-explicit-any
  const data = snap.data() as any;
  const refresh_token = data.refresh_token;
  if (!refresh_token) throw new Error('no_refresh');

  const clientId = process.env.ZID_CLIENT_ID!;
  const clientSecret = process.env.ZID_CLIENT_SECRET!;
  if (!clientId || !clientSecret) throw new Error('config');

  const r = await fetch(TOKEN_URL, {
    method: 'POST',
    headers: { 'Content-Type':'application/x-www-form-urlencoded' },
    body: new URLSearchParams({
      grant_type: 'refresh_token',
      refresh_token,
      client_id: clientId,
      client_secret: clientSecret,
    }),
  });

  const j = await r.json();
  if (!r.ok) {
    throw new Error(`refresh_failed:${j?.error || 'unknown'}`);
  }

  const expiresAt =
    typeof j.expires_in === 'number'
      ? Date.now() + j.expires_in * 1000
      : Date.now() + 3600 * 1000;

  await ref.set({
    access_token: j.access_token,
    refresh_token: j.refresh_token || refresh_token,
    token_type: j.token_type || 'Bearer',
    scope: j.scope || data.scope || null,
    expires_at: expiresAt,
    updated_at: Date.now(),
  }, { merge: true });

  return { ok: true, expires_at: expiresAt };
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    // وضع1: مستخدم مسجّل يطلب تجديد حسابه
    if (req.method === 'POST' && req.headers.authorization) {
      const { uid } = await requireUser(req);
      const result = await refreshOne(uid);
      return res.status(200).json(result);
    }

    // وضع2: كرون للسيرفر لتجديد مستخدم معيّن بالـ uid
    if (req.method === 'POST' && req.headers['x-cron-secret'] === CRON_SECRET) {
      const { uid } = req.body || {};
      if (!uid || typeof uid !== 'string') {
        return res.status(400).json({ message: 'uid required' });
      }
      const result = await refreshOne(uid);
      return res.status(200).json(result);
    }

    return res.status(405).json({ message: 'Method not allowed' });
  } catch (e) {
    console.error('zid/refresh error', e);
    return res.status(500).json({ message: 'refresh failed' });
  }
}
====[ END FILE: src/pages/api/zid/refresh.ts ]======================================================

====[ START FILE: src/pages/api/zid/start.ts (1.6 KB) ]=============================================
import type { NextApiRequest, NextApiResponse } from 'next';
import { requireUser } from '@/server/auth/requireUser';
import { createZidState } from '@/server/zid/state';

const AUTH_URL = process.env.ZID_AUTH_URL || 'https://oauth.zid.sa/oauth/authorize';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') return res.status(405).json({ message: 'Method not allowed' });

  try {
    const { uid } = await requireUser(req);
    const state = await createZidState(uid);

    const clientId = process.env.ZID_CLIENT_ID!;
    const redirectUri = process.env.ZID_REDIRECT_URI!;
    if (!clientId || !redirectUri) {
      return res.status(500).json({ message: 'ZID_CLIENT_ID/ZID_REDIRECT_URI are required' });
    }

    // سكوبات اختيارية
    const scopes: string[] = [];
    if (process.env.ENABLE_ZID_SCOPE_EMBEDDED_APPS === 'true') scopes.push('embedded_apps');
    if (process.env.ENABLE_ZID_SCOPE_PRODUCTS === 'true') scopes.push('products');
    // أضف سكوبات أخرى حسب احتياجك…

    const authorizeUrl = new URL(AUTH_URL);
    authorizeUrl.searchParams.set('response_type', 'code');
    authorizeUrl.searchParams.set('client_id', clientId);
    authorizeUrl.searchParams.set('redirect_uri', redirectUri);
    if (scopes.length) authorizeUrl.searchParams.set('scope', scopes.join(' '));
    authorizeUrl.searchParams.set('state', state);

    return res.status(200).json({ authorizeUrl: authorizeUrl.toString() });
  } catch (e) {
    console.error('zid/start error', e);
    return res.status(401).json({ message: 'Unauthorized' });
  }
}
====[ END FILE: src/pages/api/zid/start.ts ]========================================================

====[ START FILE: src/pages/api/zid/status.ts (1.5 KB) ]============================================
import type { NextApiRequest, NextApiResponse } from "next";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { verifyStore, type AuthedRequest } from "@/utils/verifyStore";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== "GET") return res.status(405).json({ ok: false, error: "Method Not Allowed" });

    try {
      await verifyStore(req);
    } catch (e) {
      const err = e as Error & { status?: number };
      return res.status(err.status ?? 401).json({ ok: false, error: err.message || "Unauthorized" });
    }

    const { storeId } = req as AuthedRequest;
    if (!storeId) return res.status(400).json({ ok: false, error: "Missing storeId" });

    const db = dbAdmin();
    const snap = await db
      .collection("stores")
      .where("platform", "==", "zid")
      .where("ownerUid", "==", storeId)
      .limit(1)
      .get();

    if (snap.empty) return res.status(200).json({ ok: true, connected: false });
//eslint-disable-next-line @typescript-eslint/no-explicit-any
    const data = snap.docs[0].data() as any;
    const zid = data?.zid || {};

    return res.status(200).json({
      ok: true,
      connected: !!zid.connected,
      storeName: zid.storeName || null,
      merchantId: zid.merchantId || null,
      updatedAt: data?.updatedAt || null,
    });
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    return res.status(500).json({ ok: false, error: e?.message || String(e) });
  }
}
====[ END FILE: src/pages/api/zid/status.ts ]=======================================================

====[ START FILE: src/pages/api/zid/webhook.ts (7.5 KB) ]===========================================
// src/pages/api/zid/webhook.ts
import type { NextApiRequest, NextApiResponse } from "next";
import crypto from "crypto";
import { dbAdmin } from "@/lib/firebaseAdmin";
import { createShortLink } from "@/server/short-links"; // ✅ صححنا المسار
import {sendEmailDmail  as sendEmail } from "@/server/messaging/email-dmail"; // ✅ صححنا المسار
import { sendSms } from "@/server/messaging/send-sms"; // ✅ شيلنا واتساب

export const config = { api: { bodyParser: false } };

type UnknownRecord = Record<string, unknown>;
interface ZidCustomer { name?: string; email?: string; mobile?: string }
interface ZidItem { product_id?: string|number; id?: string|number }
interface ZidOrder {
  id?: string|number; number?: string|number; status?: string;
  customer?: ZidCustomer;
  store?: { id?: string|number; name?: string } | null;
  items?: ZidItem[];
}
interface ZidWebhookBody { event?: string; data?: ZidOrder | UnknownRecord; }

const DONE = new Set(["paid", "delivered", "completed", "complete"]);
const CANCEL = new Set(["canceled", "cancelled", "refunded", "returned"]);
const lc = (x: unknown) => String(x ?? "").toLowerCase();

function readRawBody(req: NextApiRequest): Promise<Buffer> {
  return new Promise((resolve, reject) => {
    const chunks: Buffer[] = [];
    req.on("data", (c) => chunks.push(Buffer.isBuffer(c) ? c : Buffer.from(c)));
    req.on("end", () => resolve(Buffer.concat(chunks)));
    req.on("error", reject);
  });
}

function validSignature(raw: Buffer, secret: string, given?: string) {
  if (!secret) return true;
  if (!given) return false;
  const mac = crypto.createHmac("sha256", secret).update(raw).digest("hex");
  return crypto.timingSafeEqual(Buffer.from(mac), Buffer.from(given));
}

// ✅ سمّيناه storeUid لتوحيد التسمية مع باقي الكود
function pickStoreUidFromZid(o: UnknownRecord): string | undefined {
  const store = o["store"] as UnknownRecord | undefined;
  const sid = store?.["id"];
  return sid !== undefined ? String(sid) : undefined;
}
function pickProductIdsFromZid(o: UnknownRecord): string[] {
  const items = (o["items"] as UnknownRecord[] | undefined) ?? [];
  const ids: string[] = [];
  for (const it of items) {
    const pid = (it?.["product_id"] ?? it?.["id"]);
    if (pid !== undefined) ids.push(String(pid));
  }
  return Array.from(new Set(ids)).slice(0, 20);
}

// ===== Extra guards =====
function pickName(obj: unknown): string | undefined {
  if (obj && typeof obj === "object" && "name" in obj) {
    const n = (obj as { name?: unknown }).name;
    return typeof n === "string" ? n : undefined;
  }
  return undefined;
}
function getStoreName(ev: UnknownRecord): string | undefined {
  return pickName(ev["store"]);
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).json({ error: "Method Not Allowed" });

  const raw = await readRawBody(req);
  const db = dbAdmin();

  // توقيع اختياري
  const secret = process.env.ZID_WEBHOOK_SECRET ?? "";
  const sig = (req.headers["x-zid-signature"] as string) ?? "";
  if (!validSignature(raw, secret, sig)) return res.status(401).json({ error: "invalid_signature" });

  const body = JSON.parse(raw.toString("utf8") || "{}") as ZidWebhookBody;
  const event = String(body.event || "");
  const data = (body.data ?? {}) as ZidOrder;

  // Idempotency
  const idemKey = crypto.createHash("sha256").update((sig || "") + "|").update(raw).digest("hex");
  const idemRef = db.collection("webhooks_zid").doc(idemKey);
  if ((await idemRef.get()).exists) return res.status(200).json({ ok: true, deduped: true });
  await idemRef.set({ at: Date.now(), event });

  const orderId = String(data.id ?? "");
  const status = lc(data.status ?? "");

  // Snapshot + storeUid
  const eventRaw = (body.data ?? {}) as UnknownRecord;
  const storeUid = pickStoreUidFromZid(eventRaw) || null;

  await db.collection("orders").doc(orderId).set({
    id: orderId,
    number: data.number ?? null,
    status,
    customer: {
      name: data.customer?.name ?? null,
      email: data.customer?.email ?? null,
      mobile: data.customer?.mobile ?? null,
    },
    storeUid,            // ✅ توحيد التسمية
    platform: "zid",
    updatedAt: Date.now(),
  }, { merge: true });

  // إرسال دعوة عند الإنجاز — مع تمرير storeUid/productIds
  if (DONE.has(status)) {
    const invitesSnap = await db.collection("review_invites").where("orderId", "==", orderId).limit(1).get();
    if (invitesSnap.empty) {
      const productIds = pickProductIdsFromZid(eventRaw);
      const primaryProductId = productIds[0] || null;

      const tokenId = crypto.randomBytes(10).toString("hex");
      const base =
        process.env.NEXT_PUBLIC_APP_URL ||
        process.env.APP_BASE_URL ||
        process.env.NEXT_PUBLIC_BASE_URL ||
        "";
      if (!base) throw new Error("BASE_URL not configured");

      const reviewUrl = `${base}/review/${tokenId}`;
      const publicUrl = await createShortLink(reviewUrl); // ✅ الدالة ترجع رابط /r/<id> جاهز

      await db.collection("review_tokens").doc(tokenId).set({
        id: tokenId,
        platform: "zid",
        orderId,
        storeUid,                 // ✅
        productIds,
        productId: primaryProductId,
        createdAt: Date.now(),
        usedAt: null,
        publicUrl,
        targetUrl: reviewUrl,
        channel: "multi",
      });

      const buyer = data.customer ?? {};
      await db.collection("review_invites").add({
        tokenId, orderId, platform: "zid",
        storeUid,                 // ✅
        productIds,
        productId: primaryProductId,
        customer: { name: buyer.name ?? null, email: buyer.email ?? null, mobile: buyer.mobile ?? null },
        sentAt: Date.now(), deliveredAt: null, clicks: 0,
        publicUrl,
      });

      const name = buyer.name || "عميلنا العزيز";
      const storeName = getStoreName(eventRaw) ?? "متجرك";
      const smsText = `مرحباً ${name}، قيم تجربتك من ${storeName}:: ${publicUrl} وساهم في إسعاد يتيم!`;
      const emailHtml = `
        <div dir="rtl" style="font-family:Tahoma,Arial,sans-serif;line-height:1.7">
          <p>مرحباً ${name}،</p>
          <p>قيم تجربتك من <strong>${storeName}</strong> وساهم في إسعاد يتيم!</p>
          <p><a href="${publicUrl}" style="background:#16a34a;color:#fff;padding:10px 18px;border-radius:6px;text-decoration:none">اضغط للتقييم الآن</a></p>
          <p style="color:#64748b">شكراً لك — فريق ثقة</p>
        </div>
      `;

      const tasks: Array<Promise<unknown>> = [];
      if (buyer.mobile) {
        const mobile = String(buyer.mobile).replace(/\s+/g, "");
        tasks.push(sendSms(mobile, smsText)); // ✅ واتساب اتشال
      }
      if (buyer.email) {
        tasks.push(sendEmail(buyer.email, "قيّم تجربتك معنا ✨", emailHtml));
      }
      await Promise.allSettled(tasks);
    }
  }

  if (CANCEL.has(status)) {
    const q = await db.collection("review_tokens").where("orderId","==",orderId).get();
    const batch = db.batch();
    q.docs.forEach(d => batch.update(d.ref, { voidedAt: Date.now(), voidReason: `status_${status}` }));
    await batch.commit();
  }

  return res.status(200).json({ ok: true });
}
====[ END FILE: src/pages/api/zid/webhook.ts ]======================================================

====[ START FILE: src/pages/connect/index.tsx (986 B) ]=============================================
import Head from "next/head";
import Link from "next/link";

export default function ConnectIndex() {
  return (
    <>
      <Head><title>ربط متجرك | Theqah</title></Head>
      <div dir="rtl" className="min-h-screen bg-gray-50">
        <div className="max-w-xl mx-auto p-6">
          <h1 className="text-2xl font-bold mb-4">اختَر المنصّة لبدء الربط</h1>
          <p className="text-gray-600 mb-6">
            اربط متجرك لإرسال روابط المراجعات تلقائيًا بعد نجاح الطلب.
          </p>
          <div className="grid gap-3">
            <Link href="/connect/zid" className="rounded-xl bg-white border p-4 hover:bg-gray-50">
              زد (Zid)
            </Link>
            <Link href="/connect/salla" className="rounded-xl bg-white border p-4 hover:bg-gray-50">
              سلة (Salla)
            </Link>
          </div>
        </div>
      </div>
    </>
  );
}
====[ END FILE: src/pages/connect/index.tsx ]=======================================================

====[ START FILE: src/pages/connect/salla.tsx (4.0 KB) ]============================================
// src/pages/connect/salla.tsx
'use client';

import { useEffect, useRef, useState } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import { getAuth } from 'firebase/auth';
import { app } from '@/lib/firebase';

export default function ConnectSalla() {
  const router = useRouter();
  const [error, setError] = useState<string>('');
  const [starting, setStarting] = useState<boolean>(true);
  const cancelledRef = useRef(false);

  useEffect(() => {
    cancelledRef.current = false;
    return () => {
      cancelledRef.current = true;
    };
  }, []);

  useEffect(() => {
    const start = async () => {
      try {
        setStarting(true);
        setError('');

        const auth = getAuth(app);
        const user = auth.currentUser;

        if (!user) {
          throw new Error('غير مصرح: الرجاء تسجيل الدخول أولاً.');
        }

        // خُد توكن حديث
        const idToken = await user.getIdToken(true);

        const params = new URLSearchParams();
        // مسار الرجوع بعد إنهاء التدفق في الكولباك
        params.set('return', '/admin');

        // استخدم رابط مطلق لو لزم الأمر
        const url =
          typeof window !== 'undefined'
            ? new URL(`/api/salla/connect?${params.toString()}`, window.location.origin).toString()
            : `/api/salla/connect?${params.toString()}`;

        const res = await fetch(url, {
          headers: { Authorization: `Bearer ${idToken}` },
        });

        if (!res.ok) {
          //eslint-disable-next-line @typescript-eslint/no-explicit-any
          const j = await res.json().catch(() => ({} as any));
          throw new Error(j?.message || `HTTP ${res.status}`);
        }

        const j = (await res.json()) as { url?: string };
        if (!j?.url) throw new Error('Missing authorize URL');

        // التحويل إلى صفحة موافقة سلة
        window.location.assign(j.url);
      } catch (e) {
        if (cancelledRef.current) return;
        setError(e instanceof Error ? e.message : String(e));
        setStarting(false);
      }
    };

    // ابدأ فوراً (بدون الاعتماد على useAuth)
    start();
  }, []);

  return (
    <div className="min-h-[70vh] flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-purple-50 p-8">
      <div className="bg-white rounded-3xl border border-gray-200/60 p-10 shadow-2xl w-full max-w-lg text-center">
        <div className="w-20 h-20 mx-auto mb-6 rounded-full bg-gradient-to-br from-emerald-600 to-emerald-700 flex items-center justify-center text-white text-3xl">
          {starting && !error ? '⏳' : error ? '⚠️' : '✅'}
        </div>

        {starting && !error && (
          <>
            <h1 className="text-2xl font-extrabold text-gray-900 mb-2">بدء ربط سلة</h1>
            <p className="text-gray-600">جارٍ تحويلك إلى صفحة التفويض في سلة لإتمام الربط الآمن…</p>
          </>
        )}

        {error && (
          <>
            <h1 className="text-2xl font-extrabold text-gray-900 mb-3">تعذّر بدء الربط</h1>
            <p className="text-rose-600 font-semibold mb-6">{error}</p>
            <div className="flex items-center justify-center gap-3">
              <button
                onClick={() => router.reload()}
                className="px-6 py-3 rounded-xl bg-gradient-to-r from-emerald-600 to-emerald-700 text-white font-bold shadow-lg hover:shadow-xl"
              >
                إعادة المحاولة
              </button>

              <Link
                href="/connect"
                className="px-6 py-3 rounded-xl border border-gray-300 text-gray-700 font-bold hover:bg-gray-50"
              >
                العودة
              </Link>
            </div>
          </>
        )}
      </div>
    </div>
  );
}
====[ END FILE: src/pages/connect/salla.tsx ]=======================================================

====[ START FILE: src/pages/connect/zid.tsx (999 B) ]===============================================
//src/pages/connect/zid.tsx
'use client';

import { useEffect } from 'react';
import { getAuth } from 'firebase/auth';
import { app } from '@/lib/firebase';

export default function ConnectZid() {
  useEffect(() => {
    (async () => {
      const auth = getAuth(app);
      const user = auth.currentUser || (await new Promise(resolve => {
        const unsub = auth.onAuthStateChanged(u => { resolve(u); unsub(); });
      }));
      if (!user) { window.location.href = '/login?next=/connect/zid'; return; }
      const idToken = await user.getIdToken();

      const r = await fetch('/api/zid/start', {
        method: 'POST',
        headers: { Authorization: `Bearer ${idToken}` }
      });
      const j = await r.json();
      if (r.ok && j.authorizeUrl) window.location.href = j.authorizeUrl;
      else window.location.href = '/dashboard?zid_start_error=1';
    })();
  }, []);

  return <main style={{padding:24}}>يتم تحويلك لربط زد…</main>;
}
====[ END FILE: src/pages/connect/zid.tsx ]=========================================================

====[ START FILE: src/pages/dashboard.tsx (6.2 KB) ]================================================
// src/pages/dashboard.tsx
'use client';

import { useEffect, useMemo, useState } from 'react';
import DashboardAnalytics from '@/components/dashboard/Analytics';
import OrdersTab from '@/components/dashboard/OrdersTab';
import ReviewsTab from '@/components/dashboard/Reviews';
import SettingsTab from '@/components/dashboard/StoreSettings';
import SupportTab from '@/components/dashboard/Support';
import { getAuth, onAuthStateChanged } from 'firebase/auth';
import { app } from '@/lib/firebase';
import axios from '@/lib/axiosInstance';

const tabs = ['الإحصائيات', 'الطلبات', 'التقييمات', 'الإعدادات', 'المساعدة'] as const;
type Tab = (typeof tabs)[number];

function getCookie(name: string): string | null {
  if (typeof document === 'undefined') return null;
  const m = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + '=([^;]*)'));
  return m ? decodeURIComponent(m[1]) : null;
}

export default function DashboardPage() {
  const [activeTab, setActiveTab] = useState<Tab>(() => {
    if (typeof window !== 'undefined') {
      return (localStorage.getItem('dash_active_tab') as Tab) || 'الإحصائيات';
    }
    return 'الإحصائيات';
  });

  const [authLoading, setAuthLoading] = useState(true);
  const [userPresent, setUserPresent] = useState(false);

  const [storeUid, setStoreUid] = useState<string | undefined>(undefined);
  const [storeName, setStoreName] = useState<string | undefined>(undefined);
  const [storeLoading, setStoreLoading] = useState(true);

  useEffect(() => { localStorage.setItem('dash_active_tab', activeTab); }, [activeTab]);

  // مراقبة تسجيل الدخول (لو عندك صلاحيات إضافية بعد اللوجين)
  useEffect(() => {
    const auth = getAuth(app);
    const unsub = onAuthStateChanged(auth, (u) => {
      setUserPresent(!!u);
      setAuthLoading(false);
    });
    return () => unsub();
  }, []);

  // حدّد storeUid من query أو cookie
  useEffect(() => {
    const u = new URL(window.location.href);
    const qUid = u.searchParams.get('uid');
    const cUid = getCookie('salla_store_uid');
    setStoreUid(qUid || cUid || undefined);
  }, []);

  // جلب اسم المتجر (اختياري — يحاول عدة مسارات)
  useEffect(() => {
    const run = async () => {
      setStoreLoading(true);
      try {
        // حاول من الـ status أولاً (لأن عندنا uid/كوكي)
        let name: string | undefined;
        const statusUrl = storeUid ? `/api/salla/status?uid=${encodeURIComponent(storeUid)}` : '/api/salla/status';
        try {
          const st = await axios.get(statusUrl);
          name =
            st.data?.storeName ??
            st.data?.salla?.storeName ??
            st.data?.integration?.salla?.storeName ??
            undefined;
        } catch { /* ignore */ }

        // fallback: APIs محلية تتطلّب توكن (لو عندك)
        if (!name) {
          const auth = getAuth(app);
          const user = auth.currentUser;
          if (user) {
            const idToken = await user.getIdToken(true);
            const tryProfileEndpoints = ['/api/store/profile', '/api/store/info', '/api/store'];
            for (const ep of tryProfileEndpoints) {
              try {
                const res = await axios.get(ep, { headers: { Authorization: `Bearer ${idToken}` } });
                name =
                  res.data?.storeName ??
                  res.data?.name ??
                  res.data?.store?.name ??
                  res.data?.profile?.storeName;
                if (name) break;
              } catch { /* ignore */ }
            }
          }
        }

        setStoreName(name);
      } finally {
        setStoreLoading(false);
      }
    };
    run();
  }, [storeUid]);

  const headerRight = useMemo(() => {
    if (storeLoading) {
      return <span className="text-gray-400 text-sm">جارٍ تحميل بيانات المتجر…</span>;
    }
    if (storeName) {
      return (
        <span className="px-3 py-1 rounded-lg bg-emerald-50 text-emerald-700 border border-emerald-200">
          المتجر: {storeName}
        </span>
      );
    }
    return (
      <span className="px-3 py-1 rounded-lg bg-gray-50 text-gray-600 border border-gray-200">
        المتجر: غير محدد
      </span>
    );
  }, [storeLoading, storeName]);

  // ملاحظة: لو حاب تمنع الوصول بدون لوجين، احتفظ بالشرط التالي:
  if (authLoading) return <p>جارٍ التحقق من حالة تسجيل الدخول…</p>;
  if (!userPresent) {
    // تقدر تخليه يسمح بعرض الإعدادات الأساسية حتى بدون لوجين لو حاب
    return <p className="text-red-600">مطلوب تسجيل الدخول للوصول للوحة التحكم.</p>;
  }

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="flex items-center justify-between mb-6">
        <h1 className="text-3xl font-bold text-green-800">لوحة التحكم</h1>
        {headerRight}
      </div>

      <div className="flex space-x-2 mb-6 rtl:space-x-reverse">
        {tabs.map((tab) => (
          <button
            key={tab}
            onClick={() => setActiveTab(tab)}
            className={`px-4 py-2 rounded-md font-medium border transition ${
              activeTab === tab
                ? 'bg-green-700 text-white border-green-700'
                : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-100'
            }`}
          >
            {tab}
          </button>
        ))}
      </div>

      <div className="bg-white p-6 rounded-lg shadow">
        {activeTab === 'الإحصائيات' && <DashboardAnalytics />}
        {activeTab === 'الطلبات' && <OrdersTab />}
        {activeTab === 'التقييمات' && <ReviewsTab storeName={storeName} />}
        {/* ✅ مرّر storeUid و storeName هنا */}
        {activeTab === 'الإعدادات' && <SettingsTab storeUid={storeUid} storeName={storeName} />}
        {activeTab === 'المساعدة' && <SupportTab />}
      </div>
    </div>
  );
}
====[ END FILE: src/pages/dashboard.tsx ]===========================================================

====[ START FILE: src/pages/dashboard/integrations.tsx (2.6 KB) ]===================================
"use client";

import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import LoadingSpinner from "@/components/LoadingSpinner";

export default function DashboardIntegrationsRedirect() {
  const router = useRouter();
  const [isRedirecting, setIsRedirecting] = useState(true);

  const handleRedirect = () => {
    setIsRedirecting(false);
    setTimeout(() => {
      router.replace("/dashboard?salla=connected");
    }, 500);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 flex items-center justify-center p-4">
      {/* Background Pattern */}
      <div className="absolute inset-0 bg-grid-pattern opacity-5"></div>
      
      {/* Floating Elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute top-1/4 left-1/4 w-32 h-32 bg-blue-400/10 rounded-full blur-xl animate-float"></div>
        <div className="absolute top-3/4 right-1/4 w-48 h-48 bg-purple-400/10 rounded-full blur-xl animate-float-delayed"></div>
        <div className="absolute bottom-1/4 left-1/3 w-40 h-40 bg-pink-400/10 rounded-full blur-xl animate-float-slow"></div>
      </div>

      {/* Main Content */}
      <div className="relative z-10 bg-white/80 backdrop-blur-sm rounded-3xl shadow-2xl p-12 border border-white/20 max-w-md w-full text-center">
        <div className="space-y-8">
          {/* Logo/Icon Area */}
          <div className="flex justify-center">
            <div className="w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg">
              <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
              </svg>
            </div>
          </div>

          <LoadingSpinner onComplete={handleRedirect} duration={3000} />

          {/* Additional Info */}
          <div className="text-center space-y-2">
            <p className="text-xs text-muted-foreground">
              سيتم توجيهك تلقائياً خلال لحظات
            </p>
            <div className="flex justify-center space-x-2">
              <div className="w-2 h-2 bg-blue-400 rounded-full"></div>
              <div className="w-2 h-2 bg-purple-400 rounded-full"></div>
              <div className="w-2 h-2 bg-pink-400 rounded-full"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
====[ END FILE: src/pages/dashboard/integrations.tsx ]==============================================

====[ START FILE: src/pages/embedded/index.tsx (293 B) ]============================================
import React from 'react';

export default function EmbeddedHome() {
  return (
    <main style={{padding:16, fontFamily:'system-ui'}}>
      <h2>لوحة ثقة (Embedded)</h2>
      <p>إدارة المراجعات والإحصائيات من داخل زد.</p>
    </main>
  );
}
====[ END FILE: src/pages/embedded/index.tsx ]======================================================

====[ START FILE: src/pages/embedded/reviews.tsx (4.8 KB) ]=========================================
// src/pages/embedded/reviews.tsx
import { useEffect, useMemo, useState } from "react";
import Image from "next/image";

type PublicReview = {
  id: string;
  stars: number; // 0..5
  text?: string;
  images?: string[];
  createdAt: number; // ms
  buyerVerified: boolean;
  storeUid: string;
  productId: string;
};

function StarRow({ stars }: { stars: number }) {
  const s = Math.max(0, Math.min(5, Math.round(stars)));
  return (
    <div className="flex gap-1" aria-label={`تقييم ${s} من 5`}>
      {[1, 2, 3, 4, 5].map((i) => (
        <span key={i} className={i <= s ? "text-yellow-400" : "text-gray-300"}>
          ★
        </span>
      ))}
    </div>
  );
}

export default function EmbeddedReviews() {
  const params = useMemo(
    () =>
      new URLSearchParams(
        typeof window !== "undefined" ? window.location.search : ""
      ),
    []
  );

  const storeUid = params.get("storeUid") || "";
  const productId = params.get("productId") || "";
  const limitParam = Number(params.get("limit") || 10);
  const limit = Number.isFinite(limitParam)
    ? Math.max(1, Math.min(50, limitParam))
    : 10;

  const rtl = params.get("rtl") === "0" ? false : true;
  const dir: "rtl" | "ltr" = rtl ? "rtl" : "ltr";
  const bg = params.get("bg") || "white";

  const [loading, setLoading] = useState(true);
  const [reviews, setReviews] = useState<PublicReview[]>([]);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    (async () => {
      if (!storeUid || !productId) {
        setError("storeUid و productId مطلوبة");
        setLoading(false);
        return;
      }
      try {
        const base = process.env.NEXT_PUBLIC_BASE_URL?.trim() || "";
        const url =
          (base ? `${base}` : "") +
          `/api/public/reviews?storeUid=${encodeURIComponent(
            storeUid
          )}&productId=${encodeURIComponent(productId)}&limit=${limit}`;
        const res = await fetch(url);
        const j = await res.json();
        if (!res.ok) throw new Error(j?.message || "تعذر جلب المراجعات");
        setReviews(Array.isArray(j.reviews) ? j.reviews : []);
      } catch (e: unknown) {
        setError(e instanceof Error ? e.message : "خطأ غير متوقع");
      } finally {
        setLoading(false);
      }
    })();
  }, [storeUid, productId, limit]);

  return (
    <main dir={dir} style={{ background: bg }} className="min-h-[60px] text-gray-800">
      <div className="p-4">
        {loading && <div className="text-sm text-gray-500">جارٍ التحميل…</div>}
        {error && <div className="text-sm text-rose-600">{error}</div>}

        {!loading && !error && reviews.length === 0 && (
          <div className="text-sm text-gray-500">لا توجد مراجعات منشورة بعد.</div>
        )}

        <ul className="space-y-4">
          {reviews.map((r) => (
            <li key={r.id} className="bg-white rounded-xl border p-4 shadow-sm">
              <div className="flex items-center justify-between gap-2 mb-1">
                <StarRow stars={r.stars} />
                {r.buyerVerified && (
                  <span className="inline-flex items-center gap-1 text-xs px-2 py-1 rounded-full bg-emerald-50 text-emerald-700">
                    ✅ مشتري موثق
                  </span>
                )}
              </div>

              {r.text && <p className="text-sm leading-6 whitespace-pre-wrap">{r.text}</p>}

              {!!(r.images && r.images.length) && (
                <div className="mt-3 grid grid-cols-3 gap-2">
                  {r.images.slice(0, 6).map((u) => (
                    <div key={u} className="relative w-full h-24">
                      {/* استخدام next/image لتفادي تحذير @next/next/no-img-element */}
                      <Image
                        src={u}
                        alt=""
                        fill
                        sizes="(max-width: 640px) 33vw, 200px"
                        className="object-cover rounded-lg border"
                        // إن كنت تستخدم Uploadcare أو روابط خارجية غير معرفة في next.config:
                        unoptimized
                        // لو أردت استخدام loader مخصص بدلاً من unoptimized:
                        // loader={({ src }) => src}
                        // priority={false}
                      />
                    </div>
                  ))}
                </div>
              )}

              <div className="mt-3 text-[11px] text-gray-400">
                {new Date(r.createdAt).toLocaleDateString()}
              </div>
            </li>
          ))}
        </ul>
      </div>
    </main>
  );
}
====[ END FILE: src/pages/embedded/reviews.tsx ]====================================================

====[ START FILE: src/pages/faq.tsx (15.8 KB) ]=====================================================
// src/pages/faq.tsx
'use client';

import Image from 'next/image';
import Link from 'next/link';
import { motion } from 'framer-motion';
import NavbarLanding from '@/components/NavbarLanding';

export default function FAQPage() {
  return (
    <>
      <NavbarLanding />
      <div className="h-20" />

      <main className="font-sans text-[#0e1e1a] bg-white overflow-x-hidden" dir="rtl">
        {/* Hero */}
        <section className="min-h-[60vh] flex flex-col justify-center items-center text-center px-6 bg-gradient-to-b from-green-50 to-white relative overflow-hidden">
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 1 }}
            className="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-green-100 via-white to-transparent opacity-20 pointer-events-none"
          />
          <motion.div
            initial={{ opacity: 0, y: 40 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1 }}
            className="z-10 max-w-3xl space-y-5"
          >
            <Image src="/logo.png" alt="ثقة" width={84} height={84} className="mx-auto" />
            <h1 className="text-4xl md:text-5xl font-extrabold text-green-900 leading-tight">
              الأسئلة الشائعة — مشتري موثّق
            </h1>
            <p className="text-lg md:text-xl text-gray-600 leading-relaxed">
              كل ما تحتاج معرفته عن خدمة <strong>مشتري موثّق</strong> لجعل تقييمات متجرك حقيقية وموثوقة.
            </p>
          </motion.div>
        </section>

        {/* FAQ Cards */}
        <section className="py-20 px-6 bg-[#f9f9f9]">
          <div className="max-w-5xl mx-auto">
            <h2 className="text-3xl font-bold mb-12 text-green-800 text-center">الأسئلة والإجابات</h2>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Q1 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">ما هي خدمة مشتري موثّق؟</h3>
                <p className="text-gray-700 leading-relaxed">
                  خدمة تضمن مصداقية التقييمات في المتاجر الإلكترونية. بعد الشراء، يُرسل رابط تقييم حصري للمشتري عبر
                  <strong> SMS / واتساب / البريد الإلكتروني</strong> ويُستخدم مرة واحدة فقط. يمرّ التقييم بفلترة
                  <strong> ذكاء اصطناعي</strong> قبل النشر ويظهر مع وسم <strong>“مشتري ثقة”</strong>.
                </p>
              </motion.div>

              {/* Q2 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.05, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">كيف تعمل الخدمة خطوة بخطوة؟</h3>
                <ol className="list-decimal list-inside space-y-1 text-gray-700">
                  <li>يكمل المشتري عملية الشراء في المتجر.</li>
                  <li>يرسل النظام رابط تقييم شخصي تلقائيًا.</li>
                  <li>يفتح المشتري الرابط ويضيف التقييم (نص + نجوم).</li>
                  <li>تقوم خوارزميات الذكاء الاصطناعي بفلترة المحتوى.</li>
                  <li>يتم التحقق آليًا من صحة المشتري.</li>
                  <li>يُنشر التقييم في صفحة المتجر مع وسم “مشتري ثقة”.</li>
                </ol>
              </motion.div>

              {/* Q3 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.1, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">هل الرابط يُستخدم أكثر من مرة؟</h3>
                <p className="text-gray-700 leading-relaxed">
                  لا، كل رابط تقييم صالح <strong>لاستخدام واحد فقط</strong> لكل طلب. أي محاولة لإعادة الاستخدام يتم رفضها.
                </p>
              </motion.div>

              {/* Q4 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.15, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">ماذا يحدث للتقييمات غير اللائقة؟</h3>
                <p className="text-gray-700 leading-relaxed">
                  يتم كشف الكلمات المسيئة/غير المناسبة ورفض التقييم تلقائيًا، مع إمكانية إشعار المشتري لإعادة الإرسال
                  بصيغة مناسبة.
                </p>
              </motion.div>

              {/* Q5 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.2, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">ما قنوات إرسال روابط التقييم؟</h3>
                <p className="text-gray-700 leading-relaxed">
                  ندعم <strong>SMS</strong> و<strong>واتساب</strong> و<strong>البريد الإلكتروني</strong> لضمان وصول الرابط
                  عبر القناة المفضلة لدى المشتري.
                </p>
              </motion.div>

              {/* Q6 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.25, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">متى يُنشر التقييم؟</h3>
                <p className="text-gray-700 leading-relaxed">
                  إذا مرّ التقييم بالفلترة دون ملاحظات يُنشر <strong>فورًا</strong>. أما التقييمات المُعلّمة للمراجعة فقد
                  تتأخر وفق إعدادات المتجر.
                </p>
              </motion.div>

              {/* Q7 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.3, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">هل يدعم النظام لغات متعددة؟</h3>
                <p className="text-gray-700 leading-relaxed">
                  نعم، يعمل نظام الفلترة الذكي مع لغات متعددة لضمان جودة المحتوى للمستخدمين محليًا ودوليًا.
                </p>
              </motion.div>

              {/* Q8 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.35, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">كيف يستفيد صاحب المتجر؟</h3>
                <ul className="list-disc list-inside text-gray-700 space-y-1">
                  <li>رفع الثقة وتقليل التقييمات المزيفة.</li>
                  <li>تحسين معدلات التحويل والمبيعات.</li>
                  <li>الحصول على تعليقات حقيقية لتحسين المنتجات والخدمة.</li>
                </ul>
              </motion.div>

              {/* Q9 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.4, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">ماذا عن الحالات الخاصة؟</h3>
                <ul className="list-disc list-inside text-gray-700 space-y-1">
                  <li>محاولة استخدام الرابط مرتين → يُرفض الاستخدام الثاني.</li>
                  <li>تقييم دون محتوى نصّي كافٍ → يُرفض تلقائيًا.</li>
                  <li>تقييم يحتوي كلمات محظورة → يُرفض ويُخطر المشتري.</li>
                </ul>
              </motion.div>

              {/* Q10 */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.45, duration: 0.6 }}
                className="bg-white rounded-xl p-6 shadow hover:shadow-lg transition"
              >
                <h3 className="text-xl font-semibold mb-2 text-green-900">كيف أبدأ؟</h3>
                <p className="text-gray-700 leading-relaxed">
                  اربط متجرك مع ثقة (سُلّة/زِد/‎Webhook‎)، وفَعِّل قنوات الإرسال، واضبط إعدادات النشر. ابدأ الآن من
                  <Link href="/signup" className="text-green-700 font-semibold hover:underline ml-1">
                    صفحة التسجيل
                  </Link>
                  .
                </p>
              </motion.div>
            </div>
          </div>
        </section>

        {/* CTA */}
        <section className="py-16 px-6 bg-white">
          <div className="max-w-3xl mx-auto text-center">
            <h3 className="text-2xl font-bold text-green-900 mb-3">جاهز تفعّل مشتري موثّق في متجرك؟</h3>
            <p className="text-gray-600 mb-6">
              ابدأ بجمع تقييمات حقيقية بعد الشراء وانشرها بعلامة “مشتري ثقة”.
            </p>
            <Link href="/signup">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.97 }}
                className="bg-green-700 text-white px-8 py-3 rounded-full text-md shadow-md hover:bg-green-800 transition"
              >
                ابدأ الآن مجانًا
              </motion.button>
            </Link>
          </div>
        </section>

        {/* Footer */}
        <footer className="bg-green-100 py-6 text-center text-sm text-green-900 border-t border-green-200">
          <div className="flex justify-center gap-6 mb-2 flex-wrap">
            <Link href="/privacy-policy" className="hover:underline">سياسة الخصوصية</Link>
            <Link href="/terms" className="hover:underline">الشروط والأحكام</Link>
            <Link href="/support" className="hover:underline">الدعم والمساعدة</Link>
          </div>
          <p>© 2025 ثقة - جميع الحقوق محفوظة</p>
        </footer>

        {/* SEO: FAQ Schema */}
        <script
          type="application/ld+json"
          dangerouslySetInnerHTML={{
            __html: JSON.stringify({
              '@context': 'https://schema.org',
              '@type': 'FAQPage',
              mainEntity: [
                {
                  '@type': 'Question',
                  name: 'ما هي خدمة مشتري موثّق؟',
                  acceptedAnswer: {
                    '@type': 'Answer',
                    text:
                      'خدمة تضمن مصداقية التقييمات. بعد الشراء يُرسل رابط تقييم حصري للمشتري ويُستخدم مرة واحدة فقط، ويُفلتر التقييم بالذكاء الاصطناعي ويُعرض بوسم “مشتري ثقة”.',
                  },
                },
                {
                  '@type': 'Question',
                  name: 'كيف تعمل الخدمة خطوة بخطوة؟',
                  acceptedAnswer: {
                    '@type': 'Answer',
                    text:
                      'يكمل المشتري الشراء، يُرسل الرابط تلقائياً، يضيف التقييم، تُفلتره الخوارزميات، يتحقق النظام من هوية المشتري، ثم يُنشر مع وسم “مشتري ثقة”.',
                  },
                },
                {
                  '@type': 'Question',
                  name: 'هل الرابط يُستخدم أكثر من مرة؟',
                  acceptedAnswer: {
                    '@type': 'Answer',
                    text: 'لا، كل رابط صالح لاستخدام واحد فقط لكل طلب.',
                  },
                },
                {
                  '@type': 'Question',
                  name: 'ماذا يحدث للتقييمات غير اللائقة؟',
                  acceptedAnswer: {
                    '@type': 'Answer',
                    text: 'يتم كشف الكلمات المسيئة أو المحتوى غير المناسب ورفض التقييم تلقائياً مع إمكانية إخطار المشتري.',
                  },
                },
                {
                  '@type': 'Question',
                  name: 'ما قنوات إرسال روابط التقييم؟',
                  acceptedAnswer: {
                    '@type': 'Answer',
                    text: 'SMS وواتساب والبريد الإلكتروني.',
                  },
                },
                {
                  '@type': 'Question',
                  name: 'متى يُنشر التقييم؟',
                  acceptedAnswer: {
                    '@type': 'Answer',
                    text: 'يُنشر فوراً إذا اجتاز الفلترة، وقد يتأخر التقييم المُعلّم للمراجعة وفق إعدادات المتجر.',
                  },
                },
              ],
            }),
          }}
        />
      </main>
    </>
  );
}
====[ END FILE: src/pages/faq.tsx ]=================================================================

====[ START FILE: src/pages/index.tsx (5.6 KB) ]====================================================
'use client';

import Image from 'next/image';
import Link from 'next/link';
import { motion } from 'framer-motion';
import NavbarLanding from '@/components/NavbarLanding';

export default function LandingPage() {
  return (
    <>
      <NavbarLanding />
      <div className="h-20" />

      <main className="font-sans text-[#0e1e1a] bg-white overflow-x-hidden">
        {/* Hero Section */}
        <section className="min-h-[90vh] flex flex-col justify-center items-center text-center px-6 bg-gradient-to-b from-green-50 to-white relative overflow-hidden">
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 1 }}
            className="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-green-100 via-white to-transparent opacity-20 pointer-events-none"
          />
          <motion.div
            initial={{ opacity: 0, y: 40 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1 }}
            className="z-10 max-w-2xl space-y-6"
          >
            <Image src="/logo.png" alt="ثقة" width={100} height={100} className="mx-auto" />
            <h1 className="text-4xl md:text-5xl font-extrabold text-green-900 leading-tight">
              ثقة - تقييم سعودي بثقة
            </h1>
            <p className="text-lg md:text-xl text-gray-600 leading-relaxed">
              اجمع تقييمات العملاء تلقائياً بعد الشراء وانشرها على صفحة عامة موثوقة.
            </p>
            <Link href="/signup">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.97 }}
                className="bg-green-700 text-white px-10 py-3 rounded-full text-lg shadow-md hover:bg-green-800 transition"
              >
                ابدأ الآن مجاناً
              </motion.button>
            </Link>
          </motion.div>
        </section>

        {/* Features Section */}
        <section className="py-24 px-6 bg-[#f9f9f9]">
          <div className="max-w-6xl mx-auto text-center">
            <h2 className="text-3xl font-bold mb-14 text-green-800">لماذا تختار ثقة؟</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-10">
              {[
                { icon: '💬', title: 'إرسال تلقائي للرسائل', desc: 'SMS / واتساب / بريد إلكتروني بعد كل عملية شراء' },
                { icon: '🧠', title: 'ذكاء اصطناعي فلتر', desc: 'منع التقييمات المسيئة تلقائيًا وبذكاء' },
                { icon: '🌟', title: 'صفحة عامة للتقييمات', desc: 'عرض التقييمات بثقة مع وسم "مشتري ثقة"' },
              ].map((feat, i) => (
                <motion.div
                  key={i}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ delay: i * 0.3, duration: 0.8 }}
                  viewport={{ once: true }}
                  className="bg-white rounded-xl p-6 shadow hover:shadow-xl transition"
                >
                  <div className="text-4xl mb-4 bg-green-100 text-green-800 w-14 h-14 rounded-full mx-auto flex items-center justify-center">
                    {feat.icon}
                  </div>
                  <h3 className="text-xl font-semibold mb-2 text-green-900">{feat.title}</h3>
                  <p className="text-gray-600 leading-relaxed">{feat.desc}</p>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Steps Section */}
        <section className="py-20 px-6 bg-white">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-3xl font-bold mb-12 text-green-800">كيف يعمل ثقة؟</h2>
            <div className="space-y-8 text-right">
              {[
                'اربط متجرك مع ثقة (سلة / زد / Webhook)',
                'نرسل رابط التقييم تلقائيًا بعد الشراء',
                'العميل يقيّم المنتج أو الخدمة بسهولة',
                'نعرض التقييمات الموثوقة في صفحة عامة',
              ].map((step, i) => (
                <motion.div
                  key={i}
                  initial={{ opacity: 0, x: 30 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ delay: i * 0.2, duration: 0.6 }}
                  viewport={{ once: true }}
                  className="bg-green-50 rounded-xl p-5 text-lg text-green-900 shadow-sm"
                >
                  <span className="font-bold text-green-600 ml-2">{i + 1}.</span> {step}
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Footer */}
        <footer className="bg-green-100 py-6 text-center text-sm text-green-900 border-t border-green-200">
          <div className="flex justify-center gap-6 mb-2 flex-wrap">
            <Link href="/privacy-policy" className="hover:underline">سياسة الخصوصية</Link>
            <Link href="/terms" className="hover:underline">الشروط والأحكام</Link>
            <Link href="/support" className="hover:underline">الدعم والمساعدة</Link>
          </div>
          <p>© 2025 ثقة - جميع الحقوق محفوظة</p>
        </footer>
      </main>
    </>
  );
}
====[ END FILE: src/pages/index.tsx ]===============================================================

====[ START FILE: src/pages/login.tsx (3.9 KB) ]====================================================
'use client';

import { useState, FormEvent } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { Loader2 } from 'lucide-react';
import { loginUser } from '@/lib/auth/login';

type LoginResult = { role: 'admin' | 'user' };

export default function LoginPage() {
  const router = useRouter();

  const [email, setEmail] = useState<string>('');
  const [password, setPassword] = useState<string>('');
  const [error, setError] = useState<string>('');
  const [loading, setLoading] = useState<boolean>(false);

  const handleLogin = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setError('');
    setLoading(true);

    try {
      const { role } = (await loginUser(email.trim(), password)) as LoginResult;
      if (role === 'admin') router.push('/admin/dashboard');
      else router.push('/dashboard');
    } catch (err) {
      console.error('Login error:', err);
      setError('البريد الإلكتروني أو كلمة المرور غير صحيحة');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-green-50 to-white px-4">
      <form onSubmit={handleLogin} className="w-full max-w-md bg-white p-8 rounded-xl shadow-md border" noValidate>
        <div className="text-center space-y-3 mb-6">
          <Image src="/logo.png" alt="ثقة" width={56} height={56} className="mx-auto rounded" />
          <h1 className="text-2xl font-extrabold text-green-900">تسجيل الدخول إلى ثقة</h1>
          <p className="text-sm text-gray-600">مرحبًا بك، أدخل بياناتك للمتابعة</p>
        </div>

        {error && (
          <div role="alert" className="mb-4 text-red-700 bg-red-50 border border-red-200 rounded-md px-3 py-2 text-sm text-center">
            {error}
          </div>
        )}

        <div className="mb-4">
          <label className="block mb-1 text-sm font-medium text-gray-700">البريد الإلكتروني</label>
          <input
            type="email"
            required
            autoComplete="email"
            inputMode="email"
            dir="ltr"
            placeholder="you@example.com"
            className="w-full border border-gray-300 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            aria-invalid={!!error}
          />
        </div>

        <div className="mb-6">
          <label className="block mb-1 text-sm font-medium text-gray-700">كلمة المرور</label>
          <input
            type="password"
            required
            autoComplete="current-password"
            dir="ltr"
            placeholder="••••••••"
            className="w-full border border-gray-300 px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            aria-invalid={!!error}
          />
        </div>

        <button
          type="submit"
          disabled={loading}
          className="w-full bg-green-700 text-white py-2 rounded-lg hover:bg-green-800 transition flex items-center justify-center gap-2 disabled:opacity-70"
        >
          {loading ? <Loader2 className="h-4 w-4 animate-spin" /> : null}
          {loading ? 'جاري الدخول...' : 'تسجيل الدخول'}
        </button>

        <div className="text-center text-sm mt-5">
          لا تملك حساب؟{' '}
          <Link href="/signup" className="text-green-700 font-medium hover:underline">
            أنشئ حساب جديد
          </Link>
        </div>
      </form>
    </div>
  );
}
====[ END FILE: src/pages/login.tsx ]===============================================================

====[ START FILE: src/pages/onboarding/set-password.tsx (3.4 KB) ]==================================
import { useRouter } from "next/router";
import { useState, useMemo } from "react";
import Head from "next/head";
import { auth } from "@/lib/firebase";
import {
  setPersistence, browserLocalPersistence,
  signInWithEmailAndPassword, signInWithCustomToken
} from "firebase/auth";

export default function SetPasswordPage() {
  const router = useRouter();
  const tokenFromQuery = useMemo(
    () => (typeof router.query.t === "string" ? router.query.t : ""),
    [router.query.t]
  );

  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [submitting, setSubmitting] = useState(false);
  const [err, setErr] = useState<string | null>(null);

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!tokenFromQuery) { setErr("Token مفقود في الرابط."); return; }
    setErr(null); setSubmitting(true);

    try {
      const r = await fetch("/api/auth/exchange-onboarding", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ tokenId: tokenFromQuery, password, email: email || undefined }),
      });
      const j = await r.json();
      if (!r.ok || !j?.ok) throw new Error(j?.error || "فشل في الاستبدال");

      await setPersistence(auth, browserLocalPersistence);
      if (email) await signInWithEmailAndPassword(auth, email, password);
      else if (j.customToken) await signInWithCustomToken(auth, j.customToken);

      const dest = `/dashboard/integrations?salla=connected${j.storeUid ? `&uid=${encodeURIComponent(j.storeUid)}` : ""}`;
      router.replace(dest);
      //eslint-disable-next-line
    } catch (e: any) {
      setErr(e?.message || String(e));
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <>
      <Head><title>تعيين كلمة المرور</title></Head>
      <main className="min-h-screen flex items-center justify-center p-6">
        <form onSubmit={onSubmit} className="w-full max-w-md space-y-4 border rounded-xl p-6">
          <h1 className="text-2xl font-semibold">إنشاء/تعيين كلمة المرور</h1>
          {!tokenFromQuery && <p className="text-red-600">Token مفقود في الرابط.</p>}

          <label className="block">
            <span className="block text-sm mb-1">الإيميل (اختياري — يُفضّل تعبئته)</span>
            <input type="email" className="w-full border rounded-md p-2"
              placeholder="you@example.com" value={email}
              onChange={(e) => setEmail(e.target.value)} autoComplete="email" />
          </label>

          <label className="block">
            <span className="block text-sm mb-1">كلمة المرور</span>
            <input type="password" className="w-full border rounded-md p-2"
              placeholder="••••••••" value={password}
              onChange={(e) => setPassword(e.target.value)}
              autoComplete="new-password" minLength={6} required />
          </label>

          {err && <p className="text-red-600 text-sm">{err}</p>}

          <button type="submit" disabled={!tokenFromQuery || submitting}
            className="w-full rounded-md bg-black text-white py-2 disabled:opacity-60">
            {submitting ? "جاري الحفظ..." : "حفظ ومتابعة"}
          </button>
        </form>
      </main>
    </>
  );
}
====[ END FILE: src/pages/onboarding/set-password.tsx ]=============================================

====[ START FILE: src/pages/privacy-policy.tsx (3.6 KB) ]===========================================
'use client';

import NavbarLanding from '@/components/NavbarLanding';
import { motion, useScroll, useTransform } from 'framer-motion';
import Image from 'next/image';

export default function PrivacyPolicyPage() {
  const { scrollY } = useScroll();
  const y = useTransform(scrollY, [0, 300], [0, -50]);

  return (
    <main className="bg-white text-[#0e1e1a] font-sans overflow-x-hidden">
      <NavbarLanding />
      <div className="h-20" />

      {/* Hero Section with parallax logo */}
      <section className="relative flex flex-col items-center pt-12 pb-20 bg-gradient-to-b from-green-50 to-white">
        <motion.div style={{ y }} className="pointer-events-none">
          <Image src="/logo.png" alt="ثقة" width={120} height={120} />
        </motion.div>
        <motion.h1
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="mt-4 text-4xl font-extrabold text-green-900"
        >
          سياسة الخصوصية
        </motion.h1>
      </section>

      {/* Content Sections */}
      <div className="max-w-3xl mx-auto px-6 py-12 space-y-16">
        {[
          {
            title: '١. جمع المعلومات',
            content:
              'نقوم بجمع المعلومات الضرورية فقط، مثل البريد الإلكتروني وبيانات المتجر، بهدف تحسين جودة الخدمة وتخصيص تجربة المستخدم.',
          },
          {
            title: '٢. استخدام البيانات',
            content:
              'نستخدم بياناتك لإرسال رسائل التقييم وتحليل الآراء لتحسين خدمات المتاجر، دون بيع أو تأجير بياناتك لأي جهة خارجية.',
          },
          {
            title: '٣. مشاركة المعلومات',
            content:
              'لا تتم مشاركة بياناتك مع أي طرف ثالث، إلا في حال وجود التزام قانوني أو بأمر من جهة مختصة داخل المملكة العربية السعودية.',
          },
          {
            title: '٤. موافقتك',
            content:
              'باستخدامك لمنصة ثقة، فإنك تقر بموافقتك على جمع واستخدام معلوماتك كما هو موضح في هذه السياسة.',
          },
        ].map((section, idx) => (
          <motion.div
            key={idx}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ delay: idx * 0.3, duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h2 className="text-2xl font-semibold text-green-800 mb-2">{section.title}</h2>
            <p className="text-gray-700 leading-relaxed">{section.content}</p>
          </motion.div>
        ))}

        {/* Footer info */}
        <motion.p
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ delay: 1.4, duration: 0.8 }}
          className="text-gray-500 text-sm text-center"
        >
          تم تحديث هذه السياسة بتاريخ يوليو 2025. إذا كان لديك أي استفسار، نرجو التواصل معنا عبر صفحة الدعم.
        </motion.p>
      </div>

      <footer className="bg-green-100 py-6 text-center text-sm text-green-900 border-t border-green-200">
        <p>© 2025 ثقة - جميع الحقوق محفوظة</p>
      </footer>
    </main>
  );
}
====[ END FILE: src/pages/privacy-policy.tsx ]======================================================

====[ START FILE: src/pages/r/[id].tsx (4.3 KB) ]===================================================
// src/pages/r/[id].tsx
import type { GetServerSideProps, InferGetServerSidePropsType } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { expandShortLink } from "@/server/short-links";
import { Loader2, ExternalLink, AlertCircle, ArrowRight } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";

type Props = { redirect?: string };

export default function RedirectPage({
  redirect,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const [countdown, setCountdown] = useState(3);

  useEffect(() => {
    if (!redirect) return;
    if (countdown === 0) {
      window.location.href = redirect;
      return;
    }
    const t = setTimeout(() => setCountdown((n) => n - 1), 1000);
    return () => clearTimeout(t);
  }, [redirect, countdown]);

  if (redirect) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 flex items-center justify-center p-4" dir="rtl">
        <Head>
          <title>إعادة توجيه…</title>
          <meta name="robots" content="noindex, nofollow" />
        </Head>
        <Card className="w-full max-w-md mx-auto shadow-xl border-0 bg-white/80 backdrop-blur-sm">
          <CardContent className="p-8 text-center">
            <div className="mb-6">
              <div className="inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4">
                <Loader2 className="w-8 h-8 text-blue-600 animate-spin" />
              </div>
              <h1 className="text-2xl font-bold text-gray-800 mb-2">جاري إعادة التوجيه…</h1>
              <p className="text-gray-600 mb-4">سيتم تحويلك خلال {countdown} ثانية</p>
            </div>

            <div className="space-y-4">
              <div className="flex items-center justify-center gap-2 text-sm text-gray-500 bg-gray-50 rounded-lg p-3">
                <ExternalLink className="w-4 h-4" />
                <span className="truncate max-w-xs" title={redirect}>
                  {redirect}
                </span>
              </div>
              <Button
                onClick={() => (window.location.href = redirect)}
                className="w-full"
              >
                الانتقال الآن
                <ArrowRight className="w-4 h-4 mr-2 rotate-180" />
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  // ❌ رابط غير صالح
  return (
    <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-orange-50 flex items-center justify-center p-4" dir="rtl">
      <Head>
        <title>رابط غير صالح</title>
        <meta name="robots" content="noindex, nofollow" />
      </Head>
      <Card className="w-full max-w-md mx-auto shadow-xl border-0 bg-white/80 backdrop-blur-sm">
        <CardContent className="p-8 text-center">
          <div className="mb-6">
            <div className="inline-flex items-center justify-center w-16 h-16 bg-red-100 rounded-full mb-4">
              <AlertCircle className="w-8 h-8 text-red-600" />
            </div>
            <h1 className="text-2xl font-bold text-gray-800 mb-2">رابط غير صالح</h1>
            <p className="text-gray-600">
              الرابط الذي تحاول الوصول إليه غير موجود أو انتهت صلاحيته
            </p>
          </div>
          <Button
            variant="outline"
            className="w-full"
            onClick={() => (window.location.href = "/")}
          >
            العودة إلى الصفحة الرئيسية
            <ArrowRight className="w-4 h-4 mr-2 rotate-180" />
          </Button>
        </CardContent>
      </Card>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps<Props> = async (ctx) => {
  const id = typeof ctx.params?.id === "string" ? ctx.params.id.trim() : "";
  ctx.res.setHeader("Cache-Control", "no-store");
  if (!id) return { props: {} };

  try {
    const dest = await expandShortLink(id);
    return { props: dest ? { redirect: dest } : {} };
  } catch (e) {
    console.error("[r/[id]] error:", e);
    return { props: {} };
  }
};
====[ END FILE: src/pages/r/[id].tsx ]==============================================================

====[ START FILE: src/pages/report.tsx (4.3 KB) ]===================================================
'use client';

import { useState } from 'react';
import NavbarLanding from '@/components/NavbarLanding';
import { motion } from 'framer-motion';

export default function ReportPage() {
  const [form, setForm] = useState({
    reviewId: '',
    name: '',
    email: '',
    reason: '',
  });

  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState(false);
  const [error, setError] = useState('');

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError('');
    setSuccess(false);

    try {
      const res = await fetch('/api/report-review', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(form),
      });

      const data = await res.json();
      if (res.ok) {
        setSuccess(true);
        setForm({ reviewId: '', name: '', email: '', reason: '' });
      } else {
        setError(data.message || 'حدث خطأ أثناء الإرسال');
      }
    } catch {
      setError('تعذر الاتصال بالخادم، حاول لاحقاً');
    } finally {
      setLoading(false);
    }
  };

  return (
    <main className="bg-white text-[#0e1e1a] font-sans min-h-screen overflow-x-hidden">
      <NavbarLanding />
      <div className="h-20" />

      <section className="bg-gradient-to-b from-green-50 to-white py-16 text-center">
        <motion.h1
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-4xl font-extrabold text-green-900"
        >
          الإبلاغ عن تقييم مسيء
        </motion.h1>
        <motion.p
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3, duration: 0.8 }}
          className="mt-4 text-gray-600"
        >
          إذا واجهت تقييمًا غير لائق، يمكنك إبلاغنا عبر النموذج التالي
        </motion.p>
      </section>

      <section className="max-w-xl mx-auto px-6 py-10">
        <motion.form
          onSubmit={handleSubmit}
          initial={{ opacity: 0, y: 40 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.7 }}
          viewport={{ once: true }}
          className="bg-green-50 p-6 rounded-xl shadow space-y-4"
        >
          <input
            type="text"
            name="reviewId"
            placeholder="معرف التقييم (Review ID)"
            className="w-full border border-green-200 rounded-lg p-3"
            value={form.reviewId}
            onChange={handleChange}
            required
          />
          <input
            type="text"
            name="name"
            placeholder="اسمك"
            className="w-full border border-green-200 rounded-lg p-3"
            value={form.name}
            onChange={handleChange}
            required
          />
          <input
            type="email"
            name="email"
            placeholder="بريدك الإلكتروني"
            className="w-full border border-green-200 rounded-lg p-3"
            value={form.email}
            onChange={handleChange}
            required
          />
          <textarea
            name="reason"
            placeholder="سبب الإبلاغ"
            rows={4}
            className="w-full border border-green-200 rounded-lg p-3"
            value={form.reason}
            onChange={handleChange}
            required
          />

          <button
            type="submit"
            disabled={loading}
            className="bg-green-700 hover:bg-green-800 text-white font-bold py-3 px-6 rounded-lg transition"
          >
            {loading ? 'جارٍ الإرسال...' : 'إرسال البلاغ'}
          </button>

          {success && <p className="text-green-600 mt-3">✅ تم إرسال البلاغ بنجاح، شكرًا لك.</p>}
          {error && <p className="text-red-600 mt-3">❌ {error}</p>}
        </motion.form>
      </section>
    </main>
  );
}
====[ END FILE: src/pages/report.tsx ]==============================================================

====[ START FILE: src/pages/review/[token].tsx (9.9 KB) ]===========================================
// src/pages/review/[token].tsx
import Head from "next/head";
import { useEffect, useMemo, useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import UploadcareWidget from "@/components/UploadcareWidget";

type UploadedFile = { cdnUrl: string; name?: string; size?: number; mime?: string };

type TokenInfo = {
  tokenId: string;
  orderId?: string;
  storeName?: string;
  customerName?: string;
  expired?: boolean;
  voided?: boolean;
};

type SubmitBody = {
  orderId: string;
  stars: number;
  text?: string;
  images?: string[];
  tokenId?: string;
  platform?: "salla" | "zid" | "manual" | "web";
};

export default function ReviewByTokenPage() {
  const router = useRouter();
  const isReady = router.isReady;

  // read token safely (could be string | string[] | undefined)
  const token = useMemo(() => {
    const t = router.query.token;
    return typeof t === "string" ? t : Array.isArray(t) ? t[0] : undefined;
  }, [router.query.token]);

  const [stars, setStars] = useState<number>(0);
  const [text, setText] = useState<string>("");
  const [attachments, setAttachments] = useState<UploadedFile[]>([]);
  const [submitting, setSubmitting] = useState(false);
  const [done, setDone] = useState<null | { id?: string }>(null);
  const [error, setError] = useState<string | null>(null);

  const [loadingToken, setLoadingToken] = useState(true);
  const [tokenInfo, setTokenInfo] = useState<TokenInfo | null>(null);

  // load token meta
  useEffect(() => {
    let cancelled = false;
    async function load() {
      if (!isReady) return;
      if (!token) {
        setLoadingToken(false);
        setTokenInfo(null);
        return;
      }
      setLoadingToken(true);
      setError(null);
      try {
        const r = await fetch(`/api/review-token?token=${encodeURIComponent(token)}`);
        if (!r.ok) {
          // 404 = مش مشكلة؛ هنشتغل بالتوكن فقط
          if (!cancelled) setTokenInfo({ tokenId: token });
          return;
        }
        const j = await r.json();
        if (!cancelled) {
          setTokenInfo({
            tokenId: token,
            orderId: j?.orderId || undefined,
            storeName: j?.storeName || undefined,
            customerName: j?.customer?.name || undefined,
            expired: Boolean(j?.expired),
            voided: Boolean(j?.voided),
          });
        }
      } catch {
        if (!cancelled) setTokenInfo({ tokenId: token });
      } finally {
        if (!cancelled) setLoadingToken(false);
      }
    }
    load();
    return () => {
      cancelled = true;
    };
  }, [isReady, token]);

  // fallback: استخدم token كـ orderId لو API ماقدّمش orderId
  const orderId = useMemo(() => tokenInfo?.orderId || token || "", [tokenInfo?.orderId, token]);

  async function submit() {
    if (!token) {
      setError("الرابط غير صالح.");
      return;
    }
    if (!orderId) {
      setError("رقم الطلب غير موجود في الرابط.");
      return;
    }
    if (stars < 1 || stars > 5) {
      setError("اختر تقييمًا من 1 إلى 5 نجوم");
      return;
    }
    if (tokenInfo?.expired) {
      setError("عفوًا، انتهت صلاحية رابط التقييم.");
      return;
    }
    if (tokenInfo?.voided) {
      setError("عفوًا، تم إلغاء رابط التقييم.");
      return;
    }

    setSubmitting(true);
    setError(null);
    try {
      const body: SubmitBody = {
        orderId,
        stars,
        text,
        images: attachments.map((f) => f.cdnUrl),
        tokenId: token,
        platform: "web",
      };

      const res = await fetch("/api/reviews/submit", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });
      const data = await res.json();

      if (!res.ok || data?.error) {
        const msg =
          data?.message ||
          (data?.error === "missing_orderId" ? "رقم الطلب مفقود."
          : data?.error === "duplicate_review" ? "تم استلام تقييم لهذا الطلب بالفعل."
          : data?.error === "token_order_mismatch" ? "الرمز لا يطابق رقم الطلب."
          : data?.error === "token_expired" ? "انتهت صلاحية الرمز."
          : data?.error === "token_voided" ? "تم إلغاء الرمز."
          : data?.error || "تعذّر إرسال التقييم.");
        throw new Error(msg);
      }

      setDone({ id: data?.id });
    } catch (e: unknown) {
      const msg = e instanceof Error ? e.message : "خطأ غير متوقع";
      setError(msg);
    } finally {
      setSubmitting(false);
    }
  }

  // waiting for router/query
  if (!isReady) {
    return (
      <main className="min-h-screen flex items-center justify-center p-6">
        <p className="text-gray-600">جارٍ التحميل…</p>
      </main>
    );
  }

  // invalid link (no token)
  if (!token) {
    return (
      <main className="min-h-screen flex items-center justify-center p-6">
        <div className="max-w-md w-full bg-white border rounded-2xl p-8 shadow" dir="rtl">
          <h1 className="text-xl font-bold text-red-700 mb-2">الرابط غير صالح</h1>
          <p className="text-gray-600">يرجى التأكد من فتح الرابط الكامل المرسل إليك.</p>
        </div>
      </main>
    );
  }

  // initial token meta loading
  if (loadingToken) {
    return (
      <main className="min-h-screen flex items-center justify-center p-6">
        <p className="text-gray-600">جارٍ التحقق من الرابط…</p>
      </main>
    );
  }

  // success page
  if (done) {
    return (
      <>
        <Head><title>شكرًا لتقييمك | ثقة</title></Head>
        <main className="min-h-screen flex items-center justify-center p-6">
          <div className="max-w-md w-full bg-white border rounded-2xl p-8 shadow" dir="rtl">
            <h1 className="text-2xl font-bold text-green-700 mb-2">شكرًا لتقييمك! ✅</h1>
            <p className="text-gray-600 mb-6">تم استلام تقييمك بنجاح{done.id ? ` (#${done.id})` : ""}.</p>
            <Link href="/" className="inline-block px-4 py-2 rounded bg-green-600 text-white">العودة للصفحة الرئيسية</Link>
          </div>
        </main>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>قيّم تجربتك | ثقة</title>
        <meta name="robots" content="noindex" />
      </Head>
      <main className="min-h-screen flex items-center justify-center bg-gradient-to-br from-emerald-50 to-lime-50 p-6">
        <div className="max-w-2xl w-full bg-white border rounded-2xl p-6 shadow" dir="rtl">
          <h1 className="text-2xl font-bold text-emerald-800 mb-1">قيّم تجربتك</h1>
          <p className="text-gray-600 mb-6">
            {tokenInfo?.storeName
              ? <>من فضلك قيّم تجربتك مع <b>{tokenInfo.storeName}</b>{tokenInfo.customerName ? <> — {tokenInfo.customerName}</> : null}</>
              : "الرجاء مشاركة رأيك لتحسين الخدمة"}
          </p>

          <div className="mb-5">
            <div className="flex gap-2" role="radiogroup" aria-label="تقييم النجوم">
              {[1, 2, 3, 4, 5].map((n) => (
                <button
                  key={n}
                  type="button"
                  onClick={() => setStars(n)}
                  className={`text-3xl ${n <= stars ? "text-yellow-400" : "text-gray-300"}`}
                  aria-checked={n === stars}
                  role="radio"
                  aria-label={`تقييم ${n}`}
                >
                  ★
                </button>
              ))}
            </div>
            <p className="text-sm text-gray-500 mt-1">اختر من 1 إلى 5 نجوم</p>
          </div>

          <div className="mb-5">
            <label className="block text-sm text-gray-700 mb-1">ملاحظاتك (اختياري)</label>
            <textarea
              className="w-full border rounded-lg p-3 min-h-[120px]"
              placeholder="اكتب تعليقك هنا…"
              value={text}
              onChange={(e) => setText(e.target.value)}
              maxLength={3000}
            />
            <p className="text-xs text-gray-400 mt-1">{text.length}/3000</p>
          </div>

          <div className="mb-6">
            <label className="block text-sm text-gray-700 mb-2">صور التجربة (اختياري)</label>
            <UploadcareWidget value={attachments} onChange={setAttachments} />
          </div>

          {tokenInfo?.expired && (
            <p className="text-amber-700 bg-amber-50 border border-amber-200 rounded p-2 mb-4">
              انتهت صلاحية رابط التقييم. يمكن أن لا يتم قبول الإرسال.
            </p>
          )}
          {tokenInfo?.voided && (
            <p className="text-red-700 bg-red-50 border border-red-200 rounded p-2 mb-4">
              تم إلغاء رابط التقييم من المتجر.
            </p>
          )}

          {error && <p className="text-red-600 mb-4">{error}</p>}

          <button
            type="button"
            onClick={submit}
            disabled={submitting}
            className="w-full py-3 rounded-lg bg-emerald-600 text-white font-semibold hover:bg-emerald-700 transition disabled:opacity-60"
          >
            {submitting ? "جارٍ الإرسال…" : "إرسال التقييم"}
          </button>

          <div className="mt-4 text-xs text-gray-400">
            <div>رمز التوكن: {token ?? "—"}</div>
            <div>رقم الطلب: {orderId || "—"}</div>
          </div>
        </div>
      </main>
    </>
  );
}
====[ END FILE: src/pages/review/[token].tsx ]======================================================

====[ START FILE: src/pages/reviews.tsx (3.9 KB) ]==================================================
'use client';

import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import axios from 'axios';
import { motion } from 'framer-motion';
import { Star } from 'lucide-react';

interface Review {
  name?: string;
  stars: number;
  comment?: string;
  createdAt?: string;
}

export default function ReviewsPage() {
  const router = useRouter();
  const { storeName, productId } = router.query;

  const [loading, setLoading] = useState(true);
  const [reviews, setReviews] = useState<Review[]>([]);
  const [average, setAverage] = useState(0);
  const [total, setTotal] = useState(0);

  useEffect(() => {
    if (!storeName) return;

    axios
      .get('/api/get-reviews', { params: { storeName, productId } })
      .then((res) => {
        setReviews(res.data.reviews || []);
        setAverage(res.data.average || 0);
        setTotal(res.data.total || 0);
      })
      .finally(() => setLoading(false));
  }, [storeName, productId]);

  if (!storeName) return <div className="p-6 text-red-600">⚠️ يرجى تحديد المتجر</div>;
  if (loading) return <div className="p-6 text-gray-500">⏳ جارٍ التحميل...</div>;

  return (
    <main className="min-h-screen bg-gradient-to-br from-black to-[#0f1f1a] text-white font-sans relative overflow-hidden">
      {/* خلفية مرسومة بسيطة */}
      <div className="absolute inset-0 bg-[radial-gradient(#1f2f2a_1px,transparent_1px)] [background-size:20px_20px] opacity-10 z-0" />

      {/* الترويسة */}
      <motion.header
        className="relative z-10 text-center py-14"
        initial={{ opacity: 0, y: -30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 1 }}
      >
        <h1 className="text-4xl md:text-5xl font-bold text-[#39FF14] tracking-wide drop-shadow">
          تقييمات <span className="text-white">{storeName}</span>
        </h1>
        <p className="mt-4 text-lg text-[#0ABAB5]">
          ⭐ متوسط: <strong>{average.toFixed(1)}</strong> من 5 ({total} تقييم)
        </p>
      </motion.header>

      {/* محتوى التقييمات */}
      <section className="relative z-10 max-w-3xl mx-auto p-6 space-y-8">
        {reviews.length === 0 ? (
          <motion.p
            className="text-center text-gray-400"
            initial={{ scale: 0.9, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            transition={{ duration: 0.6 }}
          >
            لا توجد تقييمات بعد.
          </motion.p>
        ) : (
          reviews.map((r, i) => (
            <motion.div
              key={i}
              className="bg-[#111] border border-[#1d3a31] rounded-xl p-6 shadow-xl hover:shadow-green-700/30 transition duration-300"
              initial={{ opacity: 0, x: 40 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: i * 0.2, duration: 0.6 }}
            >
              <div className="flex items-center justify-between mb-2">
                <div className="flex gap-1">
                  {[...Array(5)].map((_, idx) => (
                    <Star
                      key={idx}
                      className={`w-5 h-5 ${idx < r.stars ? 'text-yellow-400' : 'text-gray-600'}`}
                      fill={idx < r.stars ? 'currentColor' : 'none'}
                    />
                  ))}
                </div>
                {r.name && <span className="text-sm text-gray-400">— {r.name}</span>}
              </div>
              {r.comment && <p className="text-gray-100 mt-2 leading-relaxed">{r.comment}</p>}
              {r.createdAt && (
                <p className="text-xs text-gray-500 mt-3">
                  {new Date(r.createdAt).toLocaleDateString('ar-EG')}
                </p>
              )}
            </motion.div>
          ))
        )}
      </section>
    </main>
  );
}
====[ END FILE: src/pages/reviews.tsx ]=============================================================

====[ START FILE: src/pages/salla/oauth-info.tsx (902 B) ]==========================================
export default function SallaOAuthInfo() {
  const base = process.env.NEXT_PUBLIC_APP_URL || process.env.APP_BASE_URL || "";
  return (
    <main dir="rtl" style={{maxWidth:760,margin:"40px auto",fontFamily:"Tahoma,Arial"}}>
      <h1>مصادقة سلة — النمط السهل (Easy OAuth)</h1>
      <ol>
        <li>التاجر يثبّت التطبيق من متجر سلة.</li>
        <li>سلة ترسل حدث <code>app.store.authorize</code> إلى <code>/api/salla/webhook</code>.</li>
        <li>نحفظ <b>access_token</b> و <b>refresh_token</b> في <code>salla_tokens</code>، وننشئ/نحدّث <code>stores</code>.</li>
        <li>نرسل بريدًا ترحيبيًا للتاجر يحتوي رابط لوحة التحكم.</li>
      </ol>
      <p>نقطة الفحص: <code>{base}/api/salla/verify?uid=salla:&lt;storeId&gt;</code></p>
    </main>
  );
}
====[ END FILE: src/pages/salla/oauth-info.tsx ]====================================================

====[ START FILE: src/pages/signup.tsx (5.6 KB) ]===================================================
'use client';

import { useState, FormEvent } from 'react';
import { getAuth, createUserWithEmailAndPassword, AuthError } from 'firebase/auth';
import { app, db } from '@/lib/firebase';
import { doc, setDoc } from 'firebase/firestore';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { toast, Toaster } from 'sonner';
import { motion } from 'framer-motion';
import { Mail, Key, Store, Loader2 } from 'lucide-react';
import Link from 'next/link';
import Image from 'next/image';
import { useRouter } from 'next/navigation';

export default function SignupPage() {
  const router = useRouter();
  const auth = getAuth(app);

  const [email, setEmail] = useState<string>('');
  const [password, setPassword] = useState<string>('');
  const [storeName, setStoreName] = useState<string>('');
  const [loading, setLoading] = useState<boolean>(false);

  const handleSignup = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setLoading(true);

    try {
      const userCred = await createUserWithEmailAndPassword(auth, email, password);
      const uid = userCred.user.uid;

      // نحفظ المتجر ومعه حالات الربط المبدئية لزد وسلّة (غير متصل)
      await setDoc(doc(db, 'stores', uid), {
        storeName,
        email,
        createdAt: new Date().toISOString(),
        zid: { connected: false, tokens: null },
        salla: { connected: false, tokens: null },
      });

      toast.success('🎉 تم إنشاء الحساب — اختر منصة الربط في الخطوة التالية');
      // بدلاً من فرض /connect/zid نحول لصفحة الاختيار
      router.push('/connect');
    } catch (err) {
      const error = err as AuthError;
      const messages: Record<string, string> = {
        'auth/email-already-in-use': 'البريد الإلكتروني مستخدم بالفعل.',
        'auth/invalid-email': 'البريد الإلكتروني غير صالح.',
        'auth/weak-password': 'كلمة المرور ضعيفة. يجب أن تكون 6 أحرف على الأقل.',
      };
      toast.error(messages[error.code] || 'حدث خطأ أثناء التسجيل');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-[#e3f4e0] via-[#f0fdf4] to-[#d9f2e3] px-4">
      <Toaster position="top-center" />
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
        className="w-full max-w-lg bg-white border border-[#cce4d5] shadow-xl rounded-2xl p-8"
      >
        {/* Header */}
        <div className="text-center space-y-4">
          <Image src="/logo.png" alt="Logo" width={60} height={60} className="mx-auto" />
          <h1 className="text-2xl font-bold text-[#004225]">✨ أنشئ حسابك في ثِقَة</h1>
          <p className="text-sm text-gray-600">سجّل خلال دقيقة، ثم اختر ربط زد أو سلّة</p>
        </div>

        {/* Form */}
        <form onSubmit={handleSignup} className="space-y-5 mt-6">
          {/* Store Name */}
          <div className="relative">
            <Store className="absolute left-3 top-1/2 -translate-y-1/2 text-[#004225]/60" />
            <Input
              type="text"
              placeholder="اسم المتجر"
              required
              className="pl-10 border border-[#cbe4d6] rounded-lg text-gray-800 bg-[#f6fff9] focus:ring-[#b1e1c5]"
              value={storeName}
              onChange={(e) => setStoreName(e.target.value)}
            />
          </div>

          {/* Email */}
          <div className="relative">
            <Mail className="absolute left-3 top-1/2 -translate-y-1/2 text-[#004225]/60" />
            <Input
              type="email"
              placeholder="البريد الإلكتروني"
              required
              dir="ltr"
              className="pl-10 border border-[#cbe4d6] rounded-lg text-gray-800 bg-[#f6fff9] focus:ring-[#b1e1c5]"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
          </div>

          {/* Password */}
          <div className="relative">
            <Key className="absolute left-3 top-1/2 -translate-y-1/2 text-[#004225]/60" />
            <Input
              type="password"
              placeholder="كلمة المرور"
              required
              dir="ltr"
              className="pl-10 border border-[#cbe4d6] rounded-lg text-gray-800 bg-[#f6fff9] focus:ring-[#b1e1c5]"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
          </div>

          {/* Signup Button */}
          <Button
            type="submit"
            disabled={loading}
            className="w-full py-2 bg-[#a3d9b1] hover:bg-[#93cea3] text-[#004225] font-semibold rounded-lg transition flex items-center justify-center gap-2"
          >
            {loading ? <Loader2 className="animate-spin" /> : '🚀 إنشاء الحساب'}
          </Button>

          {/* Login Link */}
          <p className="text-center text-sm text-gray-600 mt-2">
            لديك حساب؟{' '}
            <Link href="/login" className="text-[#004225] underline hover:text-[#006e46] transition-colors">
              تسجيل الدخول
            </Link>
          </p>
        </form>
      </motion.div>
    </div>
  );
}
====[ END FILE: src/pages/signup.tsx ]==============================================================

====[ START FILE: src/pages/support.tsx (5.4 KB) ]==================================================
'use client';

import { useState } from 'react';
import NavbarLanding from '@/components/NavbarLanding';
import axios from 'axios';
import { motion } from 'framer-motion';

export default function SupportPage() {
  const [form, setForm] = useState({ name: '', email: '', message: '' });
  const [status, setStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setStatus('loading');
    try {
      await axios.post('/api/support-ticket', form);
      setForm({ name: '', email: '', message: '' });
      setStatus('success');
    } catch {
      setStatus('error');
    }
  };

  const faqs = [
    {
      q: 'كيف يمكنني ربط متجري مع ثقة؟',
      a: 'من خلال لوحة التحكم في الإعدادات، اختر "الربط مع المتجر"، واتبع التعليمات.',
    },
    {
      q: 'هل التقييمات تُعرض تلقائيًا؟',
      a: 'نعم، يتم عرض التقييمات تلقائيًا بعد مراجعتها والتأكد من عدم وجود إساءة.',
    },
    {
      q: 'كيف أتلقى التقييمات؟',
      a: 'يتم إرسال رابط التقييم تلقائيًا بعد الشراء عبر واتساب أو SMS أو بريد إلكتروني.',
    },
  ];

  return (
    <main className="bg-white text-[#0e1e1a] font-sans min-h-screen overflow-x-hidden">
      <NavbarLanding />
      <div className="h-20" />

      {/* Hero Section */}
      <section className="py-16 text-center bg-gradient-to-b from-green-50 to-white">
        <motion.h1
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-4xl font-extrabold text-green-900"
        >
          الدعم والمساعدة
        </motion.h1>
        <motion.p
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.3, duration: 0.8 }}
          className="mt-4 text-gray-600"
        >
          نحن هنا لخدمتك. إذا كان لديك أي استفسار أو مشكلة، لا تتردد في التواصل معنا.
        </motion.p>
      </section>

      {/* Support Form */}
      <section className="max-w-4xl mx-auto px-6 py-12">
        <motion.form
          onSubmit={handleSubmit}
          initial={{ opacity: 0, y: 40 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.7 }}
          viewport={{ once: true }}
          className="bg-green-50 p-6 rounded-xl shadow space-y-4"
        >
          <h2 className="text-xl font-semibold text-green-700 mb-4">أرسل تذكرة دعم</h2>

          <input
            required
            type="text"
            placeholder="الاسم"
            className="w-full border border-green-200 rounded-lg p-3"
            value={form.name}
            onChange={(e) => setForm({ ...form, name: e.target.value })}
          />
          <input
            required
            type="email"
            placeholder="البريد الإلكتروني"
            className="w-full border border-green-200 rounded-lg p-3"
            value={form.email}
            onChange={(e) => setForm({ ...form, email: e.target.value })}
          />
          <textarea
            required
            placeholder="رسالتك"
            className="w-full border border-green-200 rounded-lg p-3 h-32"
            value={form.message}
            onChange={(e) => setForm({ ...form, message: e.target.value })}
          />

          <button
            type="submit"
            className="bg-green-700 text-white py-3 px-6 rounded-lg hover:bg-green-800 transition"
            disabled={status === 'loading'}
          >
            {status === 'loading' ? 'جارٍ الإرسال...' : 'إرسال التذكرة'}
          </button>

          {status === 'success' && (
            <p className="text-green-600 mt-2">✅ تم إرسال التذكرة بنجاح. سنتواصل معك قريبًا.</p>
          )}
          {status === 'error' && (
            <p className="text-red-600 mt-2">❌ حدث خطأ أثناء الإرسال. حاول مرة أخرى لاحقًا.</p>
          )}
        </motion.form>
      </section>

      {/* FAQs Section */}
      <section className="max-w-4xl mx-auto px-6 pb-16">
        <motion.h2
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 0.8 }}
          className="text-xl font-semibold text-green-700 mb-6"
        >
          الأسئلة الشائعة
        </motion.h2>

        <div className="space-y-4">
          {faqs.map((faq, i) => (
            <motion.details
              key={i}
              initial={{ opacity: 0, y: 10 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: i * 0.2, duration: 0.5 }}
              viewport={{ once: true }}
              className="bg-gray-50 p-4 rounded-lg border border-gray-200"
            >
              <summary className="cursor-pointer font-medium text-green-800">{faq.q}</summary>
              <p className="mt-2 text-gray-700">{faq.a}</p>
            </motion.details>
          ))}
        </div>
      </section>
    </main>
  );
}
====[ END FILE: src/pages/support.tsx ]=============================================================

====[ START FILE: src/pages/terms.tsx (3.4 KB) ]====================================================
'use client';

import Head from 'next/head';
import Image from 'next/image';
import NavbarLanding from '@/components/NavbarLanding';
import { motion } from 'framer-motion';

export default function TermsPage() {
  return (
    <>
      <Head>
        <title>الشروط والأحكام - ثقة</title>
        <meta
          name="description"
          content="تعرف على الشروط والأحكام لاستخدام منصة ثقة لجمع التقييمات."
        />
      </Head>

      <main className="bg-white text-[#0e1e1a] font-sans overflow-x-hidden">
        <NavbarLanding />
        <div className="h-20" />

        {/* Hero Section */}
        <section className="flex flex-col items-center justify-center text-center py-16 bg-gradient-to-b from-green-50 to-white">
          <motion.div
            initial={{ opacity: 0, scale: 0.85 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 1 }}
          >
            <Image src="/logo.png" alt="شعار ثقة" width={110} height={110} />
          </motion.div>
          <motion.h1
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3, duration: 0.8 }}
            className="mt-4 text-4xl font-extrabold text-green-900"
          >
            الشروط والأحكام
          </motion.h1>
        </section>

        {/* Content Section */}
        <section className="max-w-3xl mx-auto px-6 py-16 space-y-12">
          {[
            {
              title: '١. الموافقة على الشروط',
              text: 'باستخدامك لمنصة ثقة، فإنك توافق على الالتزام بجميع الشروط والسياسات المعلنة.',
            },
            {
              title: '٢. الاستخدام القانوني',
              text: 'لا يجوز استخدام المنصة لأي غرض غير قانوني أو ينتهك القوانين المحلية أو الدولية.',
            },
            {
              title: '٣. التعديلات',
              text: 'تحتفظ ثقة بالحق في تعديل الشروط والأحكام في أي وقت، ويتم إعلامك بذلك عبر البريد الإلكتروني أو إشعار داخل المنصة.',
            },
            {
              title: '٤. الاستمرارية',
              text: 'استمرار استخدامك للمنصة بعد التعديلات يعني موافقتك الضمنية على الشروط المحدثة.',
            },
          ].map((item, idx) => (
            <motion.div
              key={idx}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: idx * 0.2, duration: 0.6 }}
              viewport={{ once: true }}
              className="bg-green-50 p-6 rounded-xl shadow-sm"
            >
              <h2 className="text-2xl font-bold text-green-800 mb-2">{item.title}</h2>
              <p className="text-gray-700 leading-relaxed">{item.text}</p>
            </motion.div>
          ))}
        </section>

        {/* Footer */}
        <footer className="bg-green-100 py-6 text-center text-sm text-green-900 border-t border-green-200">
          <p>© 2025 ثقة - جميع الحقوق محفوظة</p>
        </footer>
      </main>
    </>
  );
}
====[ END FILE: src/pages/terms.tsx ]===============================================================

====[ START FILE: src/server/auth/requireAdmin.ts (913 B) ]=========================================
// src/server/auth/requireAdmin.ts
import type { NextApiRequest } from 'next';
import { authAdmin } from '@/lib/firebaseAdmin';
import type { DecodedIdToken } from 'firebase-admin/auth';

function hasAdminClaim(t: DecodedIdToken): t is DecodedIdToken & { admin?: unknown } {
  return typeof t === 'object' && t !== null && 'admin' in t;
}

export async function requireAdmin(req: NextApiRequest): Promise<{ uid: string }> {
  const header = req.headers.authorization || '';
  const token = header.startsWith('Bearer ') ? header.slice(7) : null;
  if (!token) throw new Error('no_token');

  const auth = authAdmin();
  const decoded = await auth.verifyIdToken(token);
  if (!decoded || !decoded.uid) throw new Error('invalid_token');

  const isAdmin = hasAdminClaim(decoded) ? Boolean(decoded.admin) : false;
  if (!isAdmin) throw new Error('forbidden');

  return { uid: decoded.uid };
}
====[ END FILE: src/server/auth/requireAdmin.ts ]===================================================

====[ START FILE: src/server/auth/requireUser.ts (572 B) ]==========================================
// src/server/auth/requireUser.ts
import type { NextApiRequest } from "next";
import { authAdmin } from "@/lib/firebaseAdmin";

export async function requireUser(
  req: NextApiRequest
): Promise<{ uid: string; email: string | null }> {
  const authz = req.headers.authorization || "";
  const m = authz.match(/^Bearer\s+(.+)$/i);
  const token = m?.[1];

  if (!token) {
    throw new Error("unauthenticated: missing bearer");
  }

  const decoded = await authAdmin().verifyIdToken(token);
  return { uid: decoded.uid, email: decoded.email ?? null };
}
====[ END FILE: src/server/auth/requireUser.ts ]====================================================

====[ START FILE: src/server/firebase-admin.ts (342 B) ]============================================
// src/server/firebase-admin.ts
// 🔁 Re-export the single canonical admin instance from src/lib/firebaseAdmin.ts
export { dbAdmin as getDb, authAdmin as getAuthAdmin } from "@/lib/firebaseAdmin";

// Optional shim to satisfy older imports (no-op; lib handles singleton)
export function initFirebaseAdminIfNeeded() {
  /* noop */
}
====[ END FILE: src/server/firebase-admin.ts ]======================================================

====[ START FILE: src/server/idempotency.ts (919 B) ]===============================================
// src/server/idempotency.ts
import { dbAdmin } from '@/lib/firebaseAdmin';

export async function withEventOnce<T>(key: string, fn: () => Promise<T>): Promise<{ ok: true; skipped?: true; out?: T }> {
  const ref = dbAdmin().collection('processed_events').doc(key);
  return dbAdmin().runTransaction(async (tx) => {
    const snap = await tx.get(ref);
    if (snap.exists) return { ok: true, skipped: true as const };
    tx.set(ref, { createdAt: Date.now() });
    const out = await fn();
    return { ok: true, out };
  });
}

export async function ensureSingleInviteKey(storeUid: string, orderId: string): Promise<string> {
  const id = `invite:${storeUid}:${orderId}`;
  const ref = dbAdmin().collection('invite_unique').doc(id);
  await dbAdmin().runTransaction(async (tx) => {
    const s = await tx.get(ref);
    if (!s.exists) tx.set(ref, { createdAt: Date.now() });
  });
  return id;
}
====[ END FILE: src/server/idempotency.ts ]=========================================================

====[ START FILE: src/server/messaging/email-dmail.ts (1.5 KB) ]====================================
// src/server/messaging/email-dmail.ts
import nodemailer from "nodemailer";

export type EmailSendResult =
  | { ok: true; id: string | null }
  | { ok: false; error: string };

function getConfig() {
  const host = process.env.DMAIL_SMTP_HOST || "mailserver.dmail.sa";
  const port = Number(process.env.DMAIL_SMTP_PORT || 465);
  const user = process.env.DMAIL_SMTP_USER || "";
  const pass = process.env.DMAIL_SMTP_PASS || "";
  const from = process.env.DMAIL_FROM || user || "ثقة <no-reply@theqah.com.sa>";
  if (!user || !pass) throw new Error("Missing DMAIL_SMTP_USER/PASS");
  return { host, port, user, pass, from };
}

function stripHtml(html: string): string {
  return html
    .replace(/<style[\s\S]*?<\/style>/gi, "")
    .replace(/<script[\s\S]*?<\/script>/gi, "")
    .replace(/<[^>]+>/g, " ")
    .replace(/\s+/g, " ")
    .trim();
}

export async function sendEmailDmail(
  to: string,
  subject: string,
  html: string,
  textFallback?: string
): Promise<EmailSendResult> {
  const { host, port, user, pass, from } = getConfig();

  const transporter = nodemailer.createTransport({
    host,
    port,
    secure: port === 465,
    auth: { user, pass },
  });

  try {
    const info = await transporter.sendMail({
      from,
      to,
      subject,
      html,
      text: textFallback ?? stripHtml(html),
    });
    return { ok: true, id: info.messageId || null };
  } catch (e) {
    const msg = e instanceof Error ? e.message : String(e);
    return { ok: false, error: msg };
  }
}
====[ END FILE: src/server/messaging/email-dmail.ts ]===============================================

====[ START FILE: src/server/messaging/invite-text.ts (318 B) ]=====================================
// src/server/messaging/invite-text.ts
export function buildFixedInviteText(name: string, storeName: string, link: string) {
  const n = name || "عميلنا";
  const s = storeName || "متجرنا";
  return `مرحباً ${n}، قيم تجربتك من ${s}: ${link} وساهم في إسعاد يتيم!`;
}
====[ END FILE: src/server/messaging/invite-text.ts ]===============================================

====[ START FILE: src/server/messaging/phone.ts (674 B) ]===========================================
import { dbAdmin } from '@/lib/firebaseAdmin';

export function normalizeMsisdn(phone: string): string {
  let s = (phone || '').replace(/[^\d+]/g, '');
  if (!s) return '';
  if (s.startsWith('00')) s = s.slice(2);
  if (s.startsWith('+')) s = s.slice(1);
  if (s.startsWith('0')) s = '966' + s.slice(1);        // SA leading 0 => 966
  if (/^[5]\d{8}$/.test(s)) s = '966' + s;              // local 9 digits starting 5
  return s;
}

export async function isOptedOut(phone: string): Promise<boolean> {
  const p = normalizeMsisdn(phone);
  if (!p) return true;
  const doc = await dbAdmin().collection('optouts_sms').doc(p).get();
  return doc.exists;
}
====[ END FILE: src/server/messaging/phone.ts ]=====================================================

====[ START FILE: src/server/messaging/send-invite.ts (7.8 KB) ]====================================
// src/server/messaging/send-invite.ts
import { getDb } from "@/server/firebase-admin";
import { sendSms } from "./send-sms";
import { sendEmailDmail } from "./email-dmail";
import { warn } from "@/lib/logger";
import { buildReviewSms } from "./templates";

export type Country = "sa"; // السعودية فقط الآن
export type Channel = "sms" | "email";

// نضيف timestamp داخل Attempt عشان نعرف أول قناة نجحت فعليًا حتى مع التنفيذ المتوازي
type MessageResult = { ok: boolean; id?: string | null; error?: string | null };

export async function recordInviteChannel(
  inviteId: string,
  channel: Channel,
  result: { ok: boolean; error?: string | null; id?: string | null }
) {
  const db = getDb();
  const ref = db.collection("review_invites").doc(inviteId);
  await ref.set(
    {
      lastSentAt: Date.now(),
      sentChannels: {
        [channel]: {
          ok: !!result.ok,
          id: result.id ?? null,
          error: result.error ?? null,
          at: Date.now(),
        },
      },
    },
    { merge: true }
  );
}

export interface TryChannelsOptions {
  inviteId?: string;
  country: Country; // ثابت "sa"
  phone?: string;
  email?: string;
  customerName?: string;
  storeName?: string;
  url: string;
  /**
   * "all": ابعت كل القنوات معًا (متوازي) — (الموصى به)
   * "first_success": يكتفي بأول نجاح (هنحدده بعد التنفيذ المتوازي حسب أسرع نجاح)
   */
  strategy?: "all" | "first_success";
  /** ترتيب القنوات (لأولوية تحديد أول نجاح فقط) */
  order?: Channel[];
}

export type Attempt = {
  channel: Channel;
  ok: boolean;
  id?: string | null;
  error?: string | null;
  at?: number; // وقت اكتمال المحاولة (ms)
};

export type TryChannelsResult = {
  ok: boolean;
  firstSuccessChannel: Channel | null;
  attempts: Attempt[];
};

/** تطبيع نتيجة أي مزوّد لشكل موحّد */
function asMessageResult(r: unknown): MessageResult {
  if (r && typeof r === "object") {
    const o = r as Record<string, unknown>;
    const ok = Boolean(o.ok);
    const id =
      typeof o.id === "string" ? o.id : o.id == null ? null : String(o.id);
    const error = typeof o.error === "string" ? o.error : null;
    return { ok, id: id ?? null, error };
  }
  return { ok: false, id: null, error: "INVALID_RESULT" };
}

/**
 * ✅ تعديل جذري:
 * - نجمع مهام الإرسال في Array ونشغّلها معًا بـ Promise.allSettled
 * - نرفع أولوية SMS + transactional + نطلب DLR + نثبّت الدولة للسعودية
 * - نرجّع أول قناة نجحت فعليًا (الأسرع) باستخدام timestamps
 */
export async function tryChannels(opts: TryChannelsOptions): Promise<TryChannelsResult> {
  const strategy = opts.strategy || "all";
  const name = opts.customerName || "العميل";
  const store = opts.storeName || "المتجر";

  // نصوص القنوات
  const smsText = buildReviewSms(name, store, opts.url);
  const html = `
    <div dir="rtl" style="font-family:Tahoma,Arial,sans-serif;line-height:1.8">
      <p>مرحباً ${name}،</p>
      <p>يعطيك العافية على طلبك من <strong>${store}</strong>.</p>
      <p>وش رأيك تشاركنا رأيك؟ تقييمك يهمنا ويساعد غيرك 😊</p>
      <p>
        <a href="${opts.url}" style="background:#16a34a;color:#fff;padding:10px 18px;border-radius:8px;text-decoration:none;display:inline-block">
          اضغط للتقييم الآن
        </a>
      </p>
      <p style="color:#64748b">شكراً لك — فريق ثقة</p>
    </div>
  `.trim();

  // الترتيب الافتراضي: SMS ثم Email
  const defaultOrder: Channel[] = ["sms", "email"];
  const order: Channel[] = (opts.order && opts.order.length ? opts.order : defaultOrder);

  // نجمع المهام المتاحة (حسب وجود phone/email)
  type Task = () => Promise<Attempt>;
  const tasks: Task[] = [];

  // helper: يسجّل Attempt ويكتب في review_invites لو فيه inviteId
  const finalizeAttempt = async (attempt: Attempt) => {
    if (opts.inviteId) {
      await recordInviteChannel(opts.inviteId, attempt.channel, {
        ok: attempt.ok,
        id: attempt.id ?? null,
        error: attempt.error ?? null,
      });
    }
    return attempt;
  };

  // 🇸🇦 خيارات SMS للسعودية فقط + تسريع التسليم:
  const smsOpts = {
    defaultCountry: "SA" as const,
    msgClass: "transactional" as const,
    priority: 1 as const,      // أعلى من الافتراضي
    requestDlr: true as const, // نحتاج تتبع التسليم
  };

  if (opts.phone) {
    tasks.push(async () => {
      try {
        const r = await sendSms(opts.phone!, smsText, smsOpts);
        const mr = asMessageResult(r);
        const attempt: Attempt = {
          channel: "sms",
          ok: mr.ok,
          id: mr.id ?? null,
          error: mr.error ?? null,
          at: Date.now(),
        };
        return finalizeAttempt(attempt);
      } catch (e) {
        const errMsg = e instanceof Error ? e.message : String(e);
        warn("sms.send.failed", { e: errMsg });
        return finalizeAttempt({
          channel: "sms",
          ok: false,
          id: null,
          error: errMsg,
          at: Date.now(),
        });
      }
    });
  }

  if (opts.email) {
    tasks.push(async () => {
      try {
        const r = await sendEmailDmail(opts.email!, "وش رأيك؟ نبي نسمع منك", html);
        const mr = asMessageResult(r);
        const attempt: Attempt = {
          channel: "email",
          ok: mr.ok,
          id: mr.id ?? null,
          error: mr.error ?? null,
          at: Date.now(),
        };
        return finalizeAttempt(attempt);
      } catch (e) {
        const errMsg = e instanceof Error ? e.message : String(e);
        warn("email.send.failed", { e: errMsg });
        return finalizeAttempt({
          channel: "email",
          ok: false,
          id: null,
          error: errMsg,
          at: Date.now(),
        });
      }
    });
  }

  // لو مفيش ولا قناة متاحة
  if (tasks.length === 0) {
    return { ok: false, firstSuccessChannel: null, attempts: [] };
  }

  // ✅ تنفيذ متوازي للقنوات
  const settled = await Promise.allSettled(tasks.map((t) => t()));
  const attempts: Attempt[] = settled.map((s) =>
    s.status === "fulfilled" ? s.value : { channel: "sms", ok: false, id: null, error: "TASK_FAILED", at: Date.now() }
  );

  // ok العام:
  const ok = attempts.some((a) => a.ok);

  // تحديد أول قناة نجحت فعليًا (الأسرع) بناءً على at + ترتيب تفضيلي (order)
  let firstSuccessChannel: Channel | null = null;
  const successAttempts = attempts.filter((a) => a.ok && a.at);
  if (successAttempts.length > 0) {
    // رتب حسب الزمن أولًا، ولو تعادل نرجّح حسب order
    successAttempts.sort((a, b) => {
      if ((a.at! - b.at!) !== 0) return a.at! - b.at!;
      // ترجيح حسب order لو متساويين في الزمن
      return order.indexOf(a.channel) - order.indexOf(b.channel);
    });
    firstSuccessChannel = successAttempts[0].channel;
  }

  // لو الاستراتيجية first_success وكان فيه نجاح — تمام. لو مفيش نجاح — ok=false بالفعل
  // في "all" إحنا دايمًا شغّلنا الاثنين معًا؛ ده المطلوب علشان يصلوا في نفس الوقت.

  return { ok, firstSuccessChannel, attempts };
}
====[ END FILE: src/server/messaging/send-invite.ts ]===============================================

====[ START FILE: src/server/messaging/send-rejection.ts (1.9 KB) ]=================================
// src/server/messaging/send-rejection.ts
import { sendSms } from "./send-sms";

import { sendEmailDmail as sendEmail } from "./email-dmail";

export async function notifyRejection({
  phone,
  email,
  name,
  storeName,
  reasonKey, // abuse | spam | irrelevant | policy | image_policy ...
}: {
  phone?: string;
  email?: string;
  name?: string;
  storeName?: string;
  reasonKey: string;
}) {
  const n = name || "عميلنا العزيز";
  const s = storeName || "متجرنا";
  const reasonMap: Record<string, string> = {
    abuse: "لوجود ألفاظ غير لائقة",
    spam: "لاشتمالها على روابط/محتوى غير مناسب",
    irrelevant: "لعدم ارتباطها بالتجربة",
    policy: "لمخالفتها معايير النشر",
    image_policy: "لاحتواء الصور على محتوى غير مناسب",
  };
  const why = reasonMap[reasonKey] || "لمخالفتها معايير النشر";

  const smsText = `مرحباً ${n}، نشكرك على وقتك. نأسف لإعلامك بأن مراجعتك لم يتم نشرها ${why}. يسعدنا استقبال نسخة منقّحة وسنقوم بمراجعتها مرة أخرى.`;
  const emailHtml = `
    <div dir="rtl" style="font-family:Tahoma,Arial,sans-serif;line-height:1.7">
      <p>مرحباً ${n}،</p>
      <p>شكرًا لمشاركتك رأيك حول ${s}. بعد المراجعة، تعذّر نشر التقييم ${why}.</p>
      <p>نقدّر ملاحظاتك كثيرًا، ويمكنك إرسال نسخة منقّحة ليتسنى لنا قبولها.</p>
      <p style="color:#64748b">مع خالص التقدير</p>
    </div>
  `;

  const tasks: Array<Promise<unknown>> = [];
  if (phone) {
    
    tasks.push(sendSms(phone, smsText));
  }
  if (email) {
    tasks.push(sendEmail(email, "اعتذار بخصوص نشر التقييم", emailHtml));
  }
  await Promise.allSettled(tasks);
}
====[ END FILE: src/server/messaging/send-rejection.ts ]============================================

====[ START FILE: src/server/messaging/send-sms.ts (7.8 KB) ]=======================================
// src/server/messaging/send-sms.ts
// عميل إرسال SMS عبر OurSMS + قالب الرسالة الموحد + رابر sendSms(to, text, opts?)

type MsgClass = "transactional" | "promotional" | "";

export type SendSMSParams = {
  to: string | string[];         // رقم واحد أو مجموعة أرقام (E.164 مفضل)
  text: string;                  // نص الرسالة
  customId?: string | null;      // معرف خاص بك يظهر في تقاريرهم (اختياري)
  priority?: 0 | 1 | 2 | 3 | 4;  // 1 أعلى أولوية - 0 = تلقائي (افتراضي)
  delayMinutes?: number;         // تأخير بالدقائق (افتراضي 0)
  validityMinutes?: number;      // صلاحية بالدقائق (افتراضي 0 = أقصى مدة)
  msgClass?: MsgClass;           // "transactional" | "promotional" | ""
  requestDlr?: boolean;          // DLR لو مدعوم (افتراضي false)
};

export type OursmsSendResult = {
  jobId: string;
  customId: string | null;
  total: number;
  rejected: number;
  accepted: number;
  duplicates: number;
  cost: number;
  acceptedMsgs?: unknown;
  rejectedMsgs?: unknown;
  statusCode?: number | null;
  statusDesc?: string | null;
  message?: string | null;
};

export type SendSmsOptions = {
  defaultCountry?: "SA" | "EG";
  msgClass?: MsgClass;
  requestDlr?: boolean;
  priority?: 0 | 1 | 2 | 3 | 4;
  delayMinutes?: number;
  validityMinutes?: number;
};

// النتيجة القياسية المتوقّعة من بقية المشروع (تتوافق مع tryChannels)
export type SendSmsResult = {
  ok: boolean;
  id: string | null;
  error: string | null;
};

function env(name: string, fallback?: string) {
  const v = process.env[name];
  return (v && v.trim()) || fallback || "";
}

// ---------- القالب الموحّد ----------
export function buildInviteSMS(storeName: string | null | undefined, link: string) {
  const s = (storeName || "").trim() || "متجرك";

  // قابل للتخصيص من ENV (اختياري):
  // INVITE_SMS_TEMPLATE="مرحباً، قيّم تجربتك من {{store}}: {{link}} وساهم في إسعاد يتيم!"
  const tpl = env("INVITE_SMS_TEMPLATE");
  if (tpl) {
    return tpl.replace(/\{\{store\}\}/g, s).replace(/\{\{link\}\}/g, link);
  }

  // الافتراضي المطلوب
  return `مرحباً، قيّم تجربتك من ${s}: ${link} وساهم في إسعاد يتيم!`;
}

// ---------- تطبيع رقم الهاتف إلى E.164 (مبسّط لـ SA/EG) ----------
function normalizePhone(raw: string, def?: "SA" | "EG"): string {
  const digits = String(raw).replace(/[^\d+]/g, "");
  if (digits.startsWith("+")) return digits;
  if (digits.startsWith("00")) return `+${digits.slice(2)}`;
  if (digits.startsWith("0")) {
    if (def === "SA") return `+966${digits.slice(1)}`;
    if (def === "EG") return `+20${digits.slice(1)}`;
  }
  if (def === "SA") return `+966${digits}`;
  if (def === "EG") return `+20${digits}`;
  return digits;
}

// ---------- الإرسال عبر OurSMS ----------
export async function sendSMSViaOursms(params: SendSMSParams) {
  const API_KEY = env("OURSMS_API_KEY");
  if (!API_KEY) {
    throw new Error("OURSMS_API_KEY is missing");
  }

  const BASE = env("OURSMS_BASE_URL", "https://api.oursms.com");
  const SENDER = env("OURSMS_SENDER"); // يجب أن يكون مُعتمد في بعض الدول

  const {
    to,
    text,
    //eslint-disable-next-line @typescript-eslint/no-unused-vars
    customId = null,
    priority = 0,
    delayMinutes = 0,
    validityMinutes = 0,
    msgClass = "",
    requestDlr = false,
  } = params;

  const dests = Array.isArray(to) ? to : [to];
  const url = `${BASE.replace(/\/+$/, "")}/msgs/sms`;

  const body = {
    src: SENDER || "oursms",
    dests,
    body: text,
    priority,
    delay: delayMinutes,
    validity: validityMinutes,
    maxParts: 0,
    dlr: requestDlr ? 1 : 0,
    prevDups: 0,
    msgClass: msgClass || undefined,
    // customId: يمكن إضافته إذا كان حسابك يدعمه في هذا المسار
  };

  const res = await fetch(url, {
    method: "POST",
    headers: {
      Authorization: `Bearer ${API_KEY}`,
      "Content-Type": "application/json",
    },
    body: JSON.stringify(body),
  });

  if (!res.ok) {
    const textErr = await res.text().catch(() => "");
    throw new Error(`oursms_http_${res.status}${textErr ? `: ${textErr}` : ""}`);
  }

  const json = (await res.json().catch(() => ({}))) as Partial<OursmsSendResult>;

  return {
    ok: true as const,
    result: {
      jobId: String(json.jobId || ""),
      customId: (json.customId ?? null) as string | null,
      total: Number(json.total ?? 0),
      rejected: Number(json.rejected ?? 0),
      accepted: Number(json.accepted ?? 0),
      duplicates: Number(json.duplicates ?? 0),
      cost: Number(json.cost ?? 0),
      acceptedMsgs: json.acceptedMsgs ?? null,
      rejectedMsgs: json.rejectedMsgs ?? null,
      statusCode: (json.statusCode ?? null) as number | null,
      statusDesc: (json.statusDesc ?? null) as string | null,
      message: (json.message ?? null) as string | null,
    } as OursmsSendResult,
  };
}

// ---------- (اختياري) رصيد الحساب ----------
export async function getOursmsCredits() {
  const API_KEY = env("OURSMS_API_KEY");
  const BASE = env("OURSMS_BASE_URL", "https://api.oursms.com");
  if (!API_KEY) throw new Error("OURSMS_API_KEY is missing");

  const url = `${BASE.replace(/\/+$/, "")}/billing/credits`;
  const res = await fetch(url, {
    headers: { Authorization: `Bearer ${API_KEY}` },
  });
  if (!res.ok) {
    const t = await res.text().catch(() => "");
    throw new Error(`oursms_http_${res.status}${t ? `: ${t}` : ""}`);
  }
  return res.json();
}

// ---------- (اختياري) سحب DLRs ----------
export async function getOursmsDlrs(count = 100) {
  const API_KEY = env("OURSMS_API_KEY");
  const BASE = env("OURSMS_BASE_URL", "https://api.oursms.com");
  if (!API_KEY) throw new Error("OURSMS_API_KEY is missing");

  const url = `${BASE.replace(/\/+$/, "")}/inbox/dlrs?count=${Math.min(
    Math.max(1, count),
    500
  )}`;
  const res = await fetch(url, {
    headers: { Authorization: `Bearer ${API_KEY}` },
  });
  if (!res.ok) {
    const t = await res.text().catch(() => "");
    throw new Error(`oursms_http_${res.status}${t ? `: ${t}` : ""}`);
  }
  return res.json();
}

// ---------- الرابر الموحّد المطلوب من بقية المشروع ----------
export async function sendSms(
  to: string | string[],
  text: string,
  opts?: SendSmsOptions
): Promise<SendSmsResult> {
  // 🇸🇦 افتراض السعودية الآن
  const defaultCountry: "SA" = (opts?.defaultCountry ?? "SA") as "SA";

  const dests = (Array.isArray(to) ? to : [to]).map((n) =>
    normalizePhone(n, defaultCountry)
  );

  // إعدادات افتراضية مسرِّعة للتسليم في KSA
  const msgClass: MsgClass = opts?.msgClass ?? "transactional";
  const priority: 0 | 1 | 2 | 3 | 4 = opts?.priority ?? 1;
  const requestDlr = opts?.requestDlr ?? true;
  const delayMinutes = opts?.delayMinutes ?? 0;
  const validityMinutes = opts?.validityMinutes ?? 0;

  try {
    const res = await sendSMSViaOursms({
      to: dests,
      text,
      msgClass,
      requestDlr,
      priority,
      delayMinutes,
      validityMinutes,
    });

    const id = res.result?.jobId ? String(res.result.jobId) : null;
    return { ok: !!res?.ok, id, error: null };
  } catch (e) {
    const errMsg = e instanceof Error ? e.message : String(e);
    return { ok: false, id: null, error: errMsg };
  }
}

// اجعل الرابر هو الـ default export أيضاً
export default sendSms;
====[ END FILE: src/server/messaging/send-sms.ts ]==================================================

====[ START FILE: src/server/messaging/sms-length.ts (755 B) ]======================================
// src/server/messaging/sms-length.ts
const GSM7 =
  "@£$¥èéùìòÇ\nØø\rÅåΔ_ΦΓΛΩΠΨΣΘΞ\u0020!\"#¤%&'()*+,-./0123456789:;<=>?" +
  "¡ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÑÜ§¿abcdefghijklmnopqrstuvwxyzäöñüà";

function isGsm7(s: string): boolean {
  for (const ch of s) if (!GSM7.includes(ch)) return false;
  return true;
}

export function estimateSegments(
  s: string
): { segments: number; encoding: 'GSM-7' | 'UCS-2' } {
  const gsm = isGsm7(s);
  const single = gsm ? 160 : 70;
  const concat = gsm ? 153 : 67;
  if (s.length <= single) return { segments: 1, encoding: gsm ? 'GSM-7' : 'UCS-2' };
  const segs = Math.ceil(s.length / concat);
  return { segments: segs, encoding: gsm ? 'GSM-7' : 'UCS-2' };
}
====[ END FILE: src/server/messaging/sms-length.ts ]================================================

====[ START FILE: src/server/messaging/templates.ts (437 B) ]=======================================
// src/server/messaging/templates.ts
// ✅ قالب SMS موحّد — لازم يطابق التدقيق حرفيًا (لاحظ ::)
export function buildReviewSms(customerName: string, storeName: string, url: string) {
  const name = customerName || 'العميل';
  const store = storeName || 'المتجر';
  return `مرحباً ${name}، قيم تجربتك من ${store}:: ${url} وساهم في إسعاد يتيم!`;
}
====[ END FILE: src/server/messaging/templates.ts ]=================================================

====[ START FILE: src/server/messaging/texts.ts (929 B) ]===========================================
export type InviteKind = 'first' | 'reminder';

export function buildInviteText(opts: {
  locale: 'ar'|'en'; customerName: string; storeName: string; url: string; kind?: InviteKind;
}) {
  const k = opts.kind || 'first';
  if (opts.locale === 'en') {
    const base = k==='reminder'
      ? `Reminder: ${opts.customerName || 'dear customer'}, rate your experience with ${opts.storeName}: ${opts.url}`
      : `Hi ${opts.customerName || 'dear customer'}, rate your experience with ${opts.storeName}: ${opts.url}`;
    return `${base} and help make an orphan smile!`;
  }
  const name = (opts.customerName || 'عميلنا العزيز').trim();
  const base = k==='reminder'
    ? `تذكير: ${name}، قيّم تجربتك من ${opts.storeName}: ${opts.url}`
    : `مرحباً ${name}، قيّم تجربتك من ${opts.storeName}: ${opts.url}`;
  return `${base} وساهم في إسعاد يتيم!`;
}
====[ END FILE: src/server/messaging/texts.ts ]=====================================================

====[ START FILE: src/server/moderation/checkReview.ts (5.6 KB) ]===================================
// دمج قواعد سريعة + OpenAI Moderation API + فحص صور (Vision)
// يتعامل مع النص وحده أو النص + قائمة صور CDN (Uploadcare)

import OpenAI from "openai";
// أنواع الرسائل/الأجزاء المتوافقة مع chat.completions
import type {
  ChatCompletionMessageParam,
  ChatCompletionContentPart,
} from "openai/resources/chat/completions";

const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

// ===== Types =====
export type Category = "abuse" | "spam" | "irrelevant" | "policy";

export type ModerationVerdict =
  | { allowed: true; reasons?: string[] }
  | { allowed: false; reasons: string[]; category: Category };

// ===== Rules & Consts =====
const BAD_WORDS = ["شتيمة1", "شتيمة2", "قذف", "عنصرية", "اباحي", "تهديد"]; // حدّث القائمة
const MAX_LEN = 3000;
const UCARE = /^https:\/\/ucarecdn\.com\//i;

// ===== Quick Heuristics =====
function quickHeuristics(
  text: string
): { ok: boolean; cat?: Category; reason?: string } {
  const clean = text.slice(0, MAX_LEN);
  const lc = clean.toLowerCase();

  if (BAD_WORDS.some((w) => lc.includes(w))) {
    return { ok: false, cat: "abuse", reason: "bad_words" };
  }
  const urls = clean.match(/https?:\/\/\S+/gi) || [];
  if (urls.length > 3) return { ok: false, cat: "spam", reason: "too_many_links" };
  if (clean.trim().length < 2) return { ok: false, cat: "irrelevant", reason: "too_short" };

  return { ok: true };
}

// ===== OpenAI Text Moderation =====
type ModerationsAPIResult = {
  results?: Array<{
    flagged?: boolean;
    categories?: Record<string, boolean>;
  }>;
};

async function checkTextWithModerationApi(
  text: string
): Promise<{ flagged: boolean; reasons: string[] }> {
  try {
    const resp = await client.moderations.create({
      model: "omni-moderation-latest",
      input: text,
    });

    const m = resp as unknown as ModerationsAPIResult;
    const r = m.results?.[0];
    const flagged = Boolean(r?.flagged);
    const cats = r?.categories || {};
    const reasons = Object.keys(cats).filter((k) => cats[k]);
    return { flagged, reasons };
  } catch {
    return { flagged: false, reasons: [] };
  }
}

// ===== Vision on Images (GPT-4o family) =====
async function checkImagesWithVision(
  imageUrls: string[]
): Promise<{ flagged: boolean; reasons: string[] }> {
  const urls = (imageUrls || []).filter((u) => UCARE.test(u)).slice(0, 4);
  if (!urls.length) return { flagged: false, reasons: [] };

  try {
    // محتوى المستخدم: نص إرشادي + صور
    const userParts: ChatCompletionContentPart[] = [
      {
        type: "text",
        text:
          "حلّل الصور التالية واخبرني إن كان فيها: إباحية/عري صريح، عنف بشع، إيذاء، رموز كراهية، أو نص مسيء ظاهر بالصورة. " +
          "أعطني تلخيصًا قصيرًا باللغة الإنجليزية أو العربية يتضمن الكلمات المفتاحية المكتشفة.",
      },
      ...urls.map<ChatCompletionContentPart>((u) => ({
        type: "image_url",
        image_url: { url: u },
      })),
    ];

    const messages: ChatCompletionMessageParam[] = [
      {
        role: "system",
        content:
          "You are a strict safety image moderator. Return a short summary including keywords found (e.g., nudity, violence, hate, harassment).",
      },
      { role: "user", content: userParts },
    ];

    const resp = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages,
      temperature: 0,
    });

    const out = String(resp.choices?.[0]?.message?.content || "").toLowerCase();

    const flagged =
      /\b(nudity|sexual|porn|explicit|gore|violence|hate|harassment|abuse|illegal)\b/.test(out) ||
      /\b(مخل|إباح|عري|عنيف|كراهية|إساءة)\b/.test(out);

    const reasons: string[] = [];
    if (/(?:\bnudity\b|sexual|porn|explicit|عري|إباح)/i.test(out)) reasons.push("image_nudity");
    if (/(?:\bviolence\b|gore|عنيف)/i.test(out)) reasons.push("image_violence");
    if (/(?:\bhate\b|harassment|abuse|كراهية|إساءة)/i.test(out)) reasons.push("image_abuse");

    return { flagged, reasons: reasons.length ? reasons : flagged ? ["image_policy"] : [] };
  } catch {
    return { flagged: false, reasons: [] };
  }
}

// ===== Unified API =====
/**
 * واجهة موحَّدة تُرجع allow/reject مع سبب.
 * images: روابط Uploadcare (اختياري)
 */
export async function checkReviewModeration(
  text: string,
  images?: string[]
): Promise<ModerationVerdict> {
  const t = String(text || "").slice(0, MAX_LEN);

  // 0) قواعد سريعة
  const quick = quickHeuristics(t);
  if (!quick.ok) return { allowed: false, reasons: [quick.reason || "rule"], category: quick.cat! };

  // 1) OpenAI Text Moderation
  const textMod = await checkTextWithModerationApi(t);
  if (textMod.flagged) {
    return {
      allowed: false,
      reasons: textMod.reasons.length ? textMod.reasons : ["policy"],
      category: "policy",
    };
  }

  // 2) Vision على الصور (لو موجودة)
  const imgMod = await checkImagesWithVision(images || []);
  if (imgMod.flagged) {
    return {
      allowed: false,
      reasons: imgMod.reasons.length ? imgMod.reasons : ["image_policy"],
      category: "policy",
    };
  }

  // 3) مسموح
  return { allowed: true };
}

export default checkReviewModeration;
====[ END FILE: src/server/moderation/checkReview.ts ]==============================================

====[ START FILE: src/server/moderation/index.ts (3.6 KB) ]=========================================
// src/server/moderation/index.ts
import { Filter } from "bad-words";
import { moderateByApi, ApiModerationDecision } from "./openai-moderation";
import { moderateByPrompt, PromptDecision } from "./prompt";

/* ======================
   Profanity Filter (واحد فقط)
====================== */
const badWordsFilter = new Filter({ placeHolder: "*" });

/* ======================
   Types
====================== */

export type ModerationInput = {
  text: string;
  images?: string[];
  stars?: number;
  costSaving?: boolean;
};

export type ModerationResult = {
  ok: boolean;
  reason?: string;
  flags?: string[];
  categories?: Record<string, boolean>;
  model?: string;
  score?: number;
  needsManualCheck?: boolean;
  sources?: {
    api?: ApiModerationDecision;
    prompt?: PromptDecision;
  };
};

/* ======================
   Utilities
====================== */
function unionCategories(
  a: Record<string, boolean> = {},
  b: Record<string, boolean> = {}
): Record<string, boolean> {
  const keys = new Set<string>([...Object.keys(a), ...Object.keys(b)]);
  const out: Record<string, boolean> = {};
  keys.forEach((k) => (out[k] = Boolean(a[k] || b[k])));
  return out;
}

/* ======================
   Hybrid Moderator
====================== */
export type HybridDecision = {
  flagged: boolean;
  reasons: string[];
  categories: Record<string, boolean>;
  confidence?: number;
  model: "hybrid(api+prompt)";
  needsManualCheck?: boolean;
  sources: {
    api?: ApiModerationDecision;
    prompt?: PromptDecision;
  };
};

async function moderateHybrid(
  text: string,
  opts?: { costSaving?: boolean }
): Promise<HybridDecision> {
  const costSaving = Boolean(opts?.costSaving);

  const api = await moderateByApi(text);

  let prompt: PromptDecision | undefined;
  const needPrompt = !costSaving || api.flagged || api.timedOut;
  if (needPrompt) {
    prompt = await moderateByPrompt(text);
  }

  const flagged = Boolean(api.flagged || (prompt?.flagged ?? false));
  const reasons = prompt?.reasons?.length ? prompt.reasons : [];
  const categories = unionCategories(api.categories || {}, prompt?.categories || {});
  const needsManualCheck = Boolean(api.timedOut || (prompt?.timedOut ?? false));
  const confidence = prompt?.confidence;

  return {
    flagged,
    reasons,
    categories,
    confidence,
    model: "hybrid(api+prompt)",
    needsManualCheck,
    sources: { api, prompt },
  };
}

/* ======================
   Public Entry
====================== */
export async function moderateReview(input: ModerationInput): Promise<ModerationResult> {
  const text = (input.text || "").trim();
  const flags: string[] = [];

  // 1) قواعد سريعة
  if (text.length > 4000) {
    return { ok: false, reason: "too_long", flags: ["too_long"] };
  }
  if (/(https?:\/\/|www\.)/i.test(text)) {
    flags.push("has_links");
  }
  if (badWordsFilter.isProfane(text)) {
    flags.push("bad_words");
  }

  // 2) Hybrid AI
  const h = await moderateHybrid(text, { costSaving: input.costSaving });

  if (h.flagged) {
    return {
      ok: false,
      reason: h.reasons[0] || "ai_reject",
      flags: Array.from(new Set([...(h.reasons || []), ...flags])),
      categories: h.categories,
      model: h.model,
      score: h.confidence,
      needsManualCheck: h.needsManualCheck,
      sources: h.sources,
    };
  }

  // 3) مقبول
  return {
    ok: true,
    flags,
    categories: h.categories,
    model: h.model,
    score: h.confidence,
    needsManualCheck: h.needsManualCheck,
    sources: h.sources,
  };
}
====[ END FILE: src/server/moderation/index.ts ]====================================================

====[ START FILE: src/server/moderation/openai-moderation.ts (2.7 KB) ]=============================
import OpenAI from 'openai';

export type ApiModerationDecision = {
  flagged: boolean;
  categories: Record<string, boolean>;
  category_scores?: Record<string, number>;
  model: string;
  timedOut?: boolean;
};

const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

function withTimeout<T>(p: Promise<T>, ms = 4000): Promise<T> {
  return new Promise((resolve, reject) => {
    const t = setTimeout(() => reject(new Error('moderation_timeout')), ms);
    p.then((v) => { clearTimeout(t); resolve(v); })
     .catch((e) => { clearTimeout(t); reject(e); });
  });
}

// تحويل آمن لأي كائن إلى Record<string, boolean>
function toRecordBool(obj: unknown): Record<string, boolean> {
  if (!obj || typeof obj !== 'object') return {};
  const out: Record<string, boolean> = {};
  for (const [k, v] of Object.entries(obj as Record<string, unknown>)) {
    out[k] = Boolean(v);
  }
  return out;
}

// تحويل آمن لأي كائن إلى Record<string, number>
function toRecordNum(obj: unknown): Record<string, number> {
  if (!obj || typeof obj !== 'object') return {};
  const out: Record<string, number> = {};
  for (const [k, v] of Object.entries(obj as Record<string, unknown>)) {
    const num = typeof v === 'number' ? v : Number(v);
    out[k] = Number.isFinite(num) ? num : 0;
  }
  return out;
}

export async function moderateByApi(text: string): Promise<ApiModerationDecision> {
  const base: ApiModerationDecision = {
    flagged: false, categories: {}, model: 'omni-moderation-latest',
  };
  const content = (text || '').trim();
  if (!content) return base;

  for (let attempt = 0; attempt < 2; attempt++) {
    try {
      const resp = await withTimeout(
        client.moderations.create({ model: 'omni-moderation-latest', input: content }),
        4000
      );

      const r = resp.results?.[0] as unknown;

      const flagged = Boolean((r as { flagged?: boolean } | undefined)?.flagged);
      const categories = toRecordBool((r as { categories?: unknown } | undefined)?.categories);
      const scores = toRecordNum((r as { category_scores?: unknown } | undefined)?.category_scores);

      return {
        flagged,
        categories,
        category_scores: Object.keys(scores).length ? scores : undefined,
        model: resp.model || base.model,
      };
    } catch (e: unknown) {
      const status = (e as { status?: number })?.status;
      if (attempt === 0 && typeof status === 'number' && (status === 429 || status >= 500)) {
        await new Promise((r) => setTimeout(r, 300 + Math.random() * 300));
        continue;
      }
      return { ...base, timedOut: true };
    }
  }

  return { ...base, timedOut: true };
}
====[ END FILE: src/server/moderation/openai-moderation.ts ]========================================

====[ START FILE: src/server/moderation/prompt.ts (3.1 KB) ]========================================
import OpenAI from 'openai';

export type PromptDecision = {
  flagged: boolean;
  reasons: string[];
  categories: {
    hate?: boolean; harassment?: boolean; sexual?: boolean; self_harm?: boolean;
    profanity?: boolean; violence?: boolean; spam?: boolean;
  };
  confidence?: number;
  model: string;
  timedOut?: boolean;
};

const client = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

function sleep(ms: number) { return new Promise((r) => setTimeout(r, ms)); }

function safeParse<T>(text: string): T | null {
  try {
    return JSON.parse(text) as T;
  } catch {
    return null;
  }
}

export async function moderateByPrompt(text: string): Promise<PromptDecision> {
  const content = (text || '').trim();
  const base: PromptDecision = {
    flagged: false, reasons: [], categories: {}, confidence: 0, model: 'gpt-4o-mini',
  };
  if (!content) return base;

  const systemPrompt = `
أنت مُصنّف محتوى عربي/إنجليزي. أعد **JSON فقط** (بدون أي نص إضافي) بالشكل التالي:
{
  "flagged": boolean,
  "reasons": string[],   // بالعربية وباقتضاب
  "categories": { "hate"?: boolean, "harassment"?: boolean, "sexual"?: boolean, "self_harm"?: boolean, "profanity"?: boolean, "violence"?: boolean, "spam"?: boolean },
  "confidence": number   // من 0 إلى 1
}
ضع flagged=true لو النص يحتوي إساءة/بذاءة صارخة/كراهية/تحرّش/محتوى جنسي صريح/عنف/إيذاء نفس/سبّ مباشر/تهديد. لو نقد محترم أو لهجة عامية غير مهينة → flagged=false.
`.trim();

  for (let attempt = 0; attempt < 2; attempt++) {
    try {
      const resp = await client.chat.completions.create({
        model: 'gpt-4o-mini',
        temperature: 0,
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: `النص:\n${content}` },
        ],
      });

      const out = resp.choices?.[0]?.message?.content ?? '';
      const parsed = safeParse<PromptDecision>(out);
      if (parsed && typeof parsed.flagged === 'boolean' && parsed.categories) {
        return {
          flagged: parsed.flagged,
          reasons: Array.isArray(parsed.reasons) ? parsed.reasons : [],
          categories: parsed.categories || {},
          confidence: typeof parsed.confidence === 'number' ? parsed.confidence : undefined,
          model: resp.model ?? base.model,
        };
      }

      // لو رجّع نص غير JSON، حاول برومبت أقصر
      if (attempt === 0) {
        await sleep(250);
        continue;
      }
      return { ...base, timedOut: true };
    } catch (e: unknown) {
      // خطأ عابر (429/5xx) جرّب مرة كمان
      const status = (e as { status?: number })?.status;
      if (attempt === 0 && typeof status === 'number' && (status === 429 || status >= 500)) {
        await sleep(300 + Math.random() * 300);
        continue;
      }
      return { ...base, timedOut: true };
    }
  }

  return { ...base, timedOut: true };
}
====[ END FILE: src/server/moderation/prompt.ts ]===================================================

====[ START FILE: src/server/notifications.ts (487 B) ]=============================================
// src/server/notifications.ts
export async function sendSMS(to: string, text: string) {
  console.log("[SMS]", { to, text });
  return { ok: true as const };
}
export async function sendWhatsApp(to: string, text: string) {
  console.log("[WA]", { to, text });
  return { ok: true as const };
}
export async function sendEmail(to: string, subject: string, html?: string) {
  console.log("[EMAIL]", { to, subject, hasHtml: Boolean(html) });
  return { ok: true as const };
}
====[ END FILE: src/server/notifications.ts ]=======================================================

====[ START FILE: src/server/rate-limit.ts (914 B) ]================================================
// src/server/rate-limit.ts
import { dbAdmin } from '@/lib/firebaseAdmin';

type RateDoc = { count: number; resetAt: number };

export async function rateLimit(key: string, limit: number, windowSec: number) {
  const ref = dbAdmin().collection('ratelimits').doc(key);
  const now = Date.now();
  const windowMs = windowSec * 1000;

  const res = await dbAdmin().runTransaction(async (tx) => {
    const snap = await tx.get(ref);
    let count = 1;
    let resetAt = now + windowMs;
    if (snap.exists) {
      const d = snap.data() as Partial<RateDoc>;
      if (d.resetAt && now < d.resetAt) {
        count = (d.count ?? 0) + 1;
        resetAt = d.resetAt;
      }
    }
    tx.set(ref, { count, resetAt } as RateDoc, { merge: true });
    return { count, resetAt };
  });

  return { allowed: res.count <= limit, remaining: Math.max(0, limit - res.count), resetAt: res.resetAt };
}
====[ END FILE: src/server/rate-limit.ts ]==========================================================

====[ START FILE: src/server/review-tokens.ts (2.1 KB) ]============================================
// src/server/review-tokens.ts
import { getDb } from "@/server/firebase-admin";

export type CreateTokenInput = {
  orderId: string;           // معرّف الطلب (من زد/سلة)
  storeUid: string;          // معرّف المتجر عندك
  productId: string;         // بديل منطقي لو غير متوفر من الحدث (مثلاً = orderId)
  name: string;              // اسم للعرض (مثلاً "تقييم طلب 123 - متجر ثقة")
  expiresAt: number;         // توقيت الانتهاء (Epoch ms)
  recipientPhone?: string;   // اختياري: رقم جوال بصيغة E.164
  recipientEmail?: string;   // اختياري: بريد العميل
  channel?: "sms" | "whatsapp" | "email" | "multi";
};

export type ReviewTokenDoc = CreateTokenInput & {
  id: string;
  createdAt: number;
  usedAt: number | null;
  voidedAt?: number | null;
  voidReason?: string | null;
};

export async function createReviewToken(input: CreateTokenInput): Promise<{ id: string }> {
  if (!input.orderId || !input.storeUid || !input.productId || !input.name || !input.expiresAt) {
    throw new Error("createReviewToken: missing required fields");
  }

  const db = getDb();
  const id = db.collection("review_tokens").doc().id;

  const doc: ReviewTokenDoc = {
    id,
    orderId: input.orderId,
    storeUid: input.storeUid,
    productId: input.productId,
    name: input.name,
    expiresAt: input.expiresAt,
    recipientPhone: input.recipientPhone,
    recipientEmail: input.recipientEmail,
    channel: input.channel ?? "multi",
    createdAt: Date.now(),
    usedAt: null,
    voidedAt: null,
    voidReason: null,
  };

  await db.collection("review_tokens").doc(id).set(doc);
  return { id };
}

export async function getReviewTokenById(id: string) {
  const db = getDb();
  const snap = await db.collection("review_tokens").doc(id).get();
  if (!snap.exists) return null;
  const d = snap.data() as ReviewTokenDoc;

  return {
    id: snap.id,
    storeUid: d.storeUid,
    productId: d.productId,
    usedAt: d.usedAt,
  };
}
====[ END FILE: src/server/review-tokens.ts ]=======================================================

====[ START FILE: src/server/reviews/invites.ts (1.2 KB) ]==========================================
import { dbAdmin } from '@/lib/firebaseAdmin';
import crypto from 'crypto';
import { ensureSingleInviteKey } from '../idempotency';

export type Invite = {
  id: string; token: string; orderId: string; storeUid: string;
  customerPhone: string; status: 'pending'|'sent'|'consumed'|'expired'|'canceled';
  createdAt: number; expiresAt: number; reminded?: boolean;
};

export async function getOrCreateInvite(storeUid: string, orderId: string, customerPhone: string, ttlDays=30): Promise<Invite> {
  await ensureSingleInviteKey(storeUid, orderId);

  const q = await dbAdmin().collection('review_invites')
    .where('storeUid','==',storeUid).where('orderId','==',orderId).limit(1).get();
  if (!q.empty) return q.docs[0].data() as Invite;

  const token = crypto.randomBytes(24).toString('hex');
  const now = Date.now();
  const inv: Invite = {
    id: crypto.createHash('sha1').update(`${storeUid}:${orderId}`).digest('hex'),
    token, orderId, storeUid, customerPhone,
    status: 'pending', createdAt: now, expiresAt: now + ttlDays*24*60*60*1000,
  };
  await dbAdmin().collection('review_invites').doc(inv.id).set(inv, { merge: true });
  return inv;
}
====[ END FILE: src/server/reviews/invites.ts ]=====================================================

====[ START FILE: src/server/salla/oauth.ts (3.1 KB) ]==============================================
import crypto from "crypto";

const AUTH_URL = "https://accounts.salla.sa/oauth2/auth";
const TOKEN_URL = "https://accounts.salla.sa/oauth2/token";
const USER_INFO_URL = "https://accounts.salla.sa/oauth2/user/info";

export function buildAuthUrl(opts: { state: string }) {
  const params = new URLSearchParams({
    client_id: process.env.SALLA_CLIENT_ID || "",
    response_type: "code",
    redirect_uri: process.env.SALLA_REDIRECT_URI || "",
    scope: process.env.SALLA_SCOPES || "orders.read customers.read webhooks.read_write",
    state: opts.state,
  });
  return `${AUTH_URL}?${params.toString()}`;
}

export async function exchangeCodeForToken(code: string) {
  const body = new URLSearchParams({
    grant_type: "authorization_code",
    code,
    redirect_uri: process.env.SALLA_REDIRECT_URI || "",
    client_id: process.env.SALLA_CLIENT_ID || "",
    client_secret: process.env.SALLA_CLIENT_SECRET || "",
  });
  const res = await fetch(TOKEN_URL, {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded" },
    body,
  });
  if (!res.ok) {
    const text = await res.text();
    throw new Error(`Token exchange failed: ${res.status} ${text}`);
  }
  return (await res.json()) as {
    access_token: string;
    refresh_token?: string;
    token_type: "Bearer";
    expires_in: number; // seconds
    scope?: string;
  };
}

export async function refreshAccessToken(refresh_token: string) {
  const body = new URLSearchParams({
    grant_type: "refresh_token",
    refresh_token,
    client_id: process.env.SALLA_CLIENT_ID || "",
    client_secret: process.env.SALLA_CLIENT_SECRET || "",
  });
  const res = await fetch(TOKEN_URL, {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded" },
    body,
  });
  if (!res.ok) throw new Error(`Refresh failed: ${res.status} ${await res.text()}`);
  return (await res.json()) as {
    access_token: string;
    refresh_token?: string;
    token_type: "Bearer";
    expires_in: number;
    scope?: string;
  };
}

export async function getUserInfo(access_token: string) {
  const res = await fetch(USER_INFO_URL, {
    headers: { Authorization: `Bearer ${access_token}` },
  });
  if (!res.ok) throw new Error(`User info failed: ${res.status} ${await res.text()}`);
  //eslint-disable-next-line @typescript-eslint/no-explicit-any
  return (await res.json()) as any;
}

/** state توقيع والتحقق من  */
export function signState(raw: string) {
  const key = process.env.APP_STATE_SECRET || "dev_secret";
  const sig = crypto.createHmac("sha256", key).update(raw).digest("hex");
  return `${raw}.${sig}`;
}
export function verifyState(signed: string) {
  const i = signed.lastIndexOf(".");
  if (i <= 0) return null;
  const raw = signed.slice(0, i);
  const sig = signed.slice(i + 1);
  const key = process.env.APP_STATE_SECRET || "dev_secret";
  const check = crypto.createHmac("sha256", key).update(raw).digest("hex");
  const ok =
    sig.length === check.length && crypto.timingSafeEqual(Buffer.from(sig), Buffer.from(check));
  return ok ? raw : null;
}
====[ END FILE: src/server/salla/oauth.ts ]=========================================================

====[ START FILE: src/server/salla/webhook-verify.ts (950 B) ]======================================
import crypto from "crypto";

/**
 * Salla ترسل:
 *  - X-Salla-Security-Strategy: Signature
 *  - X-Salla-Signature: sha256 HMAC of raw body using webhook secret (hex, 64 chars)
 */
export function verifySallaWebhook(rawBody: Buffer, headerSignature: string | undefined) {
  const secret = process.env.SALLA_WEBHOOK_SECRET || "";
  if (!secret || !headerSignature) return false;
  const expected = crypto.createHmac("sha256", secret).update(rawBody).digest("hex");
  const a = Buffer.from(headerSignature, "utf8");
  const b = Buffer.from(expected, "utf8");
  return a.length === b.length && crypto.timingSafeEqual(a, b);
}

/** اصنع مفتاح Idempotency ثابت من التوقيع + حجم/هاش البودي */
export function makeIdemKey(signature: string | undefined, rawBody: Buffer) {
  const h = crypto.createHash("sha256").update(`${signature || ""}|`).update(rawBody).digest("hex");
  return h; // 64-hex
}
====[ END FILE: src/server/salla/webhook-verify.ts ]================================================

====[ START FILE: src/server/short-links.ts (2.0 KB) ]==============================================
import { getDb } from "@/server/firebase-admin";

export type ShortLinkDoc = {
  id: string;       // الكود القصير
  code: string;     // نفس id لسهولة القراءة
  targetUrl: string;
  url?: string;     // للتوافق الخلفي
  createdAt: number;
  lastHitAt?: number | null;
  hits?: number;
};

const COLL = "short_links";

function genCode(len = 8) {
  return Math.random().toString(36).slice(2, 2 + len);
}
function sanitizeBase(url: string) {
  return url.replace(/\/+$/, "");
}
function isValidTarget(u: string) {
  if (!u) return false;
  if (/undefined/i.test(u)) return false;
  try {
    const x = new URL(u);
    if (!/^https?:$/.test(x.protocol)) return false;
    if (/\/review\/?$/.test(x.pathname)) return false;
    return true;
  } catch {
    return false;
  }
}

export async function createShortLink(targetUrl: string): Promise<string> {
  const db = getDb();
  if (!isValidTarget(targetUrl)) throw new Error("invalid_target_url");

  let code = genCode(8);
  const ref = db.collection(COLL).doc(code);
  if ((await ref.get()).exists) code = genCode(8);

  const doc: ShortLinkDoc = {
    id: code,
    code,
    targetUrl,
    url: targetUrl,
    createdAt: Date.now(),
    hits: 0,
    lastHitAt: null,
  };

  await db.collection(COLL).doc(code).set(doc);

  const base = process.env.APP_BASE_URL || process.env.NEXT_PUBLIC_BASE_URL || "";
  if (!base) throw new Error("BASE_URL not configured");

  return `${sanitizeBase(base)}/r/${code}`;
}

export async function expandShortLink(code: string): Promise<string | null> {
  const db = getDb();
  const snap = await db.collection(COLL).doc(code).get();
  if (!snap.exists) return null;

  const data = snap.data() as ShortLinkDoc | undefined;
  const dest = (data?.targetUrl || data?.url || "").trim();

  if (!isValidTarget(dest)) return null;

  await snap.ref.set(
    { hits: (data?.hits || 0) + 1, lastHitAt: Date.now() },
    { merge: true }
  );

  return dest;
}
====[ END FILE: src/server/short-links.ts ]=========================================================

====[ START FILE: src/server/withCors.ts (1.1 KB) ]=================================================
// src/server/withCors.ts
import type { NextApiHandler, NextApiRequest, NextApiResponse } from "next";

const ALLOW_ORIGINS = [
  "http://localhost:3000",
  "https://theqah.com.sa",
  "https://www.theqah.com.sa",
];

// التصدير المُسمّى
export function withCors(handler: NextApiHandler): NextApiHandler {
  return async (req: NextApiRequest, res: NextApiResponse) => {
    const origin = req.headers.origin || "";

    if (ALLOW_ORIGINS.includes(origin)) {
      res.setHeader("Access-Control-Allow-Origin", origin);
      res.setHeader("Vary", "Origin");
      res.setHeader("Access-Control-Allow-Credentials", "true");
      res.setHeader("Access-Control-Allow-Methods", "GET,POST,PUT,PATCH,DELETE,OPTIONS");
      res.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization, X-Requested-With");
    }

    if (req.method === "OPTIONS") {
      res.status(204).end();
      return;
    }

    return handler(req, res);
  };
}

// ✅ (اختياري) وفّر default export كمان علشان أي استيرادات قديمة ما تقعش
export default withCors;
====[ END FILE: src/server/withCors.ts ]============================================================

====[ START FILE: src/server/zid/state.ts (979 B) ]=================================================
//src/server/zid/state.ts
import crypto from 'crypto';
import { dbAdmin } from '@/lib/firebaseAdmin';

const TTL_MS = 10 * 60 * 1000; // 10 دقائق

export async function createZidState(uid: string) {
  const db = dbAdmin();
  const state = crypto.randomBytes(16).toString('base64url');
  await db.collection('zid_states').doc(state).set({
    uid,
    createdAt: Date.now(),
    expiresAt: Date.now() + TTL_MS,
  });
  return state;
}

export async function consumeZidState(state: string) {
  const db = dbAdmin();
  const ref = db.collection('zid_states').doc(state);
  const snap = await ref.get();
  if (!snap.exists) return { ok: false as const, reason: 'invalid' as const };
  const data = snap.data() as { uid: string; expiresAt: number };
  if (Date.now() > data.expiresAt) {
    await ref.delete();
    return { ok: false as const, reason: 'expired' as const };
  }
  await ref.delete();
  return { ok: true as const, uid: data.uid };
}
====[ END FILE: src/server/zid/state.ts ]===========================================================

====[ START FILE: src/server/zid/tokens.ts (883 B) ]================================================
import { dbAdmin } from '@/lib/firebaseAdmin';

export type ZidTokens = {
  access_token: string;
  refresh_token?: string;
  token_type?: string;
  expires_in?: number;
  expires_at: number; // millis
  scope?: string;
  raw?: unknown;
};

type StoreDoc = {
  zid?: {
    connected?: boolean;
    tokens?: ZidTokens;
    updatedAt?: number;
  };
};

export async function saveZidTokens(uid: string, tokens: ZidTokens) {
  const db = dbAdmin();
  await db.collection('stores').doc(uid).set(
    {
      zid: { connected: true, tokens, updatedAt: Date.now() },
    },
    { merge: true }
  );
}

export async function getZidTokens(uid: string): Promise<ZidTokens | null> {
  const db = dbAdmin();
  const snap = await db.collection('stores').doc(uid).get();
  const data = snap.data() as StoreDoc | undefined;
  return data?.zid?.tokens || null;
}
====[ END FILE: src/server/zid/tokens.ts ]==========================================================

====[ START FILE: src/styles/globals.css (4.9 KB) ]=================================================
/* ==== Font (Cairo) ==== */
@import url('https://fonts.googleapis.com/css2?family=Cairo:wght@400;500;600;700&display=swap');

/* ==== Tailwind Layers ==== */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* ==== Base: RTL + Smoothing ==== */
html { direction: rtl; }
* { -webkit-tap-highlight-color: transparent; }
html, body, #__next { height: 100%; }
body {
  font-family: "Cairo", ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* ==== Design Tokens (HSL variables) ==== */
@layer base {
  :root {
    /* brand */
    --brand: 152 63% 34%;          /* emerald-600 */
    --brand-foreground: 0 0% 100%;
    --brand-soft: 152 80% 95%;
    --brand-ring: 152 63% 34%;

    /* surface */
    --background: 210 20% 98%;
    --foreground: 222 47% 11%;
    --card: 0 0% 100%;
    --card-foreground: 222 47% 11%;
    --muted: 210 20% 96%;
    --muted-foreground: 215 16% 47%;

    /* borders/forms */
    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: var(--brand);

    /* feedback */
    --success: 152 63% 34%;
    --warning: 38 92% 50%;
    --danger: 0 72% 51%;

    /* radius */
    --radius: 14px;
  }

  .dark {
    --background: 222 47% 7%;
    --foreground: 210 40% 98%;
    --card: 222 47% 9%;
    --card-foreground: 210 40% 98%;
    --muted: 222 47% 12%;
    --muted-foreground: 217 15% 65%;
    --border: 216 34% 17%;
    --input: 216 34% 17%;
    --brand: 152 61% 42%;
    --brand-soft: 152 30% 16%;
    --brand-foreground: 0 0% 100%;
  }

  body { @apply bg-[hsl(var(--background))] text-[hsl(var(--foreground))]; }
  * { border-color: hsl(var(--border)); }
}

/* ==== Typography ==== */
@layer base {
  h1 { @apply text-3xl md:text-4xl font-extrabold leading-[1.15] tracking-tight; }
  h2 { @apply text-2xl md:text-3xl font-bold leading-snug; }
  h3 { @apply text-xl md:text-2xl font-semibold; }
  p  { @apply leading-8 text-[15px] md:text-[16px] text-[hsl(var(--muted-foreground))]; }
  a  { @apply text-[hsl(var(--brand))] hover:opacity-90 transition; }
  ::selection { background: hsl(var(--brand)/.15); }
}

/* ==== Components (utility-friendly) ==== */
@layer components {
  .container-pro { @apply mx-auto max-w-7xl px-4 sm:px-6 lg:px-8; }

  .card {
    @apply bg-[hsl(var(--card))] text-[hsl(var(--card-foreground))]
           rounded-2xl border shadow-sm;
  }

  .btn {
    @apply inline-flex items-center justify-center gap-2 rounded-xl px-4 py-2.5
           text-sm font-semibold transition focus:outline-none
           ring-offset-2 ring-offset-[hsl(var(--background))]
           focus-visible:ring-2;
  }
  .btn-primary {
    @apply btn bg-[hsl(var(--brand))] text-[hsl(var(--brand-foreground))]
           hover:brightness-105 active:scale-[.98]
           focus-visible:ring-[hsl(var(--brand-ring))];
  }
  .btn-outline {
    @apply btn border border-[hsl(var(--border))]
           text-[hsl(var(--foreground))] bg-transparent
           hover:bg-[hsl(var(--brand-soft))] focus-visible:ring-[hsl(var(--brand-ring))];
  }
  .btn-ghost {
    @apply btn bg-transparent hover:bg-[hsl(var(--muted))];
  }

  .input {
    @apply w-full rounded-xl border bg-white/80 backdrop-blur-sm
           px-3.5 py-2.5 text-[15px]
           focus:outline-none focus:ring-2 focus:ring-[hsl(var(--brand))]
           border-[hsl(var(--input))] placeholder:text-[hsl(var(--muted-foreground))];
  }

  .badge {
    @apply inline-flex items-center rounded-full px-3 py-1 text-xs font-medium
           bg-[hsl(var(--brand-soft))] text-[hsl(var(--brand))];
  }
}

/* ==== Fancy backgrounds & animations ==== */
@layer utilities {
  .bg-hero {
    background-image:
      radial-gradient(1200px 600px at 100% -10%, hsl(var(--brand)/.08), transparent 50%),
      radial-gradient(900px 500px at -10% -10%, hsl(var(--brand)/.06), transparent 50%),
      linear-gradient(to bottom, hsl(var(--background)), hsl(var(--background)));
  }
  .shadow-smooth { box-shadow: 0 10px 30px rgba(2, 6, 23, .06); }
  .shadow-pop   { box-shadow: 0 12px 20px rgba(16, 185, 129, .15); }

  @keyframes float { 0%,100% { transform: translateY(0) } 50% { transform: translateY(-6px) } }
  .animate-float { animation: float 3s ease-in-out infinite; }

  @keyframes shimmer { 0% { background-position: -200% 0 } 100% { background-position: 200% 0 } }
  .animate-shimmer {
    background: linear-gradient(90deg,#0000,rgba(255,255,255,.35),#0000);
    background-size: 200% 100%; animation: shimmer 1.25s linear infinite;
  }

  /* Scrollbar (webkit) */
  .nice-scroll::-webkit-scrollbar { width: 10px; height: 10px; }
  .nice-scroll::-webkit-scrollbar-thumb { background: hsl(var(--border)); border-radius: 999px; }
  .nice-scroll::-webkit-scrollbar-thumb:hover { background: hsl(var(--brand)/.6); }
}
====[ END FILE: src/styles/globals.css ]============================================================

====[ START FILE: src/types/api.d.ts (169 B) ]======================================================
import type { NextApiRequest } from 'next';
import type { File } from 'multer';

export interface NextApiRequestWithFile extends NextApiRequest {
  file?: File;
}
====[ END FILE: src/types/api.d.ts ]================================================================

====[ START FILE: src/types/uploadcare.d.ts (681 B) ]===============================================
// src/types/uploadcare.d.ts
declare global {
  interface UploadcareFile {
    cdnUrl?: string;
    promise?: () => Promise<UploadcareFile>;
  }
  interface UploadcareFilesGroup {
    files(): UploadcareFile[];
    promise(): Promise<UploadcareFilesGroup>;
    cdnUrl?: string;
  }
  interface UploadcareWidget {
    value(): UploadcareFile | UploadcareFilesGroup | null;
    onChange(cb: (file: UploadcareFile | UploadcareFilesGroup | null) => void): void;
    openDialog?: () => void;
  }
  interface UploadcareNamespace {
    Widget(el: HTMLInputElement): UploadcareWidget;
  }
  interface Window {
    uploadcare?: UploadcareNamespace;
  }
}
export {};
====[ END FILE: src/types/uploadcare.d.ts ]=========================================================

====[ START FILE: src/utils/apiClient.ts (1.1 KB) ]=================================================
// src/utils/apiClient.ts
import Cookies from 'js-cookie';
import { isServer } from './isServer';
// eslint-disable-next-line @typescript-eslint/no-explicit-any
export async function apiFetch(url: string, options: RequestInit = {}, req?: any)
 {
  let token: string | null = null;

  if (isServer()) {
    // SSR أو API Route: قراءة التوكن من الكوكيز في الهيدر
    const cookieHeader = req?.headers?.cookie || '';
    const match = cookieHeader.match(/token=([^;]+)/);
    token = match ? match[1] : null;
  } else {
    // Client-side: قراءة من localStorage أو js-cookie
    token = localStorage.getItem('token') || Cookies.get('token') || null;
  }

  const headers = {
    ...(options.headers || {}),
    'Content-Type': 'application/json',
    ...(token ? { Authorization: `Bearer ${token}` } : {}),
  };

  const res = await fetch(url, { ...options, headers });

  if (!res.ok) {
    const error = await res.json().catch(() => ({}));
    throw new Error(error.message || 'API request failed');
  }

  return res.json();
}
====[ END FILE: src/utils/apiClient.ts ]============================================================

====[ START FILE: src/utils/email.ts (1.5 KB) ]=====================================================
// src/utils/email.ts
import nodemailer from 'nodemailer';

type EmailData = {
  to?: string;
  name: string;
  storeName: string;
  reviewLink: string;
};

export async function sendEmail({ to, name, storeName, reviewLink }: EmailData) {
  if (!to) return;

  const transporter = nodemailer.createTransport({
    host: process.env.EMAIL_HOST!,
    port: Number(process.env.EMAIL_PORT!),
    secure: process.env.EMAIL_SECURE === 'true',
    auth: {
      user: process.env.EMAIL_USER!,
      pass: process.env.EMAIL_PASS!,
    },
  });

  await transporter.sendMail({
    from: process.env.EMAIL_FROM!,
    to,
    subject: 'وش رأيك؟ نبي نسمع منك',
    html: `
      <div dir="rtl" style="font-family:Tahoma, sans-serif">
        <p>ياهلا والله ${name}،</p>
        <p>طلبك من <strong>${storeName}</strong> وصلنا، وإن شاء الله كان كل شي على قد رضاك</p>
        <p>لو تكرمت عطنا تقييم بسيط يساعدنا نتحسن ويساعد غيرك يعرف وش اللي قدّامه.</p>
        <p><a href="${reviewLink}" style="background-color:#4CAF50;color:white;padding:10px 20px;text-decoration:none;border-radius:4px;">اضغط هنا وسجل رأيك</a></p>
        <p>وإذا كنت شريت فعليًا، بنحط بجنب تقييمك علامة “مشتري ثقة”</p>
        <p>شاكرين ومقدّرين لك<br>فريق ثقة</p>
        <small>theqah.com.sa</small>
      </div>
    `,
  });
}
====[ END FILE: src/utils/email.ts ]================================================================

====[ START FILE: src/utils/getAuth.ts (494 B) ]====================================================
// File: src/utils/getAuth.ts
import { authAdmin } from '@/lib/firebaseAdmin';
import type { NextApiRequest } from 'next';

export async function getAuth(req: NextApiRequest) {
  const authz = req.headers.authorization || '';
  const m = authz.match(/^Bearer\s+(.+)$/i);
  const token = m?.[1];

  if (!token) throw new Error('Unauthorized: Missing token');

  const decoded = await authAdmin().verifyIdToken(token);
  return { uid: decoded.uid, email: decoded.email ?? null };
}
====[ END FILE: src/utils/getAuth.ts ]==============================================================

====[ START FILE: src/utils/getAuthFromRequest.ts (731 B) ]=========================================
// src/utils/getAuthFromRequest.ts
import type { NextApiRequest } from "next";
import { getAuthAdmin } from "@/server/firebase-admin";

/**
 * يقرأ Bearer ID Token من الهيدر "Authorization"
 * ويعيد uid + الكائن المفكوك كاملًا.
 * يرمي Error برسالة واضحة لو التوكن مفقود/غير صالح.
 */
export async function getAuthFromRequest(req: NextApiRequest) {
  const authHeader = req.headers.authorization || "";
  const token = authHeader.replace(/^Bearer\s+/i, "");
  if (!token) {
    throw new Error("Unauthorized: Missing Bearer token");
  }

  const decoded = await getAuthAdmin().verifyIdToken(token);
  return { uid: decoded.uid, decoded };
}
====[ END FILE: src/utils/getAuthFromRequest.ts ]===================================================

====[ START FILE: src/utils/isServer.ts (62 B) ]====================================================
export const isServer = () => typeof window === 'undefined';
====[ END FILE: src/utils/isServer.ts ]=============================================================

====[ START FILE: src/utils/verifyAdmin.ts (2.3 KB) ]===============================================
import type { NextApiRequest } from 'next';
import { authAdmin, dbAdmin } from '@/lib/firebaseAdmin';
import type { DecodedIdToken } from 'firebase-admin/auth';

type Decoded = DecodedIdToken & { role?: string };

function getTokenFromReq(req: NextApiRequest): string | null {
  const authHeader = (req.headers.authorization || req.headers.Authorization) as
    | string
    | undefined;
  if (authHeader && authHeader.startsWith('Bearer ')) {
    return authHeader.slice(7);
  }
  // Optional: read from cookie "token" or "session"
  const cookie = req.headers.cookie || '';
  const tokenMatch =
    cookie.match(/(?:^|;\s*)(?:token|session)=([^;]+)/)?.[1] || null;
  return tokenMatch;
}

function hasAdminClaim(decoded: DecodedIdToken): boolean {
  // custom claim: decoded.admin === true
  // or decoded.role === 'admin'
  const hasura =
    (decoded['https://hasura.io/jwt/claims'] as
      | Record<string, unknown>
      | undefined) ?? undefined;
  const hasuraRole =
    typeof hasura?.['x-hasura-default-role'] === 'string'
      ? (hasura['x-hasura-default-role'] as string)
      : undefined;

  return (
    (decoded as { admin?: unknown }).admin === true ||
    (decoded as { role?: unknown }).role === 'admin' ||
    hasuraRole === 'admin'
  );
}

/**
 * Throws on failure with messages:
 *  - 'unauthenticated'
 *  - 'permission-denied'
 */
export async function verifyAdmin(
  req: NextApiRequest,
  options?: { checkRevoked?: boolean }
): Promise<Decoded> {
  const { checkRevoked = false } = options || {};
  const auth = authAdmin();
  const db = dbAdmin();

  const idToken = getTokenFromReq(req);
  if (!idToken) {
    throw new Error('unauthenticated: missing token');
  }

  let decoded: Decoded;
  try {
    decoded = (await auth.verifyIdToken(idToken, checkRevoked)) as Decoded;
  } catch {
    throw new Error('unauthenticated: invalid token');
  }

  // Accept admin via custom claims or users doc
  if (hasAdminClaim(decoded)) return decoded;

  // fallback: check Firestore user doc
  const userDoc = await db.collection('users').doc(decoded.uid).get();
  const role = (userDoc.data() as { role?: string } | undefined)?.role;
  if (role === 'admin') {
    decoded.role = 'admin';
    return decoded;
  }

  throw new Error('permission-denied: not admin');
}
====[ END FILE: src/utils/verifyAdmin.ts ]==========================================================

====[ START FILE: src/utils/verifyStore.ts (1.6 KB) ]===============================================
// src/utils/verifyStore.ts
import type { NextApiRequest } from "next";
import { authAdmin } from "@/lib/firebaseAdmin";

export type AuthedRequest = NextApiRequest & { storeId?: string; storeEmail?: string };

function readBearer(req: NextApiRequest): string | null {
  const h = req.headers.authorization;
  if (h?.startsWith("Bearer ")) return h.slice(7);

  // بدائل شائعة بالكوكيز
  const cookieToken = (req.cookies?.token as string | undefined)
    || (req.cookies?.Authorization as string | undefined)
    || null;
  if (cookieToken?.startsWith("Bearer ")) return cookieToken.slice(7);
  return cookieToken;
}

export async function verifyStore(req: NextApiRequest): Promise<{ uid: string; email?: string }> {
  const token = readBearer(req);
  if (!token) {
    const e = new Error("MISSING_ID_TOKEN");
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    (e as any).status = 401;
    throw e;
  }

  try {
    const decoded = await authAdmin().verifyIdToken(token);
    (req as AuthedRequest).storeId = decoded.uid;
    (req as AuthedRequest).storeEmail = decoded.email ?? undefined;
    return { uid: decoded.uid, email: decoded.email ?? undefined };
  } catch (err) {
    const msg = err instanceof Error ? err.message : String(err);
    if (msg.includes('incorrect "aud"')) {
      const e = new Error("FIREBASE_AUDIENCE_MISMATCH");
      //eslint-disable-next-line @typescript-eslint/no-explicit-any
      (e as any).status = 401;
      throw e;
    }
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    (err as any).status = 401;
    throw err;
  }
}
====[ END FILE: src/utils/verifyStore.ts ]==========================================================

====[ START FILE: src/utils/verifyUser.ts (1.1 KB) ]================================================
import type { NextApiRequest } from "next";
import { authAdmin } from "@/lib/firebaseAdmin"; // لاحظ إنها دالة: authAdmin()

export async function verifyUser(req: NextApiRequest): Promise<{ uid: string; email?: string }> {
  // اقرأ التوكن من Authorization أو كوكي (لو عندك اسم كوكي)
  const auth = req.headers.authorization || "";
  const [scheme, token] = auth.split(" ");
  if (scheme !== "Bearer" || !token) {
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    const err = new Error("MISSING_ID_TOKEN") as any;
    err.status = 401;
    throw err;
  }

  try {
    const decoded = await authAdmin().verifyIdToken(token, true); // ✅ Admin SDK
    return { uid: decoded.uid, email: decoded.email || undefined };
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
  } catch (e: any) {
    // لو التوكن منتهي/غير صالح → 401 واضحة
    //eslint-disable-next-line @typescript-eslint/no-explicit-any
    const err = new Error(`INVALID_ID_TOKEN: ${e?.message || e}`) as any;
    err.status = 401;
    throw err;
  }
}
====[ END FILE: src/utils/verifyUser.ts ]===========================================================

====[ START FILE: tailwind.config.ts (2.2 KB) ]=====================================================
// tailwind.config.ts
import type { Config } from "tailwindcss";
import forms from "@tailwindcss/forms";
import typography from "@tailwindcss/typography";
import animate from "tailwindcss-animate";

const config: Config = {
  darkMode: ["class"],
  content: [
    "./src/**/*.{js,ts,jsx,tsx}",   // ← مهم لتمرير التشيك
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./app/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      fontFamily: { sans: ["Cairo", "ui-sans-serif", "system-ui"] },
      colors: {
        primary: { DEFAULT: "hsl(var(--primary))", foreground: "hsl(var(--primary-foreground))" },
        secondary: { DEFAULT: "hsl(var(--secondary))", foreground: "hsl(var(--secondary-foreground))" },
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        card: { DEFAULT: "hsl(var(--card))", foreground: "hsl(var(--card-foreground))" },
        popover: { DEFAULT: "hsl(var(--popover))", foreground: "hsl(var(--popover-foreground))" },
        muted: { DEFAULT: "hsl(var(--muted))", foreground: "hsl(var(--muted-foreground))" },
        accent: { DEFAULT: "hsl(var(--accent))", foreground: "hsl(var(--accent-foreground))" },
        destructive: { DEFAULT: "hsl(var(--destructive))", foreground: "hsl(var(--destructive-foreground))" },
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        chart: {
          "1": "hsl(var(--chart-1))",
          "2": "hsl(var(--chart-2))",
          "3": "hsl(var(--chart-3))",
          "4": "hsl(var(--chart-4))",
          "5": "hsl(var(--chart-5))",
        },
      },
      borderRadius: {
        lg: "var(--radius)", md: "calc(var(--radius) - 2px)", sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        fadeInUp: { "0%": { opacity: "0", transform: "translateY(10px)" }, "100%": { opacity: "1", transform: "translateY(0)" } },
        pulseGlow: { "0%, 100%": { boxShadow: "0 0 0 rgba(0,0,0,0)" }, "50%": { boxShadow: "0 0 10px rgba(59,130,246,0.5)" } },
      },
      animation: { fadeInUp: "fadeInUp 0.5s ease-out", pulseGlow: "pulseGlow 1.5s infinite ease-in-out" },
    },
  },
  plugins: [forms, typography, animate],
};

export default config;
====[ END FILE: tailwind.config.ts ]================================================================

====[ START FILE: test.html (132 B) ]===============================================================
<div id="theqah-reviews" data-store="<UID>" data-product="SKU-555"></div>
<script src="/widgets/theqah-widget.js" defer></script>
====[ END FILE: test.html ]=========================================================================

====[ START FILE: tools/dump-project.mjs (6.5 KB) ]=================================================
#!/usr/bin/env node
/**
 * Dump all project files into a single TXT with separators (ESM version)
 * Usage:
 *   node tools/dump-project.mjs
 *   node tools/dump-project.mjs --dir . --out project-dump.txt
 *   node tools/dump-project.mjs --include-env --include-binaries
 *   node tools/dump-project.mjs --max-bytes 2097152
 */

import fs from 'fs';
import * as fsp from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

// ----- resolve __dirname in ESM -----
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// ---------------- CLI args ----------------
const args = process.argv.slice(2);
function getFlag(name) {
  const ix = args.indexOf(`--${name}`);
  if (ix === -1) return undefined;
  const next = args[ix + 1];
  return next && !next.startsWith('--') ? next : true;
}
const rootDir = path.resolve(getFlag('dir') || process.cwd());
const outFile = path.resolve(getFlag('out') || path.join(process.cwd(), 'project-dump.txt'));
const includeBinaries = Boolean(getFlag('include-binaries'));
const includeEnv = Boolean(getFlag('include-env'));
const maxBytes = Number(getFlag('max-bytes') || 1_048_576); // 1MB default

// ------------- Ignore rules ---------------
const IGNORED_DIRS = new Set([
  'node_modules',
  '.git',
  '.next',
  '.vercel',
  '.turbo',
  '.cache',
  'dist',
  'build',
  'out',
  'coverage',
  '.idea',
  '.vscode',
  '.parcel-cache',
  '.pnpm-store',
  '.expo',
  'tmp',
  'temp',
]);

const BINARY_EXTS = new Set([
  // archives
  '.zip', '.tar', '.gz', '.bz2', '.xz', '.7z', '.rar',
  // images
  '.png', '.jpg', '.jpeg', '.webp', '.gif', '.ico', '.bmp', '.tiff', '.psd', '.ai', '.svg',
  // fonts
  '.ttf', '.otf', '.woff', '.woff2', '.eot',
  // audio/video
  '.mp3', '.wav', '.ogg', '.mp4', '.m4a', '.mov', '.avi', '.mkv', '.webm',
  // docs/binaries
  '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx',
  '.exe', '.dll', '.so', '.dylib', '.bin', '.wasm',
]);

const ALWAYS_SKIP_FILES = new Set([
  // ممكن تسيبها فاضية أو تضيف لاكس لو عايز
  // 'package-lock.json', 'pnpm-lock.yaml', 'yarn.lock',
]);

function isEnvFile(base) {
  return base === '.env' || base.startsWith('.env.');
}

function isBinaryByExt(filePath) {
  const ext = path.extname(filePath).toLowerCase();
  return BINARY_EXTS.has(ext);
}

function isInsideIgnoredDir(absPath) {
  const rel = path.relative(rootDir, absPath);
  if (!rel || rel.startsWith('..')) return false;
  const parts = rel.split(path.sep);
  return parts.some(p => IGNORED_DIRS.has(p));
}

function formatBytes(n) {
  if (n < 1024) return `${n} B`;
  const units = ['KB','MB','GB','TB'];
  let u = -1, size = n;
  do { size /= 1024; u++; } while (size >= 1024 && u < units.length - 1);
  return `${size.toFixed(1)} ${units[u]}`;
}

// async generator to walk the tree
async function* walk(dir) {
  let entries;
  try {
    entries = await fsp.readdir(dir, { withFileTypes: true });
  } catch {
    return;
  }
  for (const d of entries) {
    const abs = path.join(dir, d.name);
    if (isInsideIgnoredDir(abs)) continue;
    if (d.isDirectory()) {
      yield* walk(abs);
    } else if (d.isFile()) {
      yield abs;
    }
  }
}

async function gatherFiles() {
  const files = [];
  for await (const abs of walk(rootDir)) {
    // skip output file itself
    if (path.resolve(abs) === outFile) continue;

    const base = path.basename(abs);
    if (ALWAYS_SKIP_FILES.has(base)) continue;

    if (!includeEnv && isEnvFile(base)) continue;

    files.push(abs);
  }
  files.sort((a, b) => a.localeCompare(b));
  return files;
}

function makeSeparator(title) {
  const line = `====[ ${title} ]`;
  const pad = Math.max(4, 100 - line.length);
  return `${line}${'='.repeat(pad)}\n`;
}

(async function main() {
  await fsp.mkdir(path.dirname(outFile), { recursive: true });

  const out = fs.createWriteStream(outFile, { encoding: 'utf8' });

  const started = new Date();
  out.write(makeSeparator('PROJECT DUMP - METADATA'));
  out.write(`Root   : ${rootDir}\n`);
  out.write(`Output : ${outFile}\n`);
  out.write(`When   : ${started.toISOString()}\n`);
  out.write(`Rules  : skip binaries=${!includeBinaries}, skip .env*=${!includeEnv}, maxBytes=${formatBytes(maxBytes)}\n\n`);

  const files = await gatherFiles();

  out.write(makeSeparator('FILE LIST'));
  for (const f of files) {
    try {
      const st = await fsp.stat(f);
      out.write(`${path.relative(rootDir, f).split(path.sep).join('/')}\t(${formatBytes(st.size)})\n`);
    } catch {
      // ignore stat errors
    }
  }
  out.write('\n');

  out.write(makeSeparator('FILE CONTENTS'));

  let included = 0, skipped = 0;

  for (const abs of files) {
    const rel = path.relative(rootDir, abs).split(path.sep).join('/');
    let st;
    try {
      st = await fsp.stat(abs);
    } catch (err) {
      out.write(makeSeparator(`SKIP (stat error): ${rel}`));
      out.write(String(err?.message || err) + '\n\n');
      skipped++;
      continue;
    }

    const isBin = isBinaryByExt(abs);
    if (isBin && !includeBinaries) {
      out.write(makeSeparator(`SKIP (binary): ${rel}`));
      out.write(`Size: ${formatBytes(st.size)}\n\n`);
      skipped++;
      continue;
    }

    if (st.size > maxBytes) {
      out.write(makeSeparator(`SKIP (too large): ${rel}`));
      out.write(`Size: ${formatBytes(st.size)} > limit ${formatBytes(maxBytes)}\n\n`);
      skipped++;
      continue;
    }

    out.write(makeSeparator(`START FILE: ${rel} (${formatBytes(st.size)})`));
    try {
      const buf = await fsp.readFile(abs);
      const content = isBin && includeBinaries ? buf.toString('base64') : buf.toString('utf8');
      if (isBin && includeBinaries) {
        out.write(`[BINARY FILE DUMPED AS BASE64]\n`);
      }
      out.write(content);
      if (!content.endsWith('\n')) out.write('\n');
      included++;
    } catch (err) {
      out.write(`[[ ERROR READING FILE: ${String(err?.message || err)} ]]\n`);
      skipped++;
    }
    out.write(makeSeparator(`END FILE: ${rel}`));
    out.write('\n');
  }

  out.write(makeSeparator('SUMMARY'));
  out.write(`Total files seen : ${files.length}\n`);
  out.write(`Included         : ${included}\n`);
  out.write(`Skipped          : ${skipped}\n`);
  out.write(`Finished at      : ${new Date().toISOString()}\n`);
  out.end();

  out.on('finish', () => {
    console.log(`✅ Dump complete: ${outFile}`);
  });
})();
====[ END FILE: tools/dump-project.mjs ]============================================================

====[ START FILE: tsconfig.json (602 B) ]===========================================================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
====[ END FILE: tsconfig.json ]=====================================================================

====[ SUMMARY ]=====================================================================================
Total files seen : 214
Included         : 200
Skipped          : 14
Finished at      : 2025-09-20T06:35:49.916Z
